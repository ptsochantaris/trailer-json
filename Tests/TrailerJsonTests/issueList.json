{
    "data": {
        "nodes": [
            {
                "__typename": "Repository",
                "issues": {
                    "edges": [
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W7pu-",
                                "bodyText": "Description\nI am getting crash on Swift 6.0 where all works fine on 5.9, can be related to @sendable, if Combine block is not marked inside sink as @Sendable and compiler not protest about it I am getting crash on runtime.\nReproduction\nextension Notification: @unchecked @retroactive Sendable {}\n\nextension Socket {\n    @Socket.ClientActor\n    public final class Client: SocketProviding { // swiftlint:disable:this type_body_length\n        \n        nonisolated public convenience init(notificationCenter: NotificationCenter) {\n            self.init(center: notificationCenter)\n            \n            Task { @Socket.ClientActor in\n                await setupObservers()\n            }\n        }\n        \n        private func setupObservers() async {\n            notificationCenter\n                .publisher(for: UIApplication.didBecomeActiveNotification)\n                .sink { [weak self] notification in\n                    Task { @Socket.ClientActor [weak self] in\n                        self?.handleDidBecomeActive(notification: notification)\n                    }\n                }.store(in: &bag)\n        }\n    }\n}\nStack dump\n(lldb) bt\n* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT\n    frame #0: 0x0000000110654f30 libsystem_kernel.dylib`__pthread_kill + 8\n    frame #1: 0x00000001106e7124 libsystem_pthread.dylib`pthread_kill + 256\n    frame #2: 0x000000010f5874ec libsystem_c.dylib`abort + 104\n    frame #3: 0x000000010f05f44c libswift_Concurrency.dylib`swift::swift_Concurrency_fatalErrorv(unsigned int, char const*, char*) + 28\n    frame #4: 0x000000010f05f468 libswift_Concurrency.dylib`swift::swift_Concurrency_fatalError(unsigned int, char const*, ...) + 28\n    frame #5: 0x000000010f05f0e0 libswift_Concurrency.dylib`swift_task_checkIsolated + 152\n    frame #6: 0x000000010f05c3e0 libswift_Concurrency.dylib`swift_task_isCurrentExecutorImpl(swift::SerialExecutorRef) + 284\n    frame #7: 0x0000000120f34a40 geneva-dev.debug.dylib`closure #8 in Socket.Client.setupObservers(notification=Foundation.Notification @ 0x000000016ddbed10) at Socket+Client.swift:0\n    frame #8: 0x0000000106be00ac Combine`Combine.Subscribers.Sink.receive(τ_0_0) -> Combine.Subscribers.Demand + 84\n    frame #9: 0x0000000106be0760 Combine`protocol witness for Combine.Subscriber.receive(τ_0_0.Input) -> Combine.Subscribers.Demand in conformance Combine.Subscribers.Sink<τ_0_0, τ_0_1> : Combine.Subscriber in Combine + 20\n    frame #10: 0x000000010b249f28 Foundation`closure #1 @Sendable (Foundation.Notification) -> () in Foundation.Notification.Subscription.init(__C.NSNotificationCenter, __C.NSNotificationName, Swift.Optional<Swift.AnyObject>, τ_0_0) -> Foundation.Notification.Subscription<τ_0_0> + 268\n    frame #11: 0x000000010b249aa8 Foundation`reabstraction thunk helper from @escaping @callee_guaranteed @Sendable (@in_guaranteed Foundation.Notification) -> () to @escaping @callee_unowned @convention(block) @Sendable (@unowned __C.NSNotification) -> () + 48\n    frame #12: 0x0000000106e7eaec CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 120\n    frame #13: 0x0000000106e7ea24 CoreFoundation`___CFXRegistrationPost_block_invoke + 84\n    frame #14: 0x0000000106e7df14 CoreFoundation`_CFXRegistrationPost + 404\n    frame #15: 0x0000000106e7d8f0 CoreFoundation`_CFXNotificationPost + 688\n    frame #16: 0x000000010b5f4350 Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] + 88\n    frame #17: 0x000000014c00d320 UIKitCore`-[UIApplication _stopDeactivatingForReason:] + 1364\n    frame #18: 0x000000014b62d4f0 UIKitCore`-[_UISceneLifecycleMultiplexer _performBlock:withApplicationOfDeactivationReasons:fromReasons:] + 268\n    frame #19: 0x000000014b62d794 UIKitCore`-[_UISceneLifecycleMultiplexer _evalTransitionToSettings:fromSettings:forceExit:withTransitionStore:] + 576\n    frame #20: 0x000000014b62d1a0 UIKitCore`-[_UISceneLifecycleMultiplexer uiScene:transitionedFromState:withTransitionContext:] + 244\n    frame #21: 0x000000014b638058 UIKitCore`__186-[_UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]_block_invoke + 140\n    frame #22: 0x000000014bab8770 UIKitCore`+[BSAnimationSettings(UIKit) tryAnimatingWithSettings:fromCurrentState:actions:completion:] + 656\n    frame #23: 0x000000014bbdeaa4 UIKitCore`_UISceneSettingsDiffActionPerformChangesWithTransitionContextAndCompletion + 196\n    frame #24: 0x000000014b637d64 UIKitCore`-[_UIWindowSceneFBSSceneTransitionContextDrivenLifecycleSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:] + 288\n    frame #25: 0x000000014b47c084 UIKitCore`__64-[UIScene scene:didUpdateWithDiff:transitionContext:completion:]_block_invoke.199 + 608\n    frame #26: 0x000000014b47ae2c UIKitCore`-[UIScene _emitSceneSettingsUpdateResponseForCompletion:afterSceneUpdateWork:] + 200\n    frame #27: 0x000000014b47bd08 UIKitCore`-[UIScene scene:didUpdateWithDiff:transitionContext:completion:] + 220\n    frame #28: 0x000000014bae2f40 UIKitCore`-[UIApplicationSceneClientAgent scene:handleEvent:withCompletion:] + 308\n    frame #29: 0x0000000115c36380 FrontBoardServices`__76-[FBSScene updater:didUpdateSettings:withDiff:transitionContext:completion:]_block_invoke.159 + 216\n    frame #30: 0x0000000115c350a4 FrontBoardServices`-[FBSScene _callOutQueue_coalesceClientSettingsUpdates:] + 60\n    frame #31: 0x0000000115c3611c FrontBoardServices`-[FBSScene updater:didUpdateSettings:withDiff:transitionContext:completion:] + 744\n    frame #32: 0x0000000115c62fe0 FrontBoardServices`__94-[FBSWorkspaceScenesClient _queue_updateScene:withSettings:diff:transitionContext:completion:]_block_invoke_2 + 120\n    frame #33: 0x0000000115c41618 FrontBoardServices`-[FBSWorkspace _calloutQueue_executeCalloutFromSource:withBlock:] + 160\n    frame #34: 0x0000000115c62f30 FrontBoardServices`__94-[FBSWorkspaceScenesClient _queue_updateScene:withSettings:diff:transitionContext:completion:]_block_invoke + 308\n    frame #35: 0x000000010ef627b8 libdispatch.dylib`_dispatch_client_callout + 16\n    frame #36: 0x000000010ef663bc libdispatch.dylib`_dispatch_block_invoke_direct + 388\n    frame #37: 0x0000000115c84b58 FrontBoardServices`__FBSSERIALQUEUE_IS_CALLING_OUT_TO_A_BLOCK__ + 44\n    frame #38: 0x0000000115c84a34 FrontBoardServices`-[FBSMainRunLoopSerialQueue _targetQueue_performNextIfPossible] + 196\n    frame #39: 0x0000000115c84b8c FrontBoardServices`-[FBSMainRunLoopSerialQueue _performNextFromRunLoopSource] + 24\n    frame #40: 0x0000000106eb0324 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24\n    frame #41: 0x0000000106eb026c CoreFoundation`__CFRunLoopDoSource0 + 172\n    frame #42: 0x0000000106eafa2c CoreFoundation`__CFRunLoopDoSources0 + 324\n    frame #43: 0x0000000106eaa0b0 CoreFoundation`__CFRunLoopRun + 788\n    frame #44: 0x0000000106ea9960 CoreFoundation`CFRunLoopRunSpecific + 536\n    frame #45: 0x000000011efffb10 GraphicsServices`GSEventRunModal + 160\n    frame #46: 0x000000014c011b40 UIKitCore`-[UIApplication _run] + 796\n    frame #47: 0x000000014c015d38 UIKitCore`UIApplicationMain + 124\n    frame #48: 0x000000014b409184 UIKitCore`UIKit.UIApplicationMain(Swift.Int32, Swift.Optional<Swift.UnsafeMutablePointer<Swift.UnsafeMutablePointer<Swift.Int8>>>, Swift.Optional<Swift.String>, Swift.Optional<Swift.String>) -> Swift.Int32 + 100\n    frame #49: 0x000000011f64c450 geneva-dev.debug.dylib`static UIApplicationDelegate.main() at <compiler-generated>:0\n    frame #50: 0x000000011f64c3c0 geneva-dev.debug.dylib`static AppDelegate.$main() at <compiler-generated>:0\n  * frame #51: 0x000000011f64e63c geneva-dev.debug.dylib`main at AppDelegate.swift:37:16\n    frame #52: 0x0000000102095410 dyld_sim`start_sim + 20\n    frame #53: 0x000000010219e154 dyld`start + 2476\n\nExpected behavior\nShould not crash\nEnvironment\nSwift 6.0 (6.0.0.9.10) - Xcode 16 Release\nAdditional information",
                                "state": "OPEN",
                                "createdAt": "2024-09-17T21:47:15Z",
                                "updatedAt": "2024-09-26T09:36:04Z",
                                "number": 76530,
                                "title": "Crash when compiling code using 6.0, can related to retroactive",
                                "url": "https://github.com/swiftlang/swift/issues/76530",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOABfiuA",
                                    "login": "m1entus",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/1565368?u=869a2af95711cc1c9698e71173be67188dfdeaf6&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xN1QyMjo0NzoxNSswMTowMM6W7pu-"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W7qCU",
                                "bodyText": "Description\nXcode is failing to compile a Swift/C++ project due to the below:\n/opt/homebrew/include/boost/asio/basic_socket_acceptor.hpp:473:45: error: no matching constructor for initialization of 'protocol_type' (aka 'boost::asio::ip::tcp')\n  void open(const protocol_type& protocol = protocol_type())\n                                            ^\n<unknown>:0: note: in instantiation of default function argument expression for 'open<boost::asio::ip::tcp, boost::asio::any_io_executor>' required here\n/opt/homebrew/include/boost/asio/ip/tcp.hpp:143:12: note: candidate constructor not viable: requires single argument 'protocol_family', but no arguments were provided\n  explicit tcp(int protocol_family) noexcept\n           ^\n/opt/homebrew/include/boost/asio/ip/tcp.hpp:46:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 0 were provided\nclass tcp\n      ^\n/opt/homebrew/include/boost/asio/ip/tcp.hpp:46:7: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 0 were provided\nclass tcp\n\nThis did not happen prior to Xcode 16.\nReproduction\nCompile Swift with a C++ project that uses Boost asio.\nStack dump\nSwiftCompile normal arm64 /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Player/OverlayView.swift (in target 'Kulve' from project 'Helix')\n    cd /Users/adam/code/xcode_shit/Helix\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -c /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Constants.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/CategoryQuery.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Player/ResolutionPicker/ResolutionPickerView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/TopStreams.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/Account/UserPreferencesView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Chat/ChatContainer.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/PublishTest.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Player/OverlayView.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/ProfileImageView.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Player/StreamTitleView.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/PreferencesView.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/FollowSidebar/FollowItem.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/EmoteView.swift -primary-file /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/MessageView.swift /Users/adam/code/xcode_shit/Helix/Helix/ContentView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/EmoteMenu/MenuTwitchChannel.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/GameStreamView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/FollowedChannel.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/User.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Search/ChannelResultsView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/ProfileImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Chat/Chat.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/MainTabView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/GameStreams.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/GeneralPreferencesView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Chat/Emote/EmoteMenuData.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/EmoteMenu/EmoteMenuImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/ChatView.swift /Users/adam/code/xcode_shit/Helix/Helix/HelixApp.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/Account/UserProfileView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Video.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/Account/UserProfileImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Search/CategoryResultsView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/ChannelQuery.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/misc.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Preferences.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/AuthWebView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/OpenInBrowserButton.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Search/PopOutView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/EmoteMenu/EmoteMenu.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Player/VideoPlayerView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/FirstLoginView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/TopGame.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Search/SearchBarView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Search/ChannelItem.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Player/ResolutionPicker/ResolutionItem.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Modifiers.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/CategoryImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/ChatInput.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/GameImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Search/CategoryItem.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/FollowSidebar/FollowItemImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/EmoteMenu/MenuTwitchGlobal.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/FollowSidebar/FollowedView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/TopStreamsView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/StreamView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/TopGameView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Preferences/Video/VideoPreferencesView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/Extensions.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/VideoPreferences/VideoPreferences.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/TokenView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Views/Chat/BadgeView.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/SearchBar.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/StreamImage.swift /Users/adam/code/xcode_shit/Helix/HelixFrontend/Model/SearchedChannelProfImage.swift /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/DerivedSources/GeneratedAssetSymbols.swift -supplementary-output-file-map /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/supplementaryOutputs-318 -emit-localized-strings -emit-localized-strings-path /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64 -target arm64-apple-macos14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -cxx-interoperability-mode\\=default -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug -I /Users/adam/code/xcode_shit/Helix/HelixBackend -F /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug/PackageFrameworks -F /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug/PackageFrameworks -F /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug/PackageFrameworks -F /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug/PackageFrameworks -F /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug -no-color-diagnostics -enable-testing -g -debug-info-format\\=dwarf -dwarf-version\\=4 -module-cache-path /Users/adam/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -swift-version 5 -enforce-exclusivity\\=unchecked -Onone -D DEBUG -serialize-debugging-options -const-gather-protocols-file /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/Kulve_const_extract_protocols.json -enable-experimental-feature DebugDescriptionMacro -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/adam/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/adam/code/xcode_shit/Helix -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/adam/code/xcode_shit/Helix -Xcc -fmodule-map-file\\=/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/GeneratedModuleMaps/SDWebImage.modulemap -Xcc -std\\=c++17 -Xcc -D_LIBCPP_HARDENING_MODE\\=_LIBCPP_HARDENING_MODE_NONE -Xcc -ivfsstatcache -Xcc /Users/adam/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/macosx15.0-24A336-b74dfec4bc4e9d23bc944d435a01a688.sdkstatcache -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Kulve-generated-files.hmap -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Kulve-own-target-headers.hmap -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Kulve-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Helix-a19be549b213a999b474be364831a444-VFS/all-product-headers.yaml -Xcc -iquote -Xcc /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Kulve-project-headers.hmap -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/SourcePackages/checkouts/SDWebImage/SDWebImage/include -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Products/Debug/include -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/DerivedSources-normal/arm64 -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/DerivedSources/arm64 -Xcc -I/Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/DerivedSources -Xcc -DDEBUG\\=1 -no-verify-emitted-module-interface -module-name Kulve -frontend-parseable-output -disable-clang-spi -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins\\#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins\\#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/OverlayView.o -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/ProfileImageView.o -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/StreamTitleView.o -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/PreferencesView.o -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/FollowItem.o -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/EmoteView.o -o /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Build/Intermediates.noindex/Helix.build/Debug/Kulve.build/Objects-normal/arm64/MessageView.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/OverlayView.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/ProfileImageView.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/StreamTitleView.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/PreferencesView.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/FollowItem.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/EmoteView.o -index-unit-output-path /Helix.build/Debug/Kulve.build/Objects-normal/arm64/MessageView.o -index-store-path /Users/adam/Library/Developer/Xcode/DerivedData/Helix-edxmipjxrzjjxzewxaantrczbwwa/Index.noindex/DataStore -index-system-modules\n\n/opt/homebrew/include/boost/asio/basic_socket_acceptor.hpp:473:45: error: no matching constructor for initialization of 'protocol_type' (aka 'boost::asio::ip::tcp')\n  void open(const protocol_type& protocol = protocol_type())\n                                            ^\n<unknown>:0: note: in instantiation of default function argument expression for 'open<boost::asio::ip::tcp, boost::asio::any_io_executor>' required here\n/opt/homebrew/include/boost/asio/ip/tcp.hpp:143:12: note: candidate constructor not viable: requires single argument 'protocol_family', but no arguments were provided\n  explicit tcp(int protocol_family) noexcept\n           ^\n/opt/homebrew/include/boost/asio/ip/tcp.hpp:46:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 0 were provided\nclass tcp\n      ^\n/opt/homebrew/include/boost/asio/ip/tcp.hpp:46:7: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 0 were provided\nclass tcp\n      ^\n\nExpected behavior\nIt should compile\nEnvironment\n$ swiftc -version\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\n\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-17T21:48:09Z",
                                "updatedAt": "2024-09-17T22:12:38Z",
                                "number": 76531,
                                "title": "No matching constructor for initialization of 'protocol_type' (aka 'boost::asio::ip::tcp')",
                                "url": "https://github.com/swiftlang/swift/issues/76531",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAwnA5g",
                                    "login": "a-soll",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/50970854?u=979381b65a091dc5a10d712892f76f9c7f9adcc3&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xN1QyMjo0ODowOSswMTowMM6W7qCU"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W8TCD",
                                "bodyText": "Description\nWhen using the toolchain from https://www.swift.org/install/macos/ under \"Package Installer\", it is impossible to build swift-syntax. Here is the error:\nerror: 'swift-syntax': Invalid manifest (compiled with: [\"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swiftc\", \"-vfsoverlay\", \"/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.TC0OSK/vfs.yaml\", \"-L\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-lPackageDescription\", \"-Xlinker\", \"-rpath\", \"-Xlinker\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-target\", \"arm64-apple-macosx13.0\", \"-I\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing\", \"-L\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing\", \"-plugin-path\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins/testing\", \"-sdk\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk\", \"-F\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks\", \"-I\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib\", \"-L\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib\", \"-swift-version\", \"5\", \"-I\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-sdk\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk\", \"-package-description-version\", \"5.8.0\", \"/Users/quentin/IdeaProjects/SwiftToSolidityCall/swift-syntax/Package.swift\", \"-o\", \"/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.569Ajp/swift-syntax-manifest\"])\nerror: compile command failed due to signal 6 (use -v to see invocation)\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\nStack dump:\n0.\tProgram arguments: /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/quentin/IdeaProjects/SwiftToSolidityCall/swift-syntax/Package.swift -target arm64-apple-macosx13.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -vfsoverlay /var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.TC0OSK/vfs.yaml -swift-version 5 -package-description-version 5.8.0 -empty-abi-descriptor -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins/testing -resource-dir /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift -module-name main -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/local/lib/swift/host/plugins -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -o /var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.QAJMqf/Package-1.o\n\nApple Swift version 6.0 (swift-6.0-RELEASE)\nCompiling with effective version 5.10\nWhile evaluating request ExecuteSILPipelineRequest(Run pipelines { Mandatory Diagnostic Passes + Enabling Optimization Passes } on SIL for Darwin)\nWhile running pass swiftlang/swift-syntax#2548 SILModuleTransform \"MandatorySILLinker\".\nWhile deserializing SIL function \"$s6Darwin14POSIXErrorCodeO8rawValueACSgs5Int32V_tcfC\"\n*** DESERIALIZATION FAILURE ***\n*** If any module named here was modified in the SDK, please delete the ***\n*** new swiftmodule files from the SDK and keep only swiftinterfaces.   ***\nmodule '_errno', builder version '6.0(6.0)/Apple Swift version 6.0 (swift-6.0-RELEASE)', built from swiftinterface, resilient, loaded from '/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/C/clang/ModuleCache/_errno-UYQO2Q93GB2O.swiftmodule'\nSILFunction type mismatch for '$s6Darwin14POSIXErrorCodeO8rawValueACSgs5Int32V_tcfC': '$@convention(method) (Int32, @thin POSIXErrorCode.Type) -> Optional' != '$@convention(method) (Int32, @thin POSIXErrorCode.Type) -> Optional'\n\n#0 0x00000001064d9e28 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056c9e28)\nswiftlang/swift-syntax#1 0x00000001064d85f4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056c85f4)\nswiftlang/swift-syntax#2 0x00000001064da470 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056ca470)\nswiftlang/swift-syntax#3 0x00000001921cf584 (/usr/lib/system/libsystem_platform.dylib+0x180477584)\nswiftlang/swift-syntax#4 0x000000019219ec20 (/usr/lib/system/libsystem_pthread.dylib+0x180446c20)\nswiftlang/swift-syntax#5 0x00000001920aba30 (/usr/lib/system/libsystem_c.dylib+0x180353a30)\nswiftlang/swift-syntax#6 0x0000000101d95adc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f85adc)\nswiftlang/swift-syntax#7 0x0000000101d2b4dc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f1b4dc)\nswiftlang/swift-syntax#8 0x0000000101d6fa44 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f5fa44)\nswiftlang/swift-syntax#9 0x0000000101d80bbc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f70bbc)\nswiftlang/swift-syntax#10 0x0000000101e1fbfc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10100fbfc)\nswiftlang/swift-syntax#11 0x0000000101e57d68 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x101047d68)\nswiftlang/swift-syntax#12 0x0000000101e57b54 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x101047b54)\nswiftlang/swift-syntax#13 0x0000000101ed343c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1010c343c)\nswiftlang/swift-syntax#14 0x0000000101b6f1e4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100d5f1e4)\nswiftlang/swift-syntax#15 0x0000000101a3581c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c2581c)\nswiftlang/swift-syntax#16 0x0000000101a37bc0 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c27bc0)\nswiftlang/swift-syntax#17 0x0000000101a325ac (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c225ac)\nswiftlang/swift-syntax#18 0x0000000101a3252c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c2252c)\nswiftlang/swift-syntax#19 0x0000000101a6d934 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c5d934)\nswiftlang/swift-syntax#20 0x0000000101a4de90 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c3de90)\nswiftlang/swift-syntax#21 0x0000000101a32788 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c22788)\nswiftlang/swift-syntax#22 0x0000000101a50358 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c40358)\nswiftlang/swift-syntax#23 0x000000010126eff4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10045eff4)\nswiftlang/swift-syntax#24 0x000000010127a118 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046a118)\nswiftlang/swift-syntax#25 0x000000010127b74c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046b74c)\nswiftlang/swift-syntax#26 0x0000000101286760 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100476760)\nswiftlang/swift-syntax#27 0x000000010127b4e0 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046b4e0)\nswiftlang/swift-syntax#28 0x0000000106450438 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640438)\nswiftlang/swift-syntax#29 0x0000000106450558 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640558)\nswiftlang/swift-syntax#30 0x0000000106450580 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640580)\nswiftlang/swift-syntax#31 0x000000019219ef94 (/usr/lib/system/libsystem_pthread.dylib+0x180446f94)\nswiftlang/swift-syntax#32 0x0000000192199d34 (/usr/lib/system/libsystem_pthread.dylib+0x180441d34)\nerror: 'swift-syntax': Invalid manifest (compiled with: [\"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swiftc\", \"-vfsoverlay\", \"/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.YX41bV/vfs.yaml\", \"-L\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-lPackageDescription\", \"-Xlinker\", \"-rpath\", \"-Xlinker\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-target\", \"arm64-apple-macosx13.0\", \"-I\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing\", \"-L\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing\", \"-plugin-path\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins/testing\", \"-sdk\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk\", \"-F\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks\", \"-I\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib\", \"-L\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib\", \"-swift-version\", \"5\", \"-I\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-sdk\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk\", \"-package-description-version\", \"5.8.0\", \"/Users/quentin/IdeaProjects/SwiftToSolidityCall/swift-syntax/Package.swift\", \"-o\", \"/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.BiY64Y/swift-syntax-manifest\"])\nerror: compile command failed due to signal 6 (use -v to see invocation)\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\nStack dump:\n0.\tProgram arguments: /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/quentin/IdeaProjects/SwiftToSolidityCall/swift-syntax/Package.swift -target arm64-apple-macosx13.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -vfsoverlay /var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.YX41bV/vfs.yaml -swift-version 5 -package-description-version 5.8.0 -empty-abi-descriptor -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins/testing -resource-dir /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift -module-name main -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/local/lib/swift/host/plugins -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -o /var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.JpFguT/Package-1.o\n\nApple Swift version 6.0 (swift-6.0-RELEASE)\nCompiling with effective version 5.10\nWhile evaluating request ExecuteSILPipelineRequest(Run pipelines { Mandatory Diagnostic Passes + Enabling Optimization Passes } on SIL for Darwin)\nWhile running pass swiftlang/swift-syntax#2548 SILModuleTransform \"MandatorySILLinker\".\nWhile deserializing SIL function \"$s6Darwin14POSIXErrorCodeO8rawValueACSgs5Int32V_tcfC\"\n*** DESERIALIZATION FAILURE ***\n*** If any module named here was modified in the SDK, please delete the ***\n*** new swiftmodule files from the SDK and keep only swiftinterfaces.   ***\nmodule '_errno', builder version '6.0(6.0)/Apple Swift version 6.0 (swift-6.0-RELEASE)', built from swiftinterface, resilient, loaded from '/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/C/clang/ModuleCache/_errno-UYQO2Q93GB2O.swiftmodule'\nSILFunction type mismatch for '$s6Darwin14POSIXErrorCodeO8rawValueACSgs5Int32V_tcfC': '$@convention(method) (Int32, @thin POSIXErrorCode.Type) -> Optional' != '$@convention(method) (Int32, @thin POSIXErrorCode.Type) -> Optional'\n\n#0 0x0000000109801e28 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056c9e28)\nswiftlang/swift-syntax#1 0x00000001098005f4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056c85f4)\nswiftlang/swift-syntax#2 0x0000000109802470 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056ca470)\nswiftlang/swift-syntax#3 0x00000001921cf584 (/usr/lib/system/libsystem_platform.dylib+0x180477584)\nswiftlang/swift-syntax#4 0x000000019219ec20 (/usr/lib/system/libsystem_pthread.dylib+0x180446c20)\nswiftlang/swift-syntax#5 0x00000001920aba30 (/usr/lib/system/libsystem_c.dylib+0x180353a30)\nswiftlang/swift-syntax#6 0x00000001050bdadc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f85adc)\nswiftlang/swift-syntax#7 0x00000001050534dc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f1b4dc)\nswiftlang/swift-syntax#8 0x0000000105097a44 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f5fa44)\nswiftlang/swift-syntax#9 0x00000001050a8bbc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f70bbc)\nswiftlang/swift-syntax#10 0x0000000105147bfc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10100fbfc)\nswiftlang/swift-syntax#11 0x000000010517fd68 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x101047d68)\nswiftlang/swift-syntax#12 0x000000010517fb54 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x101047b54)\nswiftlang/swift-syntax#13 0x00000001051fb43c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1010c343c)\nswiftlang/swift-syntax#14 0x0000000104e971e4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100d5f1e4)\nswiftlang/swift-syntax#15 0x0000000104d5d81c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c2581c)\nswiftlang/swift-syntax#16 0x0000000104d5fbc0 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c27bc0)\nswiftlang/swift-syntax#17 0x0000000104d5a5ac (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c225ac)\nswiftlang/swift-syntax#18 0x0000000104d5a52c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c2252c)\nswiftlang/swift-syntax#19 0x0000000104d95934 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c5d934)\nswiftlang/swift-syntax#20 0x0000000104d75e90 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c3de90)\nswiftlang/swift-syntax#21 0x0000000104d5a788 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c22788)\nswiftlang/swift-syntax#22 0x0000000104d78358 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c40358)\nswiftlang/swift-syntax#23 0x0000000104596ff4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10045eff4)\nswiftlang/swift-syntax#24 0x00000001045a2118 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046a118)\nswiftlang/swift-syntax#25 0x00000001045a374c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046b74c)\nswiftlang/swift-syntax#26 0x00000001045ae760 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100476760)\nswiftlang/swift-syntax#27 0x00000001045a34e0 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046b4e0)\nswiftlang/swift-syntax#28 0x0000000109778438 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640438)\nswiftlang/swift-syntax#29 0x0000000109778558 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640558)\nswiftlang/swift-syntax#30 0x0000000109778580 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640580)\nswiftlang/swift-syntax#31 0x000000019219ef94 (/usr/lib/system/libsystem_pthread.dylib+0x180446f94)\nswiftlang/swift-syntax#32 0x0000000192199d34 (/usr/lib/system/libsystem_pthread.dylib+0x180441d34)\nerror: ExitCode(rawValue: 1)\nerror: 'swift-syntax': Invalid manifest (compiled with: [\"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swiftc\", \"-vfsoverlay\", \"/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.yvtJET/vfs.yaml\", \"-L\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-lPackageDescription\", \"-Xlinker\", \"-rpath\", \"-Xlinker\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-target\", \"arm64-apple-macosx13.0\", \"-I\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing\", \"-L\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing\", \"-plugin-path\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins/testing\", \"-sdk\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk\", \"-F\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks\", \"-I\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib\", \"-L\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib\", \"-swift-version\", \"5\", \"-I\", \"/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI\", \"-sdk\", \"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk\", \"-package-description-version\", \"5.8.0\", \"/Users/quentin/IdeaProjects/SwiftToSolidityCall/swift-syntax/Package.swift\", \"-o\", \"/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.60Ao1N/swift-syntax-manifest\"])\nerror: compile command failed due to signal 6 (use -v to see invocation)\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\nStack dump:\n0.\tProgram arguments: /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/quentin/IdeaProjects/SwiftToSolidityCall/swift-syntax/Package.swift -target arm64-apple-macosx13.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/macosx/testing -I /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -I /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/pm/ManifestAPI -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -vfsoverlay /var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.yvtJET/vfs.yaml -swift-version 5 -package-description-version 5.8.0 -empty-abi-descriptor -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins/testing -resource-dir /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift -module-name main -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/local/lib/swift/host/plugins -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -o /var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/T/TemporaryDirectory.S2vGjl/Package-1.o\n\nApple Swift version 6.0 (swift-6.0-RELEASE)\nCompiling with effective version 5.10\nWhile evaluating request ExecuteSILPipelineRequest(Run pipelines { Mandatory Diagnostic Passes + Enabling Optimization Passes } on SIL for Darwin)\nWhile running pass swiftlang/swift-syntax#2548 SILModuleTransform \"MandatorySILLinker\".\nWhile deserializing SIL function \"$s6Darwin14POSIXErrorCodeO8rawValueACSgs5Int32V_tcfC\"\n*** DESERIALIZATION FAILURE ***\n*** If any module named here was modified in the SDK, please delete the ***\n*** new swiftmodule files from the SDK and keep only swiftinterfaces.   ***\nmodule '_errno', builder version '6.0(6.0)/Apple Swift version 6.0 (swift-6.0-RELEASE)', built from swiftinterface, resilient, loaded from '/var/folders/dz/v9byvtcx46j4cr0zrqfsrpwm0000gn/C/clang/ModuleCache/_errno-UYQO2Q93GB2O.swiftmodule'\nSILFunction type mismatch for '$s6Darwin14POSIXErrorCodeO8rawValueACSgs5Int32V_tcfC': '$@convention(method) (Int32, @thin POSIXErrorCode.Type) -> Optional' != '$@convention(method) (Int32, @thin POSIXErrorCode.Type) -> Optional'\n\n#0 0x0000000107ad9e28 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056c9e28)\nswiftlang/swift-syntax#1 0x0000000107ad85f4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056c85f4)\nswiftlang/swift-syntax#2 0x0000000107ada470 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1056ca470)\nswiftlang/swift-syntax#3 0x00000001921cf584 (/usr/lib/system/libsystem_platform.dylib+0x180477584)\nswiftlang/swift-syntax#4 0x000000019219ec20 (/usr/lib/system/libsystem_pthread.dylib+0x180446c20)\nswiftlang/swift-syntax#5 0x00000001920aba30 (/usr/lib/system/libsystem_c.dylib+0x180353a30)\nswiftlang/swift-syntax#6 0x0000000103395adc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f85adc)\nswiftlang/swift-syntax#7 0x000000010332b4dc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f1b4dc)\nswiftlang/swift-syntax#8 0x000000010336fa44 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f5fa44)\nswiftlang/swift-syntax#9 0x0000000103380bbc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100f70bbc)\nswiftlang/swift-syntax#10 0x000000010341fbfc (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10100fbfc)\nswiftlang/swift-syntax#11 0x0000000103457d68 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x101047d68)\nswiftlang/swift-syntax#12 0x0000000103457b54 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x101047b54)\nswiftlang/swift-syntax#13 0x00000001034d343c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x1010c343c)\nswiftlang/swift-syntax#14 0x000000010316f1e4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100d5f1e4)\nswiftlang/swift-syntax#15 0x000000010303581c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c2581c)\nswiftlang/swift-syntax#16 0x0000000103037bc0 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c27bc0)\nswiftlang/swift-syntax#17 0x00000001030325ac (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c225ac)\nswiftlang/swift-syntax#18 0x000000010303252c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c2252c)\nswiftlang/swift-syntax#19 0x000000010306d934 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c5d934)\nswiftlang/swift-syntax#20 0x000000010304de90 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c3de90)\nswiftlang/swift-syntax#21 0x0000000103032788 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c22788)\nswiftlang/swift-syntax#22 0x0000000103050358 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100c40358)\nswiftlang/swift-syntax#23 0x000000010286eff4 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10045eff4)\nswiftlang/swift-syntax#24 0x000000010287a118 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046a118)\nswiftlang/swift-syntax#25 0x000000010287b74c (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046b74c)\nswiftlang/swift-syntax#26 0x0000000102886760 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x100476760)\nswiftlang/swift-syntax#27 0x000000010287b4e0 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x10046b4e0)\nswiftlang/swift-syntax#28 0x0000000107a50438 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640438)\nswiftlang/swift-syntax#29 0x0000000107a50558 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640558)\nswiftlang/swift-syntax#30 0x0000000107a50580 (/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-frontend+0x105640580)\nswiftlang/swift-syntax#31 0x000000019219ef94 (/usr/lib/system/libsystem_pthread.dylib+0x180446f94)\nswiftlang/swift-syntax#32 0x0000000192199d34 (/usr/lib/system/libsystem_pthread.dylib+0x180441d34)\nSteps to Reproduce\n\nInstall the latest Swift 6.0 toolchain from the \"Package Installer\" section\nRun the build command: /Library/Developer/Toolchains/swift-6.0-release.xctoolchain/usr/bin/swift build",
                                "state": "OPEN",
                                "createdAt": "2024-09-17T23:00:11Z",
                                "updatedAt": "2024-09-25T18:17:01Z",
                                "number": 76534,
                                "title": "The package doesn't compile using the Swift 6.0 open source toolchain",
                                "url": "https://github.com/swiftlang/swift/issues/76534",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAqjiWQ",
                                    "login": "gfusee",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/44622425?u=a8f9f57d6b3f871aa4984f5ba538401f3df1cc3b&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydWfO",
                                                "name": "SILOptimizer",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-03T22:22:59Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yddQU",
                                                "name": "serialization",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-01-17T13:59:58Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "NA"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwMDowMDoxMSswMTowMM6W8TCD"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W8Xya",
                                "bodyText": "Description\nhttps://godbolt.org/z/ab5WqzE5K\nReduced from a large example.\nThis loop can be folded into a constant. Commenting this line (which is dead),\n            // Dead nested while loop, will never be reached\n            while (number + 1 == 5 && number * 2 == 9) {}\n\nresults in this code being generated:\noutput.sum() -> Swift.Int:\n        mov     eax, 10\n        ret\n\nSo, the dead code prevents this loop from being optimized.\nReproduction\nRun swift -O on the example provided via the godbolt link.\n\nInline:\n\nfunc sum() -> Int {\n    var numbers = [1,2,3,4,5]\n    var sum = 0\n    for number in numbers {\n        // Dead conditional, this condition is always true\n        if (number > 2 && number < 5) || (number == 1 || number == 3) || (number % 2 == 0 && number > 1) || \n            (number % 3 == 0 && number < 4) || (number * 2 == 6 && number + 1 == 4) || \n            (number - 1 == 2 && number / 2 == 1) {\n            sum += number\n            // Dead nested while loop, will never be reached\n            while (number + 1 == 5 && number * 2 == 9) {}\n        }\n    }\n    return sum\n}\n\nExpected behavior\nThe loop is folded into a constant\nEnvironment\ntrunk/nightly x86-64\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T00:01:06Z",
                                "updatedAt": "2024-09-18T03:00:01Z",
                                "number": 76535,
                                "title": "Missed optimization: loop evaluation can be folded into a constant",
                                "url": "https://github.com/swiftlang/swift/issues/76535",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAFeLOQ",
                                    "login": "dcci",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/5737273?u=fd9a4aefab8bf890345be4ec47e777363a71f84a&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwMTowMTowNiswMTowMM6W8Xya"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W9PVV",
                                "bodyText": "Description\nThe SE acceptance says\n\nLastly, on the topic of task locals, the LSG agreed with reviewers who expressed that the approach of 'make no promises' was likely to result in users inadvertently relying on implementation details which would turn out to be difficult to change later, and so decided to adopt the consistent rule that task locals will always be cleared when entering an isolated deinit.\n\nhttps://forums.swift.org/t/accepted-with-modifications-se-0371-isolated-synchronous-deinit/74042\nbut we've not implemented this yet.\nWhen we do this, we can lift the experimental flag from the isolated deinits\nReproduction\nwe don't do anything today, so the outer scopes task locals may be observed.\nExpected behavior\ntask locals should be \"cleared\"\nEnvironment\nmain\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T03:52:05Z",
                                "updatedAt": "2024-09-18T03:52:23Z",
                                "number": 76538,
                                "title": "Make isolated deinit clear task locals & remove experimental flag",
                                "url": "https://github.com/swiftlang/swift/issues/76538",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAHYkw",
                                    "login": "ktoso",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/120979?u=303784755edf774dbb6e9e33434e7a0b4adbf2cd&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwNDo1MjowNSswMTowMM6W9PVV"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W-F9o",
                                "bodyText": "Description\nUnable to specify @MainActor for a closure with explicit empty parameters\nReproduction\nThe following code does not compile:\nTask { @MainActor () in\n}\n// error: Extraneous whitespace between attribute name and '('\nExpected behavior\nThis compiles.\nEnvironment\n$ swift --version\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T06:40:06Z",
                                "updatedAt": "2024-09-19T00:22:17Z",
                                "number": 76539,
                                "title": "Unable to Specify @MainActor for a closure with empty parameters",
                                "url": "https://github.com/swiftlang/swift/issues/76539",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAATF2A",
                                    "login": "omochi",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/312792?u=f6c53cf7a374579df46c9f5541908913a8967d3e&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwNzo0MDowNiswMTowMM6W-F9o"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W-ILo",
                                "bodyText": "Description\nThe following strange code compiles incorrectly:\nReproduction\nTask { @MainActor(今日は日差しが強い) in\n}\nExpected behavior\nIt should result in some kind of error.\nEnvironment\n$ swift --version\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T06:45:24Z",
                                "updatedAt": "2024-09-18T19:15:09Z",
                                "number": 76540,
                                "title": "It’s possible to write arbitrary text after specifying the @MainActor for a closure.",
                                "url": "https://github.com/swiftlang/swift/issues/76540",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAATF2A",
                                    "login": "omochi",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/312792?u=f6c53cf7a374579df46c9f5541908913a8967d3e&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydUp_",
                                                "name": "compiler",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-07-14T23:43:07Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVGs",
                                                "name": "type checker",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-01-18T14:05:16Z"
                                            },
                                            "cursor": "NA"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydciY",
                                                "name": "accepts invalid",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-04-18T04:56:42Z"
                                            },
                                            "cursor": "NQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHXmJbQ",
                                                "name": "attributes",
                                                "color": "E99695",
                                                "createdAt": "2022-11-11T21:01:39Z",
                                                "updatedAt": "2024-03-23T11:25:41Z"
                                            },
                                            "cursor": "Ng"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABKvgsmQ",
                                                "name": "actor isolation",
                                                "color": "E99695",
                                                "createdAt": "2023-01-17T11:46:22Z",
                                                "updatedAt": "2023-07-21T16:10:46Z"
                                            },
                                            "cursor": "Nw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABsiRO6Q",
                                                "name": "swift 6.1",
                                                "color": "D93F0B",
                                                "createdAt": "2024-08-03T00:49:52Z",
                                                "updatedAt": "2024-08-03T00:49:52Z"
                                            },
                                            "cursor": "OA"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwNzo0NToyNCswMTowMM6W-ILo"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W-fxS",
                                "bodyText": "Description\nNon-Sendable value can be accessed from Global-Actor-isolated Task And normal Task concurrently.\nReproduction\nthe following code can be complied with no error/warning on swift 6 mode\nfinal class Counter {\n    var count = 0\n}\n\n@MainActor\nfunc f() {\n    let c = Counter()\n\n    Task {\n        c.count += 1\n        print(c.count)\n    }\n\n    Task.detached {\n        c.count += 1\n        print(c.count)\n    }\n}\nExpected behavior\nshould not be compiled. since c would be concurrently accessed from Task and Task.detached.\nEnvironment\n$ swiftc --version\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\nAdditional information\nit seems that let c won't be sent into MainActor's region when capturing Task { }\nfinal class Counter {\n    var count = 0\n}\n\n@MainActor\nfunc f() {\n    // [(c), {(), MainActor}]\n    let c = Counter()\n\n    // should be: [{(c), MainActor}]\n    // actual: [(c), {(), MainActor}]?\n    Task {\n        c.count += 1\n        print(c.count)\n    }\n\n    // should be Conflict: [{(c), task}, {(c), MainActor}]\n    // actual: [{(c), task}, {(), MainActor}]?\n    Task.detached {\n        c.count += 1\n        print(c.count)\n    }\n}",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T07:37:40Z",
                                "updatedAt": "2024-09-18T07:37:40Z",
                                "number": 76541,
                                "title": "[Concurrency] Non-Sendable value can be accessed from Global-Actor-isolated Task And normal Task",
                                "url": "https://github.com/swiftlang/swift/issues/76541",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAqPIMg",
                                    "login": "kntkymt",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/44288050?u=0a794d38444493ece482b1fd3c4c174dcda6c663&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwODozNzo0MCswMTowMM6W-fxS"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6W_Dke",
                                "bodyText": "Description\nCompiler behaves in surprising ways when stating protocols using Self and/or typealias.\nReproduction\n// Arbitrary protocol\nprotocol P1 { func someFunc() }\n\n// Unexpected: Compiles fine even though we don't implement `someFunc()`\n//\nstruct S1: Self.Conforms {\n    typealias Conforms = P1\n}\n\n// Regresion: Fails to compile for Swift 6.1 with confusing\n// error message:\n//\n// Swift 5.10 fails with:\n//   `error: type 'S2' does not conform to protocol 'P1'`\n//\n//\n// Swift 6.1 (84e93a26ea8ccf5) fails with:\n//\n//    struct S2: S2.Conforms {\n//           `- note: through reference here\n//        typealias Conforms = P1\n//                  |- error: circular reference\n//                  `- note: through reference here\n//    }\n//\nstruct S2: S2.Conforms {\n    typealias Conforms = P1\n}\nExpected behavior\nThere shouldn't be difference between struct S1: Self.Conforms and struct S1: S1.Conforms\nEnvironment\n\nswift-driver version: 1.90.11.1 Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)\nSwift version 6.1-dev (LLVM b5c60054ab3ee7b, Swift 84e93a26ea8ccf5)\n\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T08:49:22Z",
                                "updatedAt": "2024-09-18T08:49:22Z",
                                "number": 76543,
                                "title": "Protocol conformance ignored when Self used",
                                "url": "https://github.com/swiftlang/swift/issues/76543",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAOYWg",
                                    "login": "vojtarylko",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/235610?u=4c1fa87280773f58edec27a60a1a573edaef4306&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQwOTo0OToyMiswMTowMM6W_Dke"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XBoYT",
                                "bodyText": "Description\nissues:\n\nAsyncStream supports multiple concurrent consumption, but its documentation states that it does not\nAsyncThrowingStream does not support multiple concurrent consumption (its documentation is accurate)\n\nReproduction\n// non-throwing stream\nfunc test_stream() async {\n  let (s, c) = AsyncStream<Int>.makeStream()\n\n  let t1 = Task { @MainActor in\n    for await _ in s {}\n  }\n  await MainActor.run {}\n  print(\"installed consumer 1\")\n\n  let t2 = Task { @MainActor in\n    for await _ in s {}\n  }\n  await MainActor.run {}\n  print(\"installed consumer 2\")\n  // works\n}\n\n// throwing stream\nfunc test_throwing_stream() async {\n  let (s, c) = AsyncThrowingStream<Int, Error>.makeStream()\n\n  let t1 = Task { @MainActor in\n    for try await _ in s {}\n  }\n  await MainActor.run {}\n  print(\"installed consumer 1\")\n\n  let t2 = Task { @MainActor in\n    for try await _ in s {}\n  }\n  await MainActor.run {}\n  print(\"installed consumer 2\")\n  // fatal error shortly after this point\n}\n\nTask { await test_stream() }\nTask { await test_throwing_stream() }\nExpected behavior\nthe async stream implementations should function analogously with respect to multi-consumption, and the corresponding documentation should accurately reflect their behaviors. in particular, the throwing variant should behave in the same manner that the non-throwing stream does.\nEnvironment\nApple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)\nTarget: arm64-apple-macosx14.0\nAdditional information\nrelevant forum posts:\n\nhttps://forums.swift.org/t/consuming-an-asyncstream-from-multiple-tasks-redux/69818\nhttps://forums.swift.org/t/question-how-to-re-introduce-concurrent-iteration-runtime-error-for-asyncstream/71831",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T13:40:35Z",
                                "updatedAt": "2024-09-18T13:40:35Z",
                                "number": 76547,
                                "title": "AsyncStream & AsyncThrowingStream behavioral divergences & misleading documentation",
                                "url": "https://github.com/swiftlang/swift/issues/76547",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOACBYmg",
                                    "login": "jamieQ",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/2119834?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQxNDo0MDozNSswMTowMM6XBoYT"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XDzQ6",
                                "bodyText": "Description\nAbsolutely massive Significant build regressions on linux , worsened by swift-testing\nEDIT: Please also read my next comment which includes more info.\nEnvironment\n\nGitHub Actions\n8 CPU x 16GB RAM c7x EC2 Instance (we use RunsOn)\nMigrating from swift:5.10-noble to swift:6.0-noble\nTried with and without using a previous .build cache. No behavior difference noticed at all.\n200K-300K LOC project\nUpdated to // swift-tools-version:6.0 in Package.swift\nAll targets still have Swift 5 language mode enabled.\nNo actual tests migrated to swift-testing just yet.\n\nWhat Happened?\n\nOur Tests CI started getting stuck after the toolchain update.\nThe CI machines were getting killed by AWS. Considering this has been a common problem specially in the Server Side Swift ecosystem, which also has been brought up for ages and numerous times, my first guess was that the machine is running out of RAM when building the Swift project.\nAfter a lot of tries, I noticed a c7x-family machine with 64 CPU x 128 GB RAM (8x larger than before) runs the tests as well as they were being run before, on swift 5.10.\nMy first guess was that maybe Swift testing is causing an issue, so tried --disable-swift-testing.\nAfter that, our tests have been running on an only 2x larger machine, and the rest of the things are back to normal in tests CI.\nWith this bigger machine, it still almost takes as long as before for the tests CI to complete (we run tests in parallel with 64 workers).\nSo this means that not only Swift 6 has a significant build regression, but also swift-testing makes it go from significant to absolutely massive.\nThis is borderline unusable for the Swift-Server ecosystem. I hope this problem requires more specific situations to happen that what meets the eye.\nStill trying things out with the deployment CI. even 2x CPU and 4x RAM isn't proving helpful even though I did throw the --disable-swift-testing flag into the mix.\n\nReproduction\nNot sure.\nExpected behavior\nNo regressions. Preferably even faster than previous Swift versions.\nEnvironment\nMentioned above.\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T18:05:15Z",
                                "updatedAt": "2024-10-12T19:42:47Z",
                                "number": 76555,
                                "title": "Significant build regressions on `swift:6.0-noble` compared to `5.10-noble`",
                                "url": "https://github.com/swiftlang/swift/issues/76555",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOA0JvBg",
                                    "login": "MahdiBM",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/54685446?u=2d7990c26d1535e871c543b84d72040378bc4e04&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQxOTowNToxNSswMTowMM6XDzQ6"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XFiO1",
                                "bodyText": "Description\nwhen emitting symbol graphs for the swift-atomics package, lib/SymbolGraphGen will record an extension block on sSP (UnsafePointer) with no generic constraints, but it will also emit a conformsTo edge to s7Atomics11AtomicValueP (AtomicValue) from the extension block with the conditions Pointee: Copyable, Pointee: Escapable\nReproduction\nclone swift-atomics at 1.1.0, and generate the symbol graph with -emit-extension-block-symbols\nExpected behavior\nthe extension block and the conformance edges emanating from the block should always match, so either the extension block needs to include the Pointee: Copyable, Pointee: Escapable clauses, or they should be removed from the conformance edge.\nEnvironment\nSwift version 6.0 (swift-6.0-RELEASE)\nTarget: x86_64-unknown-linux-gnu\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T21:51:08Z",
                                "updatedAt": "2024-09-18T21:51:18Z",
                                "number": 76559,
                                "title": "(lib/SymbolGraphGen) conformance conditions do not match generic constraints of associated extension block",
                                "url": "https://github.com/swiftlang/swift/issues/76559",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOACcEOg",
                                    "login": "tayloraswift",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/2556986?u=cd32df24765548e3f161f30f71d15c6a3dcdce05&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOFQyMjo1MTowOCswMTowMM6XFiO1"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XF9xY",
                                "bodyText": "Description\nAssertion failed: (false && \"Refactor this\"), function operator(), file IDETypeChecking.cpp, line 381.\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\n\nReproduction\n/Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-symbolgraph-extract \\ \n    -module-name Foundation \\\n    -target arm64-apple-macosx14.0 \\\n    -output-dir $OUTPUT \\\n    -minimum-access-level internal \\\n    -include-spi-symbols \\\n    -skip-inherited-docs \\\n     -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\\n    -pretty-print\n\nStack dump\nStack dump:\n0.\tProgram arguments: /Library/Developer/Toolchains/swift-6.0-RELEASE.xctoolchain/usr/bin/swift-symbolgraph-extract -module-name Foundation -target arm64-apple-macosx14.0 -output-dir /Users/runner/work/swift-unidoc/swift-unidoc/.testing/cache/swift -minimum-access-level internal -include-spi-symbols -skip-inherited-docs -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -pretty-print\n1.\tApple Swift version 6.0 (swift-6.0-RELEASE)\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\n0  swift-frontend           0x0000000107fd1e28 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56\n1  swift-frontend           0x0000000107fd05f4 llvm::sys::RunSignalHandlers() + 112\n2  swift-frontend           0x0000000107fd2470 SignalHandler(int) + 304\n3  libsystem_platform.dylib 0x00000001885d2584 _sigtramp + 56\n4  libsystem_pthread.dylib  0x00000001885a1c20 pthread_kill + 288\n5  libsystem_c.dylib        0x00000001884aea30 abort + 180\n6  libsystem_c.dylib        0x00000001884add20 err + 0\n7  swift-frontend           0x000000010829f06c swift::SynthesizedExtensionAnalyzer::Implementation::isApplicable(swift::ExtensionDecl*, bool, swift::ExtensionDecl*, swift::NormalProtocolConformance*)::'lambda'(swift::SubstitutionMap, swift::ExtensionDecl*, llvm::ArrayRef<swift::Requirement>)::operator()(swift::SubstitutionMap, swift::ExtensionDecl*, llvm::ArrayRef<swift::Requirement>) const (.cold.8) + 0\n8  swift-frontend           0x00000001037cdba0 swift::SynthesizedExtensionAnalyzer::Implementation::isApplicable(swift::ExtensionDecl*, bool, swift::ExtensionDecl*, swift::NormalProtocolConformance*)::'lambda'(swift::SubstitutionMap, swift::ExtensionDecl*, llvm::ArrayRef<swift::Requirement>)::operator()(swift::SubstitutionMap, swift::ExtensionDecl*, llvm::ArrayRef<swift::Requirement>) const + 652\n9  swift-frontend           0x00000001037cd5b4 swift::SynthesizedExtensionAnalyzer::Implementation::isApplicable(swift::ExtensionDecl*, bool, swift::ExtensionDecl*, swift::NormalProtocolConformance*) + 464\n10 swift-frontend           0x00000001037ccef8 swift::SynthesizedExtensionAnalyzer::Implementation::collectSynthesizedExtensionInfo(std::__1::vector<swift::SynthesizedExtensionAnalyzer::Implementation::ExtensionMergeGroup, std::__1::allocator<swift::SynthesizedExtensionAnalyzer::Implementation::ExtensionMergeGroup>>&)::'lambda'(swift::ExtensionDecl*, bool, swift::ExtensionDecl*, swift::NormalProtocolConformance*)::operator()(swift::ExtensionDecl*, bool, swift::ExtensionDecl*, swift::NormalProtocolConformance*) const + 164\n11 swift-frontend           0x00000001037cc7c8 swift::SynthesizedExtensionAnalyzer::Implementation::collectSynthesizedExtensionInfo(std::__1::vector<swift::SynthesizedExtensionAnalyzer::Implementation::ExtensionMergeGroup, std::__1::allocator<swift::SynthesizedExtensionAnalyzer::Implementation::ExtensionMergeGroup>>&) + 576\n12 swift-frontend           0x00000001037cbdc4 swift::SynthesizedExtensionAnalyzer::SynthesizedExtensionAnalyzer(swift::NominalTypeDecl*, swift::PrintOptions, bool) + 156\n13 swift-frontend           0x00000001037a4de4 swift::symbolgraphgen::SymbolGraph::recordConformanceSynthesizedMemberRelationships(swift::symbolgraphgen::Symbol) + 292\n14 swift-frontend           0x00000001037a4a48 swift::symbolgraphgen::SymbolGraph::recordNode(swift::symbolgraphgen::Symbol) + 116\n15 swift-frontend           0x00000001037ad5b8 swift::symbolgraphgen::SymbolGraphASTWalker::walkToDeclPre(swift::Decl*, swift::CharSourceRange) + 732\n16 swift-frontend           0x00000001037eab2c (anonymous namespace)::SemaAnnotator::walkToDeclPre(swift::Decl*) + 1904\n17 swift-frontend           0x0000000104199064 (anonymous namespace)::Traversal::doIt(swift::Decl*) + 252\n18 swift-frontend           0x000000010419c664 (anonymous namespace)::Traversal::visit(swift::Decl*) + 2912\n19 swift-frontend           0x0000000104199088 (anonymous namespace)::Traversal::doIt(swift::Decl*) + 288\n20 swift-frontend           0x0000000104198f5c swift::Decl::walk(swift::ASTWalker&) + 32\n21 swift-frontend           0x00000001037e9404 swift::SourceEntityWalker::walk(swift::Decl*) + 200\n22 swift-frontend           0x00000001037ac2dc swift::symbolgraphgen::emitSymbolGraphForModule(swift::ModuleDecl*, swift::symbolgraphgen::SymbolGraphOptions const&) + 468\n23 swift-frontend           0x00000001029940ac swift_symbolgraph_extract_main(llvm::ArrayRef<char const*>, char const*, void*) + 6712\n24 swift-frontend           0x000000010293d6e8 swift::mainEntry(int, char const**) + 8640\n25 dyld                     0x0000000188217154 start + 2476\n\nExpected behavior\nit should not crash\nEnvironment\nApple Swift version 6.0 (swift-6.0-RELEASE)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-18T23:05:45Z",
                                "updatedAt": "2024-10-10T16:41:00Z",
                                "number": 76561,
                                "title": "Assertion failed: (false && \"Refactor this\")",
                                "url": "https://github.com/swiftlang/swift/issues/76561",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOACcEOg",
                                    "login": "tayloraswift",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/2556986?u=cd32df24765548e3f161f30f71d15c6a3dcdce05&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "User",
                                                "id": "U_kgDOAAEDtg",
                                                "login": "slavapestov",
                                                "avatarUrl": "https://avatars.githubusercontent.com/u/66486?u=766cd70e277abad5eddc1246dde29e685efd2629&v=4"
                                            },
                                            "cursor": "MQ"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOVQwMDowNTo0NSswMTowMM6XF9xY"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XNiVE",
                                "bodyText": "Description\nSome ownership-related diagnostics seem to be missing source location information. See e.g. the example below\nReproduction\nprotocol TypedPointer<Pointee> {\n    associatedtype Pointee\n    \n    var pointee: Pointee { get }\n}\n\nextension UnsafePointer: TypedPointer {}\nExpected behavior\nI would expect the associated diagnostic:\n<unknown>:0: error: 'self.pointee' is borrowed and cannot be consumed\n\n...to have location/line information, e.g. in this case probably the line conforming UnsafePointer to the protocol.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nI was a bit surprised that this broke in Swift 6, it looks like the issue is that UnsafePointer's Pointee is ~Copyable and that the interaction between noncopyable types and protocols/generics isn't good enough to let us spell out this conformance anymore: https://github.com/swiftlang/swift-evolution/blob/main/proposals/0390-noncopyable-structs-and-enums.md#declaring-noncopyable-types",
                                "state": "OPEN",
                                "createdAt": "2024-09-19T16:57:39Z",
                                "updatedAt": "2024-09-20T13:46:41Z",
                                "number": 76573,
                                "title": "Diagnostic around conforming to a protocol with a noncopyable type has no source location info",
                                "url": "https://github.com/swiftlang/swift/issues/76573",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAdcYOw",
                                    "login": "fwcd",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/30873659?u=46cfaa8f32f180465432a5be2e17f235a6422885&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0xOVQxNzo1NzozOSswMTowMM6XNiVE"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XP2h0",
                                "bodyText": "Description\nWe started seeing this crash with nightly windows toolchains around the beginning of this month (Sept. 6th or earlier). It seems in some cases when patterns overlap, instead of the more specialized pattern being given a higher priority, the compiler will crash.\nReproduction\npublic struct ExampleType: Equatable {\n    public static let test1 = Self()\n}\n\npublic enum ExampleEnum: Equatable {\n\n    case exampleCase(ExampleType)\n\n    public var exampleVar: [String] {\n        switch self {\n        case let .exampleCase(exampleType):\n            return []\n        case .exampleCase(.test1):\n            return []\n        }\n    }\n}\nStack dump\nStack dump:\n0.      Program arguments: C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\bin\\\\swift-frontend.exe -frontend -interpret C:\\\\Users\\\\JeremyDay\\\\Desktop\\\\dominance_repro\\\\repro.swift -disable-objc-interop -sdk C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Platforms\\\\0.0.0\\\\Windows.platform\\\\Developer\\\\SDKs\\\\Windows.sdk\\\\ -color-diagnostics -empty-abi-descriptor -Xcc -working-directory -Xcc C:\\\\Users\\\\JeremyDay\\\\Desktop\\\\dominance_repro -resource-dir C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\lib\\\\swift -module-name repro -in-process-plugin-server-path C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\bin\\\\SwiftInProcPluginServer.dll -plugin-path C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\bin -plugin-path C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\local\\\\bin\n1.      compnerd.org Swift version 6.1-dev (LLVM cdc8e8b92cfb482, Swift 4bb9a587fa3c1f1)\n2.      Compiling with effective version 5.10\nException Code: 0xC0000005\n #0 0x00007ff9757bb330 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x34b330)\n #1 0x00007ff9757ba74f (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x34a74f)\n #2 0x00007ff975770757 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x300757)\n #3 0x00007ff9757b9090 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x349090)\n #4 0x00007ff9757a5273 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x335273)\n #5 0x00007ff9757adbcd (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x33dbcd)\n #6 0x00007ff9757aac9d (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x33ac9d)\n #7 0x00007ff9757a7163 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x337163)\n #8 0x00007ff9757a22d5 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x3322d5)\n #9 0x00007ff97579072d (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x32072d)\n#10 0x00007ff975790455 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x320455)\n#11 0x00007ff97558555d (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Runtimes\\0.0.0\\usr\\bin\\swiftCore.dll+0x11555d)\n#12 0x00007ff9ca45c570 $s25_CompilerSwiftDiagnostics07GroupedC0V12SourceFileIDVMa (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\_CompilerSwiftDiagnostics.dll+0xc570)\n#13 0x00007ff9ca45afcd $s25_CompilerSwiftDiagnostics07GroupedC0V13addDiagnostic_2inyAA0F0V_AC12SourceFileIDVSgtF (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\_CompilerSwiftDiagnostics.dll+0xafcd)\n#14 0x00007ff9ca45e223 $s25_CompilerSwiftDiagnostics07GroupedC0V12SourceFileIDVMa (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\_CompilerSwiftDiagnostics.dll+0xe223)\n#15 0x00007ff9ca45b43a $s25_CompilerSwiftDiagnostics0C9FormatterV15annotateSources2in11contextSize8colorizeSSAA07GroupedC0V_SiSbtFZ (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\_CompilerSwiftDiagnostics.dll+0xb43a)\n#16 0x00007ff9ca45bdfe $s25_CompilerSwiftDiagnostics07GroupedC0V12SourceFileIDVMa (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\_CompilerSwiftDiagnostics.dll+0xbdfe)\n#17 0x00007ff9ca45b193 $s25_CompilerSwiftDiagnostics0C9FormatterV15annotateSources2inSSAA07GroupedC0V_tF (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\_CompilerSwiftDiagnostics.dll+0xb193)\n#18 0x00007ff6eeb6615f (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x26615f)\n#19 0x00007ff6f0959940 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x2059940)\n#20 0x00007ff6ef0f3925 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x7f3925)\n#21 0x00007ff6ef0f38db (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x7f38db)\n#22 0x00007ff6f06a46db (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1da46db)\n#23 0x00007ff6eeeab2be (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5ab2be)\n#24 0x00007ff6eed00c8c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x400c8c)\n#25 0x00007ff6eed0085c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x40085c)\n#26 0x00007ff6f4cace2c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x63ace2c)\n#27 0x00007ffa24c3257d (C:\\Windows\\System32\\KERNEL32.DLL+0x1257d)\n#28 0x00007ffa2534af28 (C:\\Windows\\SYSTEM32\\ntdll.dll+0x5af28)\n\nExpected behavior\nThe code should compile\nEnvironment\ncompnerd.org Swift version 6.1-dev (LLVM cdc8e8b92cfb482, Swift 4bb9a58)\nTarget: x86_64-unknown-windows-msv\nAdditional information\nThe above trace (partially) symbolized with windbg:\n00 000000fe`c5d87fa0 00007ff9`737aa74f     swiftCore!swift_conformsToProtocolCommon+0xc00\n01 000000fe`c5d880d0 00007ff9`73760757     swiftCore!swift_conformsToProtocolCommon+0x1f\n02 000000fe`c5d88120 00007ff9`737a9090     swiftCore!swift_getFunctionFullNameFromMangledName+0xbe7\n03 000000fe`c5d88150 00007ff9`73795273     swiftCore!swift_copyAuxiliaryExecutablePath+0x1d30\n04 000000fe`c5d88540 00007ff9`7379dbcd     swiftCore!swift_instantiateCheckedGenericMetadata+0xfe3\n05 000000fe`c5d88770 00007ff9`7379ac9d     swiftCore!swift_getTypeByMangledNode+0x6cad\n06 000000fe`c5d88880 00007ff9`73797163     swiftCore!swift_getTypeByMangledNode+0x3d7d\n07 000000fe`c5d88da0 00007ff9`737922d5     swiftCore!swift_getTypeByMangledNode+0x243\n08 000000fe`c5d88fd0 00007ff9`7378072d     swiftCore!swift_getTypeByMangledName+0x465\n09 000000fe`c5d89bc0 00007ff9`73780455     swiftCore!swift_getAssociatedTypeWitness+0x30d\n0a 000000fe`c5d89ea0 00007ff9`7357555d     swiftCore!swift_getAssociatedTypeWitness+0x35\n0b 000000fe`c5d89ed0 00007ff9`ca45c570     swiftCore!$sSKsSS7ElementRtzrlE6joined9separatorS2S_tF+0x6d\n0c 000000fe`c5d8a010 00007ff9`ca45afcd     _CompilerSwiftDiagnostics!$s25_CompilerSwiftDiagnostics07GroupedC0V12SourceFileIDVMa+0x10f0\n0d 000000fe`c5d8a290 00007ff9`ca45e223     _CompilerSwiftDiagnostics!$s25_CompilerSwiftDiagnostics07GroupedC0V13addDiagnostic_2inyAA0F0V_AC12SourceFileIDVSgtF+0x19dd\n0e 000000fe`c5d8a640 00007ff9`ca45b43a     _CompilerSwiftDiagnostics!$s25_CompilerSwiftDiagnostics07GroupedC0V12SourceFileIDVMa+0x2da3\n0f 000000fe`c5d8a6b0 00007ff9`ca45bdfe     _CompilerSwiftDiagnostics!$s25_CompilerSwiftDiagnostics0C9FormatterV15annotateSources2in11contextSize8colorizeSSAA07GroupedC0V_SiSbtFZ+0x21a\n10 000000fe`c5d8a6e0 00007ff9`ca45b193     _CompilerSwiftDiagnostics!$s25_CompilerSwiftDiagnostics07GroupedC0V12SourceFileIDVMa+0x97e\n11 000000fe`c5d8a780 00007ff6`eeb6615f     _CompilerSwiftDiagnostics!$s25_CompilerSwiftDiagnostics0C9FormatterV15annotateSources2inSSAA07GroupedC0V_tF+0x43\n12 000000fe`c5d8a820 00007ff6`f0959940     swift_frontend+0x26615f\n13 000000fe`c5d8a8b0 00007ff6`ef0f3925     swift_frontend+0x2059940\n14 000000fe`c5d8a900 00007ff6`ef0f38db     swift_frontend+0x7f3925\n15 000000fe`c5d8a990 00007ff6`f06a46db     swift_frontend+0x7f38db\n16 000000fe`c5d8a9c0 00007ff6`eeeab2be     swift_frontend+0x1da46db\n17 000000fe`c5d8a9f0 00007ff6`eed00c8c     swift_frontend+0x5ab2be\n18 000000fe`c5d8cbb0 00007ff6`eed0085c     swift_frontend+0x400c8c\n19 000000fe`c5d8e2c0 00007ff6`f4cace2c     swift_frontend+0x40085c\n1a 000000fe`c5d8f790 00007ffa`24c3257d     swift_frontend+0x63ace2c\n1b 000000fe`c5d8f7d0 00007ffa`2534af28     KERNEL32!BaseThreadInitThunk+0x1d\n1c 000000fe`c5d8f800 00000000`00000000     ntdll!RtlUserThreadStart+0x28\n\nUn-minimizing the reproducer a bit gives a slightly different error complaining about \"Found a leak due to a consuming post-dominance failure!\" as well as crashing with a stack trace. This was the initial error we saw in production code. I'm guessing the fully minimal repro is more representative of the underlying issue and this additional error stems from that root problem, but in case it is useful, here is a slightly less minimal reproduction and the associated error:\npublic struct ExampleType: Equatable {\n    public let example: String\n\n    public static let test1 = Self(example: \"test1\")\n}\n\npublic enum ExampleEnum: Equatable {\n\n    case exampleCase(ExampleType)\n\n    public var exampleVar: [String] {\n        switch self {\n        case let .exampleCase(exampleType):\n            return [exampleType.example]\n        case .exampleCase(.test1):\n            return [\"test1\"]\n        }\n    }\n}\n\ncrashes with\nBegin Error in Function: '$s5repro11ExampleEnumO10exampleVarSaySSGvg'\nError! Found a leak due to a consuming post-dominance failure!\nValue:   %25 = move_value [var_decl] %24 : $ExampleType  // users: %45, %33\nPost Dominating Failure Blocks:\n bb4\nEnd Error in Function: '$s5repro11ExampleEnumO10exampleVarSaySSGvg'\nFound ownership error?!\n<unknown>:0: error: fatal error encountered during compilation; please submit a bug report (https://swift.org/contributing/#reporting-bugs)\n<unknown>:0: note: triggering standard assertion failure routine\nStack dump:\n0.      Program arguments: C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\bin\\\\swift-frontend.exe -frontend -interpret C:\\\\Users\\\\JeremyDay\\\\Desktop\\\\dominance_repro\\\\repro.swift -disable-objc-interop -sdk C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Platforms\\\\0.0.0\\\\Windows.platform\\\\Developer\\\\SDKs\\\\Windows.sdk\\\\ -color-diagnostics -empty-abi-descriptor -Xcc -working-directory -Xcc C:\\\\Users\\\\JeremyDay\\\\Desktop\\\\dominance_repro -resource-dir C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\lib\\\\swift -module-name repro -in-process-plugin-server-path C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\bin\\\\SwiftInProcPluginServer.dll -plugin-path C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\bin -plugin-path C:\\\\Users\\\\JeremyDay\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\0.0.0+Asserts\\\\usr\\\\local\\\\bin\n1.      compnerd.org Swift version 6.1-dev (LLVM cdc8e8b92cfb482, Swift 4bb9a587fa3c1f1)\n2.      Compiling with effective version 5.10\n3.      While evaluating request ExecuteSILPipelineRequest(Run pipelines { SILGen Passes } on SIL for repro)\n4.      While running pass #0 SILModuleTransform \"SILGenCleanup\".\n5.      While silgen cleanup SIL function \"@$s5repro11ExampleEnumO10exampleVarSaySSGvg\".\n for getter for exampleVar (at C:\\Users\\JeremyDay\\Desktop\\dominance_repro\\repro.swift:11:16)\nException Code: 0x80000003\n #0 0x00007ff6f4c4ca65 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x634ca65)\n #1 0x00007ffa22ebe6d5 (C:\\Windows\\System32\\ucrtbase.dll+0x7e6d5)\n #2 0x00007ffa22ebf6e1 (C:\\Windows\\System32\\ucrtbase.dll+0x7f6e1)\n #3 0x00007ff6ef145def (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x845def)\n #4 0x00007ff6f4bd34ca (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x62d34ca)\n #5 0x00007ff6f4bd3671 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x62d3671)\n #6 0x00007ff6f00b1360 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x17b1360)\n #7 0x00007ff6f00afdc0 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x17afdc0)\n #8 0x00007ff6f00b0c54 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x17b0c54)\n #9 0x00007ff6f00b033f (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x17b033f)\n#10 0x00007ff6eff2fc2a (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x162fc2a)\n#11 0x00007ff6eff32593 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1632593)\n#12 0x00007ff6eff32187 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1632187)\n#13 0x00007ff6efa65b49 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1165b49)\n#14 0x00007ff6efa65fa5 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1165fa5)\n#15 0x00007ff6ef71eb7f (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe1eb7f)\n#16 0x00007ff6ef71865f (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe1865f)\n#17 0x00007ff6ef7188a4 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe188a4)\n#18 0x00007ff6ef7182f7 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe182f7)\n#19 0x00007ff6ef76db1d (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe6db1d)\n#20 0x00007ff6ef718a3c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe18a3c)\n#21 0x00007ff6ef701bad (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xe01bad)\n#22 0x00007ff6ef11fc54 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x81fc54)\n#23 0x00007ff6eeea8f4a (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5a8f4a)\n#24 0x00007ff6eeea9903 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5a9903)\n#25 0x00007ff6eeea86b8 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5a86b8)\n#26 0x00007ff6eeea8c4b (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5a8c4b)\n#27 0x00007ff6eeeaaa95 (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5aaa95)\n#28 0x00007ff6eed00c8c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x400c8c)\n#29 0x00007ff6eed0085c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x40085c)\n#30 0x00007ff6f4cace2c (C:\\Users\\JeremyDay\\AppData\\Local\\Programs\\Swift\\Toolchains\\0.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x63ace2c)\n#31 0x00007ffa24c3257d (C:\\Windows\\System32\\KERNEL32.DLL+0x1257d)\n#32 0x00007ffa2534af28 (C:\\Windows\\SYSTEM32\\ntdll.dll+0x5af28)",
                                "state": "OPEN",
                                "createdAt": "2024-09-19T23:22:59Z",
                                "updatedAt": "2024-09-19T23:35:10Z",
                                "number": 76590,
                                "title": "Regression: compiler crash when matching some overlapping patterns",
                                "url": "https://github.com/swiftlang/swift/issues/76590",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAXilA",
                                    "login": "z2oh",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/385684?u=b2c62ec693e8f28e437c79ec92409c36ff1e6c5d&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQwMDoyMjo1OSswMTowMM6XP2h0"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XQdVD",
                                "bodyText": "Description\nWe don't do a great job at explaining execution semantics on the TYPE documentation.\nWe document it a lot on the with... APIs but we should make it easier to discover perhaps on the type itself, as we've seen people still unsure about what happens to un-awaited tasks in groups.\nAdditional information",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T02:06:02Z",
                                "updatedAt": "2024-09-20T02:06:02Z",
                                "number": 76593,
                                "title": "Improve TaskGroup type docs to include more semantics",
                                "url": "https://github.com/swiftlang/swift/issues/76593",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAHYkw",
                                    "login": "ktoso",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/120979?u=303784755edf774dbb6e9e33434e7a0b4adbf2cd&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydUtR",
                                                "name": "task",
                                                "color": "7c939e",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-11-02T18:40:52Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydZdU",
                                                "name": "documentation",
                                                "color": "f39b2d",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-11-02T16:58:39Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQwMzowNjowMiswMTowMM6XQdVD"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XUAUQ",
                                "bodyText": "Motivation\nAccording to the diagnostic: withoutActuallyEscaping is currently unimplemented for @isolated(any) function values @isolated(any) was deliberately turned off for withoutActuallyEscaping. However, to fully migrate a function like this:\nfunc send(\n  operation: @Sendable () async -> Void\n) async {\n  await withoutActuallyEscaping(operation) { operation in\n    await withTaskGroup(of: Void.self) { taskGroup in\n      taskGroup.addTask {\n        await operation()\n      }\n    }\n  }\n}\n... to mimic the signature of TaskGroup.addTask and to support all Swift 6 features of task creation APIs, we'd need support for this. If you want to, I can also provide a more realistic sample code where this would help.\nWorkaround is of course to use @escapable closures, and not using withoutActuallyEscaping. So this would be more of an ergonomic improvement.\nProposed solution\nAs already stated in the motivation, I'd propose to add support of @isolated(any) for withoutActuallyEscaping to get better ergonomics.\nAlternatives considered\nNo response\nAdditional information\nForum thread: https://forums.swift.org/t/withoutactuallyescaping-and-isolated-any/74748",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T11:43:14Z",
                                "updatedAt": "2024-09-23T11:04:10Z",
                                "number": 76604,
                                "title": "Add support for `@isolated(any)` in `withoutActuallyEscaping`",
                                "url": "https://github.com/swiftlang/swift/issues/76604",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAE1IGA",
                                    "login": "ph1ps",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/5064728?u=8e937f0269495195120b4101ce2303f26df51da2&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVAO",
                                                "name": "feature",
                                                "color": "64238b",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-01-27T17:47:59Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQxMjo0MzoxNCswMTowMM6XUAUQ"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XWo5V",
                                "bodyText": "Description\nHello,\ni found a strange issue while playing around with the testing library.\nI will provide some more context later, but the reproduction is very simple: compare two objects in #expect, if the condition is false there is a crash, if the condition is true everything is ok.\nI made a test with various samples but the ones causing an issue seem to be related to enums with generic.\nIn the reproduction examples below the difference is that .playerStandUp are enums without generics and it works, and .roundEnded is an enum with generics and it fails.\nThat's the only difference that i see for now.\nExpected behavior\nTest fails providing some details about unfulfilled expectation\nActual behavior\nTest crashes with a EXC_BAD_ACCESS (code=1, address=0x10)\nSteps to reproduce\nRun the test in the latest xcode\n@Test(\"Why are you crashing\")\n\t\tfunc whyAreYouCrashing() async throws {\n\t\t\t#expect(.roundEnded(\n\t\t\t\tboard: GenericBoard,\n\t\t\t\twinningSides: [Blacks],\n\t\t\t\treason:.agreedDraw\n\t\t\t) == .roundEnded(\n\t\t\t\tboard: GenericBoard,\n\t\t\t\twinningSides: [Blacks],\n\t\t\t\treason:.abandon\n\t\t\t))\n\t\t}\n\nBut this one works (failed expectation as it should be)\n@Test(\"Why do you work then\")\n\t\tfunc whyDoYouWorkThen() async throws {\n\t\t\t#expect(.playerStandUp(\n\t\t\t\tattendees: Attendees(\n\t\t\t\t\tplayers: [:],\n\t\t\t\t\tobservers: []\n\t\t\t\t),\n\t\t\t\tplayerId: \"id-wrong\",\n\t\t\t\tside: Whites\n\t\t\t) == .playerStandUp(\n\t\t\t\tattendees: Attendees(\n\t\t\t\t\tplayers: [:],\n\t\t\t\t\tobservers: []\n\t\t\t\t),\n\t\t\t\tplayerId: \"id-correct\",\n\t\t\t\tside: Whites\n\t\t\t))\n\t\t\t\n\t\t}\n\nswift-testing version/commit hash\nSwift & OS version (output of swift --version ; uname -a)\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T15:28:42Z",
                                "updatedAt": "2024-10-18T14:12:13Z",
                                "number": 76608,
                                "title": "#expect crashes with EXC_BAD_ACCESS when condition comparing generics is false",
                                "url": "https://github.com/swiftlang/swift/issues/76608",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAvtm5A",
                                    "login": "master-bytes-krafter",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/50030308?u=4c29caaade87861cc8ea8b5ccd7334fc9760f28a&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQxNjoyODo0MiswMTowMM6XWo5V"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XWYkc",
                                "bodyText": "Description\nCode that compiled fine in Swift 5 is now crashing in Swift 6.\nReproduction\nkey-path-cross-module-bug.zip\nI tried to reduce this as best as I can.\nIn the library:\npublic protocol P {\n  associatedtype AT\n}\n\n@dynamicMemberLookup\npublic struct S<A> {\n  public subscript<B>(dynamicMember keyPath: KeyPath<A.AT, B>) -> S<B>\n  where A: P {\n    fatalError()\n  }\n}\n\nextension Result: P {\n  public struct AT {\n    public var success: Success {\n      fatalError()\n    }\n  }\n}\n\nfunc f() {\n  // This compiles fine.\n  let kp = \\S<Result<Void, Never>>.success\n}\nIn the tests:\nimport KeyPathCrossModuleBug\n\nfunc f() {\n  // This compiles in the main target but not here.\n  let kp = \\S<Result<Void, Never>>.success\n}\nStack dump\nSwiftCompile normal arm64 Compiling\\ KeyPathCrossModuleBugTests.swift /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/Tests/KeyPathCrossModuleBugTests/KeyPathCrossModuleBugTests.swift (in target 'KeyPathCrossModuleBugTests' from project 'key-path-cross-module-bug')\n    cd /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/.swiftpm/xcode\n    builtin-swiftTaskExecution -- /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/Tests/KeyPathCrossModuleBugTests/KeyPathCrossModuleBugTests.swift -emit-dependencies-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.d -emit-const-values-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.swiftconstvalues -emit-reference-dependencies-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.swiftdeps -serialize-diagnostics-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.dia -target arm64-apple-macos13.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug -I /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -F /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug/PackageFrameworks -F /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug -F /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -no-color-diagnostics -enable-testing -g -debug-info-format\\=dwarf -dwarf-version\\=4 -module-cache-path /Users/stephen/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -profile-generate -profile-coverage-mapping -swift-version 6 -enforce-exclusivity\\=checked -Onone -D SWIFT_PACKAGE -D DEBUG -D Xcode -serialize-debugging-options -const-gather-protocols-file /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests_const_extract_protocols.json -enable-experimental-feature DebugDescriptionMacro -enable-experimental-feature OpaqueTypeErasure -empty-abi-descriptor -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing -validate-clang-modules-once -clang-build-session-file /Users/stephen/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/.swiftpm/xcode -resource-dir /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/.swiftpm/xcode -Xcc -D_LIBCPP_HARDENING_MODE\\=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/stephen/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/macosx15.0-24A336-c29e4adea30bffe86623e75b31a19d2e.sdkstatcache -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug/include -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/DerivedSources/arm64 -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/DerivedSources -Xcc -DSWIFT_PACKAGE -Xcc -DDEBUG\\=1 -module-name KeyPathCrossModuleBugTests -package-name key_path_cross_module_bug -frontend-parseable-output -disable-clang-spi -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins\\#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins\\#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -o /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.o -index-unit-output-path /key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.o -index-store-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Index.noindex/DataStore -index-system-modules\n\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/Tests/KeyPathCrossModuleBugTests/KeyPathCrossModuleBugTests.swift -emit-dependencies-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.d -emit-const-values-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.swiftconstvalues -emit-reference-dependencies-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.swiftdeps -serialize-diagnostics-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.dia -target arm64-apple-macos13.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug -I /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib -F /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug/PackageFrameworks -F /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug -F /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks -no-color-diagnostics -enable-testing -g -debug-info-format=dwarf -dwarf-version=4 -module-cache-path /Users/stephen/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -profile-generate -profile-coverage-mapping -swift-version 6 -enforce-exclusivity=checked -Onone -D SWIFT_PACKAGE -D DEBUG -D Xcode -serialize-debugging-options -const-gather-protocols-file /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests_const_extract_protocols.json -enable-experimental-feature DebugDescriptionMacro -enable-experimental-feature OpaqueTypeErasure -empty-abi-descriptor -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing -validate-clang-modules-once -clang-build-session-file /Users/stephen/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/.swiftpm/xcode -resource-dir /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/.swiftpm/xcode -Xcc -D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/stephen/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/macosx15.0-24A336-c29e4adea30bffe86623e75b31a19d2e.sdkstatcache -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Products/Debug/include -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/DerivedSources/arm64 -Xcc -I/Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/DerivedSources -Xcc -DSWIFT_PACKAGE -Xcc -DDEBUG=1 -module-name KeyPathCrossModuleBugTests -package-name key_path_cross_module_bug -frontend-parseable-output -disable-clang-spi -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -parse-as-library -o /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Build/Intermediates.noindex/key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.o -index-unit-output-path /key-path-cross-module-bug.build/Debug/KeyPathCrossModuleBugTests.build/Objects-normal/arm64/KeyPathCrossModuleBugTests.o -index-store-path /Users/stephen/Library/Developer/Xcode/DerivedData/key-path-cross-module-bug-duczdqjgewkyfaefxsquetbppuvv/Index.noindex/DataStore -index-system-modules\n1.\tApple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n2.\tCompiling with the current language version\n3.\tWhile evaluating request IRGenRequest(IR Generation for file \"/Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/Tests/KeyPathCrossModuleBugTests/KeyPathCrossModuleBugTests.swift\")\n4.\tWhile emitting IR SIL function \"@$s26KeyPathCrossModuleBugTests1fyyF\".\n for 'f()' (at /Users/stephen/Developer/pointfreeco/key-path-cross-module-bug/Tests/KeyPathCrossModuleBugTests/KeyPathCrossModuleBugTests.swift:3:1)\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\n0  swift-frontend           0x00000001082670fc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56\n1  swift-frontend           0x0000000108265350 llvm::sys::RunSignalHandlers() + 112\n2  swift-frontend           0x00000001082676c8 SignalHandler(int) + 292\n3  libsystem_platform.dylib 0x000000019bb5c184 _sigtramp + 56\n4  swift-frontend           0x00000001042eb54c swift::Mangle::ASTMangler::appendConcreteProtocolConformance(swift::ProtocolConformance const*, swift::GenericSignature) + 1020\n5  swift-frontend           0x00000001042eb8c0 swift::Mangle::ASTMangler::appendConcreteProtocolConformance(swift::ProtocolConformance const*, swift::GenericSignature) + 1904\n6  swift-frontend           0x000000010322bee0 swift::irgen::IRGenMangler::mangleSymbolNameForMangledConformanceAccessorString(char const*, swift::CanGenericSignature, swift::CanType, swift::ProtocolConformanceRef) + 208\n7  swift-frontend           0x00000001031a7a28 swift::irgen::IRGenModule::emitWitnessTableRefString(swift::CanType, swift::ProtocolConformanceRef, swift::GenericSignature, bool) + 416\n8  swift-frontend           0x000000010313eca4 void llvm::function_ref<void (swift::GenericRequirement)>::callback_fn<emitKeyPathComponent(swift::irgen::IRGenModule&, swift::irgen::ConstantStructBuilder&, swift::KeyPathPatternComponent const&, bool, swift::GenericEnvironment*, llvm::ArrayRef<swift::GenericRequirement>, swift::CanType, llvm::ArrayRef<KeyPathIndexOperand>, bool)::$_0>(long, swift::GenericRequirement) + 628\n9  swift-frontend           0x0000000103193c28 swift::irgen::enumerateGenericSignatureRequirements(swift::CanGenericSignature, llvm::function_ref<void (swift::GenericRequirement)> const&) + 220\n10 swift-frontend           0x0000000103136020 emitKeyPathComponent(swift::irgen::IRGenModule&, swift::irgen::ConstantStructBuilder&, swift::KeyPathPatternComponent const&, bool, swift::GenericEnvironment*, llvm::ArrayRef<swift::GenericRequirement>, swift::CanType, llvm::ArrayRef<KeyPathIndexOperand>, bool) + 1368\n11 swift-frontend           0x00000001031353a8 swift::irgen::IRGenModule::getAddrOfKeyPathPattern(swift::KeyPathPattern*, swift::SILLocation) + 2848\n12 swift-frontend           0x00000001032550d4 (anonymous namespace)::IRGenSILFunction::visitSILBasicBlock(swift::SILBasicBlock*) + 12648\n13 swift-frontend           0x0000000103250c50 (anonymous namespace)::IRGenSILFunction::emitSILFunction() + 13220\n14 swift-frontend           0x000000010324d408 swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) + 2088\n15 swift-frontend           0x0000000103099098 swift::irgen::IRGenerator::emitGlobalTopLevel(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) + 3364\n16 swift-frontend           0x0000000103204c44 swift::IRGenRequest::evaluate(swift::Evaluator&, swift::IRGenDescriptor) const + 4700\n17 swift-frontend           0x000000010324c954 swift::SimpleRequest<swift::IRGenRequest, swift::GeneratedModule (swift::IRGenDescriptor), (swift::RequestFlags)9>::evaluateRequest(swift::IRGenRequest const&, swift::Evaluator&) + 176\n18 swift-frontend           0x000000010320db3c swift::IRGenRequest::OutputType swift::Evaluator::getResultUncached<swift::IRGenRequest, swift::IRGenRequest::OutputType swift::evaluateOrFatal<swift::IRGenRequest>(swift::Evaluator&, swift::IRGenRequest)::'lambda'()>(swift::IRGenRequest const&, swift::IRGenRequest::OutputType swift::evaluateOrFatal<swift::IRGenRequest>(swift::Evaluator&, swift::IRGenRequest)::'lambda'()) + 784\n19 swift-frontend           0x0000000103207574 swift::performIRGeneration(swift::FileUnit*, swift::IRGenOptions const&, swift::TBDGenOptions const&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, llvm::StringRef, swift::PrimarySpecificPaths const&, llvm::StringRef, llvm::GlobalVariable**) + 180\n20 swift-frontend           0x0000000102c1685c generateIR(swift::IRGenOptions const&, swift::TBDGenOptions const&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, swift::PrimarySpecificPaths const&, llvm::StringRef, llvm::PointerUnion<swift::ModuleDecl*, swift::SourceFile*>, llvm::GlobalVariable*&, llvm::ArrayRef<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) + 156\n21 swift-frontend           0x0000000102c12088 performCompileStepsPostSILGen(swift::CompilerInstance&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, llvm::PointerUnion<swift::ModuleDecl*, swift::SourceFile*>, swift::PrimarySpecificPaths const&, int&, swift::FrontendObserver*) + 2176\n22 swift-frontend           0x0000000102c10f74 swift::performCompileStepsPostSema(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 984\n23 swift-frontend           0x0000000102c14228 performCompile(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 1680\n24 swift-frontend           0x0000000102c12f58 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 3572\n25 swift-frontend           0x0000000102b9a01c swift::mainEntry(int, char const**) + 3680\n26 dyld                     0x000000019b7a4274 start + 2840\n\nExpected behavior\nI expect it to compile just fine as it did in Swift 5.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nThis crash is affecting the swift-case-paths library.",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T16:43:19Z",
                                "updatedAt": "2024-09-20T16:43:43Z",
                                "number": 76607,
                                "title": "Swift 6 key path regression/crash (dynamic member lookup, protocol associated types)",
                                "url": "https://github.com/swiftlang/swift/issues/76607",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDNApI",
                                    "login": "stephencelis",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/658?u=e486e9bc7699a538a6cc1cbcc96adb38aa930f7b&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQxNzo0MzoxOSswMTowMM6XWYkc"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XW1XF",
                                "bodyText": "Description\nA capture before declaration compiler error turns into a compiler crash when using Swift 6, even though it works as expected when using Swift 5.\nReproduction\nvar block: (() -> Void)? = {\n    block = nil\n}\nStack dump\nStack dump:\n0.\tProgram arguments: /Users/vtasso/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/vtasso/Desktop/closure-capture/closure-capture/main.swift -emit-dependencies-path /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/main.d -emit-const-values-path /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/main.swiftconstvalues -emit-reference-dependencies-path /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/main.swiftdeps -serialize-diagnostics-path /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/main.dia -target arm64-apple-macos15.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Users/vtasso/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -I /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Products/Debug -F /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Products/Debug -no-color-diagnostics -enable-testing -g -debug-info-format=dwarf -dwarf-version=5 -module-cache-path /Users/vtasso/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -swift-version 6 -enforce-exclusivity=checked -Onone -D DEBUG -serialize-debugging-options -const-gather-protocols-file /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/closure-capture_const_extract_protocols.json -enable-experimental-feature DebugDescriptionMacro -enable-experimental-feature OpaqueTypeErasure -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/vtasso/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/vtasso/Desktop/closure-capture -resource-dir /Users/vtasso/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/vtasso/Desktop/closure-capture -Xcc -D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/vtasso/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/macosx15.0-24A336-efe2807ecaf113a25c446ccebe8eb5f7.sdkstatcache -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/closure-capture-generated-files.hmap -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/closure-capture-own-target-headers.hmap -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/closure-capture-all-target-headers.hmap -Xcc -iquote -Xcc /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/closure-capture-project-headers.hmap -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Products/Debug/include -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/DerivedSources-normal/arm64 -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/DerivedSources/arm64 -Xcc -I/Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/DerivedSources -Xcc -DDEBUG=1 -module-name closure_capture -frontend-parseable-output -disable-clang-spi -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Users/vtasso/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Users/vtasso/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Users/vtasso/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Users/vtasso/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Users/vtasso/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Users/vtasso/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -o /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Build/Intermediates.noindex/closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/main.o -index-unit-output-path /closure-capture.build/Debug/closure-capture.build/Objects-normal/arm64/main.o -index-store-path /Users/vtasso/Library/Developer/Xcode/DerivedData/closure-capture-crledjteddpcepfjrpwkymtekpcp/Index.noindex/DataStore -index-system-modules\n1.\tApple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n2.\tCompiling with the current language version\n3.\tWhile evaluating request ExecuteSILPipelineRequest(Run pipelines { Mandatory Diagnostic Passes + Enabling Optimization Passes } on SIL for closure_capture)\n4.\tWhile running pass #37 SILFunctionTransform \"TransferNonSendable\" on SILFunction \"@$s15closure_capture3fooyyF\".\n for 'foo()' (at /Users/vtasso/Desktop/closure-capture/closure-capture/main.swift:10:1)\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\n0  swift-frontend           0x0000000105b4b0fc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56\n1  swift-frontend           0x0000000105b49350 llvm::sys::RunSignalHandlers() + 112\n2  swift-frontend           0x0000000105b4b6c8 SignalHandler(int) + 292\n3  libsystem_platform.dylib 0x000000018b1ec184 _sigtramp + 56\n4  libsystem_pthread.dylib  0x000000018b1b6f70 pthread_kill + 288\n5  libsystem_c.dylib        0x000000018b0c3908 abort + 128\n6  swift-frontend           0x0000000101530aac swift::Partition::assignElement(swift::PartitionPrimitives::Element, swift::PartitionPrimitives::Element, bool) + 104\n7  swift-frontend           0x00000001010b8f88 swift::RegionAnalysisFunctionInfo::RegionAnalysisFunctionInfo(swift::SILFunction*, swift::PostOrderFunctionInfo*) + 14224\n8  swift-frontend           0x00000001010bbf14 swift::RegionAnalysis::newFunctionAnalysis(swift::SILFunction*) + 56\n9  swift-frontend           0x0000000101303040 (anonymous namespace)::TransferNonSendable::run() + 324\n10 swift-frontend           0x0000000101337554 swift::SILPassManager::runFunctionPasses(unsigned int, unsigned int) + 3448\n11 swift-frontend           0x0000000101333b38 swift::SILPassManager::executePassPipelinePlan(swift::SILPassPipelinePlan const&) + 11968\n12 swift-frontend           0x000000010136d084 swift::SimpleRequest<swift::ExecuteSILPipelineRequest, std::__1::tuple<> (swift::SILPipelineExecutionDescriptor), (swift::RequestFlags)1>::evaluateRequest(swift::ExecuteSILPipelineRequest const&, swift::Evaluator&) + 56\n13 swift-frontend           0x00000001013509e8 swift::ExecuteSILPipelineRequest::OutputType swift::Evaluator::getResultUncached<swift::ExecuteSILPipelineRequest, swift::ExecuteSILPipelineRequest::OutputType swift::evaluateOrFatal<swift::ExecuteSILPipelineRequest>(swift::Evaluator&, swift::ExecuteSILPipelineRequest)::'lambda'()>(swift::ExecuteSILPipelineRequest const&, swift::ExecuteSILPipelineRequest::OutputType swift::evaluateOrFatal<swift::ExecuteSILPipelineRequest>(swift::Evaluator&, swift::ExecuteSILPipelineRequest)::'lambda'()) + 412\n14 swift-frontend           0x0000000101353164 swift::runSILDiagnosticPasses(swift::SILModule&) + 612\n15 swift-frontend           0x00000001008cafc4 swift::CompilerInstance::performSILProcessing(swift::SILModule*) + 84\n16 swift-frontend           0x00000001004f5d68 performCompileStepsPostSILGen(swift::CompilerInstance&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, llvm::PointerUnion<swift::ModuleDecl*, swift::SourceFile*>, swift::PrimarySpecificPaths const&, int&, swift::FrontendObserver*) + 1376\n17 swift-frontend           0x00000001004f4f74 swift::performCompileStepsPostSema(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 984\n18 swift-frontend           0x00000001004f8228 performCompile(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 1680\n19 swift-frontend           0x00000001004f6f58 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 3572\n20 swift-frontend           0x000000010047e01c swift::mainEntry(int, char const**) + 3680\n21 dyld                     0x000000018ae34274 start + 2840\n\nExpected behavior\nCompiler should emit error Closure captures 'block' before it is declared as it does when using Swift 5.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nReproduced with Xcode 16.0 (16A242d) on macOS Sequoia (24A335).\nInterestingly, the snippet works fine if it's top level code. On my machine, the following compiles normally in both Swift versions:\n// main.swift\nvar block: (() -> Void)? = {\n    block = nil\n}\nOn the other hand, this yields a compiler error using Swift 5 and a compiler crash on Swift 6:\n// main.swift\nfunc foo() {\n    var block: (() -> Void)? = {\n        block = nil\n    }\n}",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T17:49:23Z",
                                "updatedAt": "2024-09-20T17:49:23Z",
                                "number": 76609,
                                "title": "Capture before declaration causes crash with SWIFT_VERSION=6.0 ",
                                "url": "https://github.com/swiftlang/swift/issues/76609",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAq5wkQ",
                                    "login": "vcoutasso",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/44986513?u=a281da9c4756cf4fd8223f927d74c702faabe04b&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQxODo0OToyMyswMTowMM6XW1XF"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XW3eM",
                                "bodyText": "Description\nSwitching on an enum whose generic is a tuple with a type pack crashes the compiler\nReproduction\nfunc fn<each T>(result: Result<(repeat each T), any Error>) {\n    switch result {\n    case .success, .failure:\n        break\n    }\n}\nStack Dump\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -interpret test.swift -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -new-driver-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -empty-abi-descriptor -resource-dir /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -module-name test -disable-clang-spi -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins\n1.\tApple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n2.\tCompiling with effective version 5.10\n3.\tWhile running user code \"test.swift\"\n4.\tWhile evaluating request IRGenRequest(IR Generation for module test)\n5.\tWhile emitting IR SIL function \"@$s4test2fn6resultys6ResultOyxxQp_ts5Error_pG_tRvzlF\".\n for 'fn(result:)' (at test.swift:1:1)\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\n0  swift-frontend           0x0000000107cb30fc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56\n1  swift-frontend           0x0000000107cb1350 llvm::sys::RunSignalHandlers() + 112\n2  swift-frontend           0x0000000107cb36c8 SignalHandler(int) + 292\n3  libsystem_platform.dylib 0x0000000190067584 _sigtramp + 56\n4  swift-frontend           0x0000000102c1ee40 swift::irgen::projectTupleElementAddress(swift::irgen::IRGenFunction&, swift::irgen::Address, swift::SILType, unsigned int) + 228\n5  swift-frontend           0x0000000102cb0d94 (anonymous namespace)::IRGenSILFunction::visitSILBasicBlock(swift::SILBasicBlock*) + 77352\n6  swift-frontend           0x0000000102c9cc50 (anonymous namespace)::IRGenSILFunction::emitSILFunction() + 13220\n7  swift-frontend           0x0000000102c99408 swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) + 2088\n8  swift-frontend           0x0000000102ae5098 swift::irgen::IRGenerator::emitGlobalTopLevel(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) + 3364\n9  swift-frontend           0x0000000102c50c44 swift::IRGenRequest::evaluate(swift::Evaluator&, swift::IRGenDescriptor) const + 4700\n10 swift-frontend           0x0000000102c98954 swift::SimpleRequest<swift::IRGenRequest, swift::GeneratedModule (swift::IRGenDescriptor), (swift::RequestFlags)9>::evaluateRequest(swift::IRGenRequest const&, swift::Evaluator&) + 176\n11 swift-frontend           0x0000000102c59b3c swift::IRGenRequest::OutputType swift::Evaluator::getResultUncached<swift::IRGenRequest, swift::IRGenRequest::OutputType swift::evaluateOrFatal<swift::IRGenRequest>(swift::Evaluator&, swift::IRGenRequest)::'lambda'()>(swift::IRGenRequest const&, swift::IRGenRequest::OutputType swift::evaluateOrFatal<swift::IRGenRequest>(swift::Evaluator&, swift::IRGenRequest)::'lambda'()) + 784\n12 swift-frontend           0x0000000102c52588 swift::performIRGeneration(swift::ModuleDecl*, swift::IRGenOptions const&, swift::TBDGenOptions const&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, llvm::StringRef, swift::PrimarySpecificPaths const&, llvm::ArrayRef<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, llvm::GlobalVariable**) + 2020\n13 swift-frontend           0x00000001026c2944 generateModule(swift::CompilerInstance const&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>) + 356\n14 swift-frontend           0x00000001026c36b8 swift::EagerSwiftMaterializationUnit::materialize(std::__1::unique_ptr<llvm::orc::MaterializationResponsibility, std::__1::default_delete<llvm::orc::MaterializationResponsibility>>) + 68\n15 swift-frontend           0x00000001026dc9a8 llvm::orc::MaterializationTask::run() + 44\n16 swift-frontend           0x00000001026e6994 void llvm::detail::UniqueFunctionBase<void, std::__1::unique_ptr<llvm::orc::Task, std::__1::default_delete<llvm::orc::Task>>>::CallImpl<void (*)(std::__1::unique_ptr<llvm::orc::Task, std::__1::default_delete<llvm::orc::Task>>)>(void*, std::__1::unique_ptr<llvm::orc::Task, std::__1::default_delete<llvm::orc::Task>>&) + 36\n17 swift-frontend           0x00000001026df244 llvm::orc::ExecutionSession::dispatchOutstandingMUs() + 296\n18 swift-frontend           0x00000001026e9120 llvm::orc::InProgressFullLookupState::complete(std::__1::unique_ptr<llvm::orc::InProgressLookupState, std::__1::default_delete<llvm::orc::InProgressLookupState>>) + 8220\n19 swift-frontend           0x00000001026d5b9c llvm::orc::ExecutionSession::OL_applyQueryPhase1(std::__1::unique_ptr<llvm::orc::InProgressLookupState, std::__1::default_delete<llvm::orc::InProgressLookupState>>, llvm::Error) + 2696\n20 swift-frontend           0x00000001026d50c8 llvm::orc::ExecutionSession::lookup(llvm::orc::LookupKind, std::__1::vector<std::__1::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::__1::allocator<std::__1::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>>> const&, llvm::orc::SymbolLookupSet, llvm::orc::SymbolState, llvm::unique_function<void (llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::orc::ExecutorSymbolDef, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr, void>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::orc::ExecutorSymbolDef>>>)>, std::__1::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr, void>>, llvm::DenseMapInfo<llvm::orc::JITDylib*, void>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr, void>>>> const&)>) + 996\n21 swift-frontend           0x00000001026df3d0 llvm::orc::ExecutionSession::lookup(std::__1::vector<std::__1::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::__1::allocator<std::__1::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>>> const&, llvm::orc::SymbolLookupSet, llvm::orc::LookupKind, llvm::orc::SymbolState, std::__1::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr, void>>, llvm::DenseMapInfo<llvm::orc::JITDylib*, void>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr, void>>>> const&)>) + 288\n22 swift-frontend           0x00000001026df780 llvm::orc::ExecutionSession::lookup(std::__1::vector<std::__1::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::__1::allocator<std::__1::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>>> const&, llvm::orc::SymbolStringPtr, llvm::orc::SymbolState) + 272\n23 swift-frontend           0x0000000102706970 llvm::orc::LLJIT::lookupLinkerMangled(llvm::orc::JITDylib&, llvm::orc::SymbolStringPtr) + 112\n24 swift-frontend           0x00000001026c4740 llvm::orc::LLJIT::lookup(llvm::orc::JITDylib&, llvm::StringRef) + 328\n25 swift-frontend           0x00000001026c05d0 swift::SwiftJIT::runMain(llvm::ArrayRef<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) + 136\n26 swift-frontend           0x00000001026ce000 swift::RunImmediately(swift::CompilerInstance&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, swift::IRGenOptions const&, swift::SILOptions const&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>&&) + 1028\n27 swift-frontend           0x000000010266259c processCommandLineAndRunImmediately(swift::CompilerInstance&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>&&, llvm::PointerUnion<swift::ModuleDecl*, swift::SourceFile*>, swift::FrontendObserver*, int&) + 536\n28 swift-frontend           0x000000010265e004 performCompileStepsPostSILGen(swift::CompilerInstance&, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>>, llvm::PointerUnion<swift::ModuleDecl*, swift::SourceFile*>, swift::PrimarySpecificPaths const&, int&, swift::FrontendObserver*) + 2044\n29 swift-frontend           0x000000010265d6e4 swift::performCompileStepsPostSema(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 2888\n30 swift-frontend           0x0000000102660714 performCompile(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 2940\n31 swift-frontend           0x000000010265ef58 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 3572\n32 swift-frontend           0x00000001025e601c swift::mainEntry(int, char const**) + 3680\n33 dyld                     0x000000018fcae0e0 start + 2360\n\nExpected behavior\nSuccessful compilation\nEnvironment\n$ swiftc --version\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\n\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T17:53:37Z",
                                "updatedAt": "2024-09-20T18:22:39Z",
                                "number": 76610,
                                "title": "Enum with tuple containing a type pack as its generic crashes compiler",
                                "url": "https://github.com/swiftlang/swift/issues/76610",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOBDchrg",
                                    "login": "alex-waldron",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/70721966?u=5b78dd67bef47a5aeae03900a4c5e6b878ceb53b&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQxODo1MzozNyswMTowMM6XW3eM"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XXFB2",
                                "bodyText": "Description\nCrash when instantiating a block of a block typedef defined with an obj-c lightweight generic type in an interface but in a function signature outside of that interface.\nMy hunch is that the generic type parameter is not known and somehow that passes type-checking but fails during SIL lowering. Example below\nReproduction\n#import <Foundation/Foundation.h>\n\nNS_ASSUME_NONNULL_BEGIN\n\n@interface AsyncJob <__covariant ObjectType>: NSObject\n\ntypedef void (^AsyncJobResultReceiver)(ObjectType _Nullable result, NSError *_Nullable error);\ntypedef void (^AsyncJobCancellationBlock)(void);\ntypedef void (^AsyncJobCancellationBlockReceiver)(AsyncJobCancellationBlock executeOnCancellation);\ntypedef void (^AsyncJobFulfiller)(AsyncJobResultReceiver resultReceiver, AsyncJobCancellationBlockReceiver onCancelled);\n\n/**\nCrate a new task that is fulfilled asynchronously. This is useful when needing to convert block based API to using AsyncJob or when using GCD to manage concurrency.\nIt's very important that the resultReceiver is always fulfilled unless the task is cancelled.\nexample:\n\n\nAsyncJob<NSDictionary *> networkTask = [AsyncJob<NSDictionary *> taskWithFutureResult:^(AsyncJobResultReceiver _Nonnull resultReceiver, AsyncJobCancellationBlockReceiver _Nonnull onCancelled) {\n    __auto_type token = [networker startAPIRequest:request\n                                    successHandler:^(NSHTTPURLResponse*_Nonnull response, NSDictionary *responseDict) {\n                                                      resultReceiver(responseDict, nil);\n                                                   }\n                                    failureHandler:^(NSHTTPURLResponse* _Nullable response, NSDictionary *_Nullable responseDict, NSError *_Nonnull error) {\n                                                      resultReceiver(nil, error);\n                                                   }];\n    onCancelled(^(void) {\n        [token cancel];\n    });\n}];\n*/\n\n+ (AsyncJob<ObjectType> *)taskWithFutureResult:(AsyncJobFulfiller)taskFulfiller;\n\n@end\n\nAsyncJob<NSNumber *> *doSomethingAndThenFuture(AsyncJobFulfiller fulfiller);\n\nNS_ASSUME_NONNULL_END\nThen in swift try and express a value of type AsyncJobFulfiller and the compiler crashes\nlet task = doSomethingAndThenFuture { _, _ in\n    print(\"45\")\n}\nStack dump\nStack dump:\n0.\tProgram arguments: /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/adamcmiel/Documents/IGAsyncTaskFulfiller/IGAsyncTaskFulfiller/ContentView.swift /Users/adamcmiel/Documents/IGAsyncTaskFulfiller/IGAsyncTaskFulfiller/IGAsyncTaskFulfillerApp.swift /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/DerivedSources/GeneratedAssetSymbols.swift -emit-dependencies-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/ContentView.d -emit-const-values-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/ContentView.swiftconstvalues -emit-reference-dependencies-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/ContentView.swiftdeps -serialize-diagnostics-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/ContentView.dia -emit-localized-strings -emit-localized-strings-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64 -target arm64-apple-ios18.0-simulator -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator18.0.sdk -I /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Products/Debug-iphonesimulator -F /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Products/Debug-iphonesimulator -no-color-diagnostics -enable-testing -g -debug-info-format=dwarf -dwarf-version=5 -module-cache-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -profile-generate -profile-coverage-mapping -swift-version 5 -enforce-exclusivity=checked -Onone -D DEBUG -serialize-debugging-options -const-gather-protocols-file /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/IGAsyncTaskFulfiller_const_extract_protocols.json -enable-experimental-feature DebugDescriptionMacro -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/adamcmiel/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/adamcmiel/Documents/IGAsyncTaskFulfiller -resource-dir /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -enable-anonymous-context-mangled-names -file-compilation-dir /Users/adamcmiel/Documents/IGAsyncTaskFulfiller -Xcc -D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/adamcmiel/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator18.0-22A348-30f40da314e8e34c6ab1d0c109cbb58d.sdkstatcache -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/IGAsyncTaskFulfiller-generated-files.hmap -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/IGAsyncTaskFulfiller-own-target-headers.hmap -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/IGAsyncTaskFulfiller-all-target-headers.hmap -Xcc -iquote -Xcc /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/IGAsyncTaskFulfiller-project-headers.hmap -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/DerivedSources-normal/arm64 -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/DerivedSources/arm64 -Xcc -I/Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/DerivedSources -Xcc -DDEBUG=1 -import-objc-header /Users/adamcmiel/Documents/IGAsyncTaskFulfiller/IGAsyncTaskFulfiller/IGAsyncTaskFulfiller-Bridging-Header.h -pch-output-dir /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/PrecompiledHeaders -pch-disable-validation -module-name IGAsyncTaskFulfiller -frontend-parseable-output -disable-clang-spi -target-sdk-version 18.0 -target-sdk-name iphonesimulator18.0 -external-plugin-path /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode_16.0.0_16A242_fb.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -o /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Build/Intermediates.noindex/IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/ContentView.o -index-unit-output-path /IGAsyncTaskFulfiller.build/Debug-iphonesimulator/IGAsyncTaskFulfiller.build/Objects-normal/arm64/ContentView.o -index-store-path /Users/adamcmiel/Library/Developer/Xcode/DerivedData/IGAsyncTaskFulfiller-gtbyrltosklfywdyqtnmqqclusdm/Index.noindex/DataStore -index-system-modules\n1.\tApple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n2.\tCompiling with effective version 5.10\n3.\tWhile evaluating request ASTLoweringRequest(Lowering AST to SIL for file \"/Users/adamcmiel/Documents/IGAsyncTaskFulfiller/IGAsyncTaskFulfiller/ContentView.swift\")\n4.\tWhile silgen emitFunction SIL function \"@$s20IGAsyncTaskFulfiller11ContentViewV11doSomethingyyF\".\n for 'doSomething()' (at /Users/adamcmiel/Documents/IGAsyncTaskFulfiller/IGAsyncTaskFulfiller/ContentView.swift:23:5)\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\n0  swift-frontend           0x0000000105f130fc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56\n1  swift-frontend           0x0000000105f11350 llvm::sys::RunSignalHandlers() + 112\n2  swift-frontend           0x0000000105f136c8 SignalHandler(int) + 292\n3  libsystem_platform.dylib 0x000000019b55e584 _sigtramp + 56\n4  swift-frontend           0x00000001011c8174 (anonymous namespace)::TypeClassifierBase<(anonymous namespace)::TypeClassifier, swift::Lowering::TypeLowering::RecursiveProperties>::visitAbstractTypeParamType(swift::CanType, swift::Lowering::AbstractionPattern, swift::Lowering::IsTypeExpansionSensitive_t) + 96\n5  swift-frontend           0x00000001011c8174 (anonymous namespace)::TypeClassifierBase<(anonymous namespace)::TypeClassifier, swift::Lowering::TypeLowering::RecursiveProperties>::visitAbstractTypeParamType(swift::CanType, swift::Lowering::AbstractionPattern, swift::Lowering::IsTypeExpansionSensitive_t) + 96\n6  swift-frontend           0x00000001011c7180 swift::CanTypeVisitor<(anonymous namespace)::TypeClassifier, swift::Lowering::TypeLowering::RecursiveProperties, swift::Lowering::AbstractionPattern, swift::Lowering::IsTypeExpansionSensitive_t>::visit(swift::CanType, swift::Lowering::AbstractionPattern, swift::Lowering::IsTypeExpansionSensitive_t) + 232\n7  swift-frontend           0x00000001011c7084 (anonymous namespace)::TypeClassifierBase<(anonymous namespace)::TypeClassifier, swift::Lowering::TypeLowering::RecursiveProperties>::visit(swift::CanType, swift::Lowering::AbstractionPattern, swift::Lowering::IsTypeExpansionSensitive_t) + 148\n8  swift-frontend           0x00000001011cca80 (anonymous namespace)::LowerType::visitAnyEnumType(swift::CanType, swift::Lowering::AbstractionPattern, swift::EnumDecl*, swift::Lowering::IsTypeExpansionSensitive_t) + 1256\n9  swift-frontend           0x00000001011c0604 (anonymous namespace)::TypeClassifierBase<(anonymous namespace)::LowerType, swift::Lowering::TypeLowering*>::visit(swift::CanType, swift::Lowering::AbstractionPattern, swift::Lowering::IsTypeExpansionSensitive_t) + 332\n10 swift-frontend           0x00000001011c10b8 swift::Lowering::TypeConverter::getTypeLoweringForLoweredType(swift::Lowering::AbstractionPattern, swift::CanType, swift::TypeExpansionContext, swift::Lowering::IsTypeExpansionSensitive_t) + 456\n11 swift-frontend           0x00000001011c0398 swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, swift::TypeExpansionContext) + 768\n12 swift-frontend           0x0000000101131790 (anonymous namespace)::DestructureInputs::visit(swift::ValueOwnership, bool, swift::Lowering::AbstractionPattern, swift::CanType, swift::ParameterTypeFlags) + 148\n13 swift-frontend           0x000000010113161c (anonymous namespace)::DestructureInputs::visit(swift::Lowering::AbstractionPattern, swift::AnyFunctionType::Param, bool) + 252\n14 swift-frontend           0x000000010113264c void llvm::function_ref<void (swift::Lowering::FunctionParamGenerator&)>::callback_fn<(anonymous namespace)::DestructureInputs::visitTopLevelParams(swift::Lowering::AbstractionPattern, swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, swift::SILExtInfoBuilder, bool&)::'lambda'(swift::Lowering::FunctionParamGenerator&)>(long, swift::Lowering::FunctionParamGenerator&) + 672\n15 swift-frontend           0x00000001010e2b34 swift::Lowering::AbstractionPattern::forEachFunctionParam(swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, bool, llvm::function_ref<void (swift::Lowering::FunctionParamGenerator&)>) const + 208\n16 swift-frontend           0x0000000101130bec (anonymous namespace)::DestructureInputs::destructure(swift::Lowering::AbstractionPattern, swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, swift::SILExtInfoBuilder, bool&) + 380\n17 swift-frontend           0x000000010112f11c getSILFunctionType(swift::Lowering::TypeConverter&, swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, (anonymous namespace)::Conventions const&, swift::ForeignInfo const&, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SubstitutionMap>, swift::ProtocolConformanceRef) + 2708\n18 swift-frontend           0x000000010112e658 getSILFunctionTypeForAbstractCFunction(swift::Lowering::TypeConverter&, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, std::__1::optional<swift::SILDeclRef>) + 772\n19 swift-frontend           0x0000000101125538 getNativeSILFunctionType(swift::Lowering::TypeConverter&, swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SubstitutionMap>, swift::ProtocolConformanceRef) + 284\n20 swift-frontend           0x00000001011d185c swift::Lowering::TypeConverter::computeLoweredRValueType(swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanType)::LoweredRValueTypeVisitor::visitAnyFunctionType(swift::CanTypeWrapper<swift::AnyFunctionType>) + 1120\n21 swift-frontend           0x00000001011c02d8 swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, swift::TypeExpansionContext) + 576\n22 swift-frontend           0x0000000101131790 (anonymous namespace)::DestructureInputs::visit(swift::ValueOwnership, bool, swift::Lowering::AbstractionPattern, swift::CanType, swift::ParameterTypeFlags) + 148\n23 swift-frontend           0x000000010113161c (anonymous namespace)::DestructureInputs::visit(swift::Lowering::AbstractionPattern, swift::AnyFunctionType::Param, bool) + 252\n24 swift-frontend           0x000000010113264c void llvm::function_ref<void (swift::Lowering::FunctionParamGenerator&)>::callback_fn<(anonymous namespace)::DestructureInputs::visitTopLevelParams(swift::Lowering::AbstractionPattern, swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, swift::SILExtInfoBuilder, bool&)::'lambda'(swift::Lowering::FunctionParamGenerator&)>(long, swift::Lowering::FunctionParamGenerator&) + 672\n25 swift-frontend           0x00000001010e2b34 swift::Lowering::AbstractionPattern::forEachFunctionParam(swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, bool, llvm::function_ref<void (swift::Lowering::FunctionParamGenerator&)>) const + 208\n26 swift-frontend           0x0000000101130bec (anonymous namespace)::DestructureInputs::destructure(swift::Lowering::AbstractionPattern, swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, swift::SILExtInfoBuilder, bool&) + 380\n27 swift-frontend           0x000000010112f11c getSILFunctionType(swift::Lowering::TypeConverter&, swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, (anonymous namespace)::Conventions const&, swift::ForeignInfo const&, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SubstitutionMap>, swift::ProtocolConformanceRef) + 2708\n28 swift-frontend           0x000000010112e658 getSILFunctionTypeForAbstractCFunction(swift::Lowering::TypeConverter&, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, std::__1::optional<swift::SILDeclRef>) + 772\n29 swift-frontend           0x0000000101125538 getNativeSILFunctionType(swift::Lowering::TypeConverter&, swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SubstitutionMap>, swift::ProtocolConformanceRef) + 284\n30 swift-frontend           0x00000001011d185c swift::Lowering::TypeConverter::computeLoweredRValueType(swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanType)::LoweredRValueTypeVisitor::visitAnyFunctionType(swift::CanTypeWrapper<swift::AnyFunctionType>) + 1120\n31 swift-frontend           0x00000001011c02d8 swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, swift::TypeExpansionContext) + 576\n32 swift-frontend           0x0000000101131790 (anonymous namespace)::DestructureInputs::visit(swift::ValueOwnership, bool, swift::Lowering::AbstractionPattern, swift::CanType, swift::ParameterTypeFlags) + 148\n33 swift-frontend           0x000000010113161c (anonymous namespace)::DestructureInputs::visit(swift::Lowering::AbstractionPattern, swift::AnyFunctionType::Param, bool) + 252\n34 swift-frontend           0x000000010113264c void llvm::function_ref<void (swift::Lowering::FunctionParamGenerator&)>::callback_fn<(anonymous namespace)::DestructureInputs::visitTopLevelParams(swift::Lowering::AbstractionPattern, swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, swift::SILExtInfoBuilder, bool&)::'lambda'(swift::Lowering::FunctionParamGenerator&)>(long, swift::Lowering::FunctionParamGenerator&) + 672\n35 swift-frontend           0x00000001010e2b34 swift::Lowering::AbstractionPattern::forEachFunctionParam(swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, bool, llvm::function_ref<void (swift::Lowering::FunctionParamGenerator&)>) const + 208\n36 swift-frontend           0x0000000101130bec (anonymous namespace)::DestructureInputs::destructure(swift::Lowering::AbstractionPattern, swift::ArrayRefView<swift::AnyFunctionType::Param, swift::AnyFunctionType::CanParam, swift::AnyFunctionType::CanParam::getFromParam(swift::AnyFunctionType::Param const&), true>, swift::SILExtInfoBuilder, bool&) + 380\n37 swift-frontend           0x000000010112f11c getSILFunctionType(swift::Lowering::TypeConverter&, swift::TypeExpansionContext, swift::Lowering::AbstractionPattern, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::SILExtInfoBuilder, (anonymous namespace)::Conventions const&, swift::ForeignInfo const&, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SILDeclRef>, std::__1::optional<swift::SubstitutionMap>, swift::ProtocolConformanceRef) + 2708\n38 swift-frontend           0x0000000101128fbc getUncachedSILFunctionTypeForConstant(swift::Lowering::TypeConverter&, swift::TypeExpansionContext, swift::SILDeclRef, swift::Lowering::TypeConverter::LoweredFormalTypes) + 1160\n39 swift-frontend           0x0000000101129c04 swift::Lowering::TypeConverter::getConstantInfo(swift::TypeExpansionContext, swift::SILDeclRef) + 192\n40 swift-frontend           0x00000001012f0d78 (anonymous namespace)::Callee::forDirect(swift::Lowering::SILGenFunction&, swift::SILDeclRef, swift::SubstitutionMap, swift::SILLocation, bool) + 172\n41 swift-frontend           0x0000000101303368 (anonymous namespace)::SILGenApply::visitDeclRefExpr(swift::DeclRefExpr*) + 2196\n42 swift-frontend           0x00000001012ed6c0 swift::Lowering::SILGenFunction::emitApplyExpr(swift::ApplyExpr*, swift::Lowering::SGFContext) + 352\n43 swift-frontend           0x000000010135b100 swift::Lowering::SILGenFunction::emitExprInto(swift::Expr*, swift::Lowering::Initialization*, std::__1::optional<swift::SILLocation>) + 128\n44 swift-frontend           0x0000000101346690 swift::Lowering::SILGenFunction::emitPatternBinding(swift::PatternBindingDecl*, unsigned int, bool) + 2016\n45 swift-frontend           0x000000010134d5c4 swift::ASTVisitor<swift::Lowering::SILGenFunction, void, void, void, void, void, void>::visit(swift::Decl*) + 140\n46 swift-frontend           0x00000001014160ec swift::ASTVisitor<(anonymous namespace)::StmtEmitter, void, void, void, void, void, void>::visit(swift::Stmt*) + 5756\n47 swift-frontend           0x000000010138dd4c swift::Lowering::SILGenFunction::emitFunction(swift::FuncDecl*) + 492\n48 swift-frontend           0x00000001012d98a0 swift::Lowering::SILGenModule::emitFunctionDefinition(swift::SILDeclRef, swift::SILFunction*) + 8420\n49 swift-frontend           0x00000001012da140 swift::Lowering::SILGenModule::emitOrDelayFunction(swift::SILDeclRef) + 216\n50 swift-frontend           0x00000001012d7770 swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*) + 364\n51 swift-frontend           0x000000010142da10 (anonymous namespace)::SILGenType::visitFuncDecl(swift::FuncDecl*) + 32\n52 swift-frontend           0x0000000101429fb8 (anonymous namespace)::SILGenType::emitType() + 424\n53 swift-frontend           0x00000001012d73a8 swift::ASTVisitor<swift::Lowering::SILGenModule, void, void, void, void, void, void>::visit(swift::Decl*) + 104\n54 swift-frontend           0x00000001012dddbc swift::ASTLoweringRequest::evaluate(swift::Evaluator&, swift::ASTLoweringDescriptor) const + 1804\n55 swift-frontend           0x00000001014146b0 swift::SimpleRequest<swift::ASTLoweringRequest, std::__1::unique_ptr<swift::SILModule, std::__1::default_delete<swift::SILModule>> (swift::ASTLoweringDescriptor), (swift::RequestFlags)9>::evaluateRequest(swift::ASTLoweringRequest const&, swift::Evaluator&) + 196\n56 swift-frontend           0x00000001012e2c98 swift::ASTLoweringRequest::OutputType swift::Evaluator::getResultUncached<swift::ASTLoweringRequest, swift::ASTLoweringRequest::OutputType swift::evaluateOrFatal<swift::ASTLoweringRequest>(swift::Evaluator&, swift::ASTLoweringRequest)::'lambda'()>(swift::ASTLoweringRequest const&, swift::ASTLoweringRequest::OutputType swift::evaluateOrFatal<swift::ASTLoweringRequest>(swift::Evaluator&, swift::ASTLoweringRequest)::'lambda'()) + 528\n57 swift-frontend           0x00000001008bcf34 swift::performCompileStepsPostSema(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 920\n58 swift-frontend           0x00000001008c0228 performCompile(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 1680\n59 swift-frontend           0x00000001008bef58 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 3572\n60 swift-frontend           0x000000010084601c swift::mainEntry(int, char const**) + 3680\n61 dyld                     0x000000019b1a3154 start + 2476\n\nExpected behavior\nFrom the stack trace we see\n::visitAbstractTypeParamType\n...\n::CanTypeVisitor\n...\n::LowerType::visitAnyEnumType\n\nSo my poorly informed guess is that AsyncJob.ObjectType is unable to be specialized in the call to the free function doSomethingAndThenFuture, and when lowering the abstract type parameter to SIL an invariant is reached but I don't see off the bat where in visitAbstractTypeParamType we're actually crashing.\nI would accept that this type is not usable from a decl outside of AsyncJob's interface but I would expect that that would fail at type checking, not crash during SIL lowering.\nEnvironment\nXcode 16 (16A242)\nswiftlang-6.0.0.9.10\nswift-version 5 (also crashes in 6 lang mode)\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T18:24:06Z",
                                "updatedAt": "2024-09-20T18:24:06Z",
                                "number": 76612,
                                "title": "Block typedef with generic parameter used in Swift causes a crash",
                                "url": "https://github.com/swiftlang/swift/issues/76612",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAqSpA",
                                    "login": "AdamCmiel",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/692900?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQxOToyNDowNiswMTowMM6XXFB2"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XYRfS",
                                "bodyText": "Why do floating-point types conform to TextOutputStreamable, but fixed-width integer types don't conform?\n\n\nFloatXX.write(to:) uses the extended format for NaN values. Should it use the same format as description?\n\n\nString.init(describing:) uses description rather than write(to:). Should the implementation be updated?\n\n\nlet value = Float64(nan: 0x10, signaling: false)\n\nvar textOutputStream = \"\"\nvalue.write(to: &textOutputStream)\n\ntextOutputStream           //-> \"nan(0x10)\" [issue 2]\n\"\\(value)\"                 //-> \"nan(0x10)\" [issue 2]\nprint(value)               //-> \"nan(0x10)\" [issue 2]\ndebugPrint(value)          //-> \"nan(0x10)\"\nvalue.debugDescription     //-> \"nan(0x10)\"\nString(reflecting: value)  //-> \"nan(0x10)\"\n\nvalue.description          //-> \"nan\"\nString(value)              //-> \"nan\"\nString(describing: value)  //-> \"nan\" [issue 3]",
                                "state": "OPEN",
                                "createdAt": "2024-09-20T21:42:04Z",
                                "updatedAt": "2024-09-22T00:23:15Z",
                                "number": 76618,
                                "title": "[stdlib] `TextOutputStreamable` issues",
                                "url": "https://github.com/swiftlang/swift/issues/76618",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAA2TJg",
                                    "login": "benrimmington",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/889638?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "User",
                                                "id": "U_kgDOAA2TJg",
                                                "login": "benrimmington",
                                                "avatarUrl": "https://avatars.githubusercontent.com/u/889638?v=4"
                                            },
                                            "cursor": "MQ"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVIs",
                                                "name": "standard library",
                                                "color": "5319E7",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-14T00:49:07Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfrc2",
                                                "name": "numerics",
                                                "color": "5319E7",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-01-12T22:21:54Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMFQyMjo0MjowNCswMTowMM6XYRfS"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XbJj8",
                                "bodyText": "Description\nCloning the repo with Xcode 16 selected and CMake 3.30.3 fails to build using the following steps:\ncmake -B build -GNinja\nninja -C build\n\nXcode Version 16.0 (16A242d)\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\ncmake version 3.30.3\nninja version: 1.12.1\nThe build fails in the same way on both:\nmain: 47b127f1c98a9f4ff593288c7ee0c6618a912e6b\nrelease/6.0.2: 3755346b1da0f611d3a8bd531831ac48c126b9d4\nExpected behavior\nSame build as swift build is produced\nActual behavior\nBacktrace in the linked gist below\nhttps://gist.github.com/ADKaster/8c62194d219a6f6599c2409d24e304e4\nIt appears to be a problem with swift-syntax?\n1.\tApple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n2.\tCompiling with effective version 5.10\n3.\tWhile evaluating request ExecuteSILPipelineRequest(Run pipelines { Non-Diagnostic Mandatory Optimizations, Serialization, Rest of Onone } on SIL for TestingMacros)\n4.\tWhile running pass swiftlang/swift-testing#396 SILFunctionTransform \"OwnershipModelEliminator\" on SILFunction \"@$s11SwiftSyntax9TokenKindO2eeoiySbAC_ACtFZ\".\n for '==(_:_:)' (in module 'SwiftSyntax')\n\nSteps to reproduce\ngit clone \ncd swift-testing\ncmake -B build -GNinja\ncmake --build build\nswift-testing version/commit hash\n47b127f1c98a9f4ff593288c7ee0c6618a912e6b\nSwift & OS version (output of swift --version ; uname -a)\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nDarwin Andrews-MacBook-Pro.local 24.0.0 Darwin Kernel Version 24.0.0: Mon Aug 12 20:52:12 PDT 2024; root:xnu-11215.1.10~2/RELEASE_ARM64_T6020 arm64",
                                "state": "OPEN",
                                "createdAt": "2024-09-21T03:08:02Z",
                                "updatedAt": "2024-10-14T17:24:44Z",
                                "number": 76631,
                                "title": "CMake build fails on macOS Sequoia with Xcode 16 release version",
                                "url": "https://github.com/swiftlang/swift/issues/76631",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAH__jg",
                                    "login": "ADKaster",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/8388494?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABPyX_Yw",
                                                "name": "SIL ownership",
                                                "color": "FBCA04",
                                                "createdAt": "2023-04-05T15:06:13Z",
                                                "updatedAt": "2023-04-05T15:06:13Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMVQwNDowODowMiswMTowMM6XbJj8"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XawE4",
                                "bodyText": "Description\nIndex stores produced by Swift 6 are missing related references for overridden external declarations.\nThis is a problematic change for Periphery and potentially other tools as it makes it harder to determine whether the overriding function overrides a function declared elsewhere in a project or one that is external.\nReproduction\nGiven the following snippet:\nimport UIKit\n\nclass ViewController: UIViewController {\n    override func traitCollectionDidChange(_ previousTraitCollection: UITraitCollection?) {\n        super.traitCollectionDidChange(previousTraitCollection)\n    }\n}\nWith Swift 6, the related reference for the overridden function is missing:\nDeclaration(class, 'ViewController', explicit, internal, [], [], [], [c:@M@PeripheryExample@objc(cs)ViewController], ViewController.swift:3:7)\n··Related(function.method.instance, 'traitCollectionDidChange(_:)', 'c:objc(pl)UITraitEnvironment(im)traitCollectionDidChange:', ViewController.swift:3:7)\n··Declaration(function.method.instance, 'traitCollectionDidChange(_:)', explicit, internal, [override], [], [], [c:@M@PeripheryExample@objc(cs)ViewController(im)traitCollectionDidChange:], ViewController.swift:4:19)\n····Reference(class, 'UITraitCollection', 'c:objc(cs)UITraitCollection', ViewController.swift:4:71)\n\nExpected behavior\nSwift 5.10 produces a related reference for the overridden function contained by the overriding function:\nDeclaration(class, 'ViewController', explicit, internal, [], [], [], [c:@M@PeripheryExample@objc(cs)ViewController], ViewController.swift:3:7)\n··Related(function.method.instance, 'traitCollectionDidChange(_:)', 'c:objc(pl)UITraitEnvironment(im)traitCollectionDidChange:', ViewController.swift:3:7)\n··Declaration(function.method.instance, 'traitCollectionDidChange(_:)', explicit, internal, [override], [], [], [c:@M@PeripheryExample@objc(cs)ViewController(im)traitCollectionDidChange:], ViewController.swift:4:19)\n····Related(function.method.instance, 'traitCollectionDidChange(_:)', 'c:objc(pl)UITraitEnvironment(im)traitCollectionDidChange:', ViewController.swift:4:19)\n····Reference(class, 'UITraitCollection', 'c:objc(cs)UITraitCollection', ViewController.swift:4:71)\n\nEnvironment\nswift-driver version: 1.90.11.1 Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)\nTarget: arm64-apple-macosx14.0\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-21T15:49:50Z",
                                "updatedAt": "2024-09-22T08:57:56Z",
                                "number": 76628,
                                "title": "Swift 6 index store missing related references for overriding decls",
                                "url": "https://github.com/swiftlang/swift/issues/76628",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDNvGs",
                                    "login": "ileitch",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/48235?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMVQxNjo0OTo1MCswMTowMM6XawE4"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xa3xM",
                                "bodyText": "Description\nTypes that conform to a protocol that defines a typealias sometimes inherit the typealias and other times to not inherit the typealias. It is hard to understand if this is a bug or if there is a logical reason. In any case, it would be ideal if the typealias is always inherited.\nReproduction\n\nClass FooA does not compile with error \"Reference to invalid type alias 'X' of type 'FooA'\".\nClass FooB compiles, and provides a workaround.\nClass FooC also compiles 🤷\n\nimport Foundation\n\nprotocol Foo {\n    associatedtype Bar\n    typealias X = (Bar) -> Void\n    func foo(x: X)\n}\n\nclass FooA<Bar>: Foo {\n    private var x: X?\n    func foo(x: X) {}\n}\n\nclass FooB<Bar>: Foo {\n    typealias X = (Bar) -> Void\n    private var x: X?\n    func foo(x: X) {}\n}\n\nclass FooC<Bar>: Foo {\n    func foo(x: X) {}\n}\nExpected behavior\nFooA should compile.\nEnvironment\nSwift 6\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-21T16:36:03Z",
                                "updatedAt": "2024-09-21T16:36:03Z",
                                "number": 76629,
                                "title": "Typealias defined on a protocol is not consistently inherited by conforming types",
                                "url": "https://github.com/swiftlang/swift/issues/76629",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOACaXmA",
                                    "login": "wtmoose",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/2529176?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMVQxNzozNjowMyswMTowMM6Xa3xM"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XbfAs",
                                "bodyText": "Description\nThis is a really weird bug and I think Swift is really getting confused. Please take a look at the reproduction repository, the code itself should (hopefully) be self-explanatory.\nReproduction\nhttps://github.com/nmggithub/swift-compiler-bug\nThe first commit is a broken build.\nThe second commit is a working build.\nSimply changing a filename fixes the build. There also doesn't seem to be any sense to what names work and what names don't.\nIn this case, naming both files EnumFoo.swift made the warning go away. But, if both files are named A.swift, the error re-appears.\nEDIT: I think I may have figured out the root cause?\nIt appears that the file holding the extensions for ClassA with an enum can be named anything. However, the name of the file extending ClassB must fall, alphabetically, between the name of file containing ClassA and the name of the file containing the problematic extension.\nExpected behavior\nBoth commits build.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\n\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-22T00:15:41Z",
                                "updatedAt": "2024-09-22T00:35:06Z",
                                "number": 76633,
                                "title": "\"extending a protocol composition is not supported;\" when working with shadowed enums (and specific filename order)",
                                "url": "https://github.com/swiftlang/swift/issues/76633",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAHdI7A",
                                    "login": "nmggithub",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/7817452?u=def2c2e8de97a48785d28e04898aed39d081c480&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMlQwMToxNTo0MSswMTowMM6XbfAs"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XcVS4",
                                "bodyText": "Description\nNo response\nReproduction\nfunc testtuple<Head, each Tail>(_ tuple: (Head, repeat each Tail)) {\n    print(tuple.0)\n}\nStack dump\nerror: compile command failed due to signal 5 (use -v to see invocation)\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/alex/Downloads/reversetuple/reversetuple/main.swift -target arm64-apple-macosx14.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk -color-diagnostics -new-driver-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -empty-abi-descriptor -resource-dir /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -module-name main -disable-clang-spi -target-sdk-version 15.0 -target-sdk-name macosx15.0 -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/swift/host/plugins#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/local/lib/swift/host/plugins#/Applications/Xcode-16.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/bin/swift-plugin-server -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -o /var/folders/wk/hh98fzb93zx5psgpmr9z116r0000gn/T/TemporaryDirectory.kDcE4a/main-1.o\n1.\tApple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\n2.\tCompiling with effective version 5.10\n3.\tWhile evaluating request ASTLoweringRequest(Lowering AST to SIL for file \"/Users/alex/Downloads/reversetuple/reversetuple/main.swift\")\n4.\tWhile silgen emitFunction SIL function \"@$s4main9testtuple5tupleyx_q_q_Qpt_tRv_r0_lF\".\n for 'testtuple(tuple:)' (at /Users/alex/Downloads/reversetuple/reversetuple/main.swift:2:1)\n #0 0x000000010a8bf0fc (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x10596f0fc)\n #1 0x000000010a8bd350 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x10596d350)\n #2 0x000000010a8bf6c8 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x10596f6c8)\n #3 0x0000000189d43584 (/usr/lib/system/libsystem_platform.dylib+0x180477584)\n #4 0x0000000105d6d514 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100e1d514)\n #5 0x0000000105cefdcc (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d9fdcc)\n #6 0x0000000105ceea74 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d9ea74)\n #7 0x0000000105cc61e8 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d761e8)\n #8 0x0000000105ce8658 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d98658)\n #9 0x0000000105d235e0 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100dd35e0)\n#10 0x0000000105d07100 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100db7100)\n#11 0x0000000105c69c50 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d19c50)\n#12 0x0000000105d2d804 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100ddd804)\n#13 0x0000000105d0a310 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100dba310)\n#14 0x0000000105ca8dec (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d58dec)\n#15 0x0000000105c96e74 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d46e74)\n#16 0x0000000105ca7730 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d57730)\n#17 0x0000000105cb35fc (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d635fc)\n#18 0x0000000105cb301c (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d6301c)\n#19 0x0000000105c9bc00 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d4bc00)\n#20 0x0000000105c9a18c (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d4a18c)\n#21 0x0000000105d0a9f8 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100dba9f8)\n#22 0x0000000105dc1ff8 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100e71ff8)\n#23 0x0000000105d39d4c (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100de9d4c)\n#24 0x0000000105c858a0 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d358a0)\n#25 0x0000000105c86140 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d36140)\n#26 0x0000000105c83770 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d33770)\n#27 0x0000000105c89dbc (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d39dbc)\n#28 0x0000000105dc06b0 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100e706b0)\n#29 0x0000000105c8ec98 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100d3ec98)\n#30 0x0000000105268f34 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x100318f34)\n#31 0x000000010526c228 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x10031c228)\n#32 0x000000010526af58 (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x10031af58)\n#33 0x00000001051f201c (/Applications/Xcode-16.0.0.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend+0x1002a201c)\n#34 0x000000018998a0e0\n\nExpected behavior\nAt least give a compiler error, as I'm still learning parameter packs so not sure if it should compile.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-22T07:57:27Z",
                                "updatedAt": "2024-09-22T07:57:27Z",
                                "number": 76635,
                                "title": "Parameter pack compiler crash",
                                "url": "https://github.com/swiftlang/swift/issues/76635",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAt1QA",
                                    "login": "alexito4",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/750912?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMlQwODo1NzoyNyswMTowMM6XcVS4"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XdlQP",
                                "bodyText": "Description\nI'm using name2 pattern at first. But then I thought I should refactor to use name1 pattern. But it will give me a strange compiler error.\nIs this an expected unsupported feature like swiftlang/swift-testing#202 or a bug here.\nstruct DemoKitTests {\n    @Test(\n        arguments: [\n            (type: Int.self, nominalName: \"Int\"),\n            (type: String.self, nominalName: \"String\"),\n        ]\n    )\n    func name1(type: Any.Type, nominalName: String) {\n        #expect(API.name(type) == nominalName)\n    }\n\n    @Test\n    func name2() {\n        #expect(API.name(Int.self) == \"Int\")\n        #expect(API.name(String.self) == \"String\")\n    }\n}\n\nExpected behavior\nCompile and test successfully.\nActual behavior\nCompile error on language mode v5. (On v6 it is Any is not conform to Sendable)\nxx.swift:17:4 Static method '__function(named:in:xcTestCompatibleSelector:displayName:traits:arguments:sourceLocation:parameters:testFunction:)' requires the types 'Any' and '(any Any.Type, String)' be equivalent\n\nSteps to reproduce\nSee description field.\nOr use the following demokit package\nDemoKit.zip\nswift-testing version/commit hash\nXcode 16.0.0\nSwift & OS version (output of swift --version ; uname -a)\nSwift 6 compiler with Swift 5 language mode",
                                "state": "OPEN",
                                "createdAt": "2024-09-22T14:20:37Z",
                                "updatedAt": "2024-10-09T19:34:02Z",
                                "number": 76637,
                                "title": "Any.Type issue with @Test",
                                "url": "https://github.com/swiftlang/swift/issues/76637",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOApswNw",
                                    "login": "Kyle-Ye",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/43724855?u=7397f8f00527dda3d69e5efc1e28a4dd1c2f4768&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABMIuTWQ",
                                                "name": "swift macro",
                                                "color": "E99695",
                                                "createdAt": "2023-02-02T19:38:48Z",
                                                "updatedAt": "2023-06-08T17:07:54Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMlQxNToyMDozNyswMTowMM6XdlQP"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XeEBw",
                                "bodyText": "If you run Serialization/rdar29694978.swift with the new driver it builds a PCH for %S/Inputs/rdar29694978.h, which crashes the compiler when attempting to emit a diagnostic:\nCommand Output (stderr):\n--\nAssertion failed: (LineOffset+l > 0 && \"bogus line offset\"), function getPresumedLineAndColumnForLoc, file SourceManager.h, line 460.\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\nStack dump:\n0.      Program arguments: /Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test -target arm64-apple-macosx13.0 -module-cache-path /Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/swift-test-results/arm64-apple-macosx13.0/clang-module-cache -completion-cache-path /Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/swift-test-results/arm64-apple-macosx13.0/completion-cache -swift-version 4 -print-module -module-to-print=Library -source-filename=x -I /Users/hamish/src/swift-dev/swift/validation-test/Serialization/Inputs/ -I /Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/validation-test-macosx-arm64/Serialization/Output/rdar29694978.swift.tmp\n1.      While reading from module 'Library', builder version '6.1(4.1.50)/Swift version 6.1-dev (LLVM 98742a35606e953, Swift e6e174cd2547859)', built from source against SDK 24A336, non-resilient, loaded from '/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/validation-test-macosx-arm64/Serialization/Output/rdar29694978.swift.tmp/Library.swiftmodule'\n #0 0x0000000109b957f8 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1052157f8)\n #1 0x0000000109b93c34 llvm::sys::RunSignalHandlers() (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x105213c34)\n #2 0x0000000109b95e44 SignalHandler(int) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x105215e44)\n #3 0x000000019fe6c184 (/usr/lib/system/libsystem_platform.dylib+0x180484184)\n #4 0x000000019fe36f70 (/usr/lib/system/libsystem_pthread.dylib+0x18044ef70)\n #5 0x000000019fd43908 (/usr/lib/system/libsystem_c.dylib+0x18035b908)\n #6 0x000000019fd42c1c (/usr/lib/system/libsystem_c.dylib+0x18035ac1c)\n #7 0x0000000109b9ccc0 swift::ast_scope::ASTScopeImpl::printRange(llvm::raw_ostream&) const (.cold.2) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10521ccc0)\n #8 0x0000000104e4381c swift::SourceManager::GetMessage(swift::SourceLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1004c381c)\n #9 0x0000000104e42f10 swift::PrintingDiagnosticConsumer::printDiagnostic(swift::SourceManager&, swift::DiagnosticInfo const&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1004c2f10)\n#10 0x0000000104e42980 swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::DiagnosticInfo const&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1004c2980)\n#11 0x0000000104c08f74 swift::DiagnosticEngine::emitDiagnostic(swift::Diagnostic const&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x100288f74)\n#12 0x0000000104c08a7c swift::DiagnosticEngine::handleDiagnostic(swift::Diagnostic&&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x100288a7c)\n#13 0x0000000104c06628 swift::InFlightDiagnostic::flush() (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x100286628)\n#14 0x0000000105ec7358 void llvm::function_ref<void (clang::FullSourceLoc, clang::DiagnosticsEngine::Level, llvm::StringRef)>::callback_fn<swift::ClangDiagnosticConsumer::HandleDiagnostic(clang::DiagnosticsEngine::Level, clang::Diagnostic const&)::$_0>(long, clang::FullSourceLoc, clang::DiagnosticsEngine::Level, llvm::StringRef) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x101547358)\n#15 0x0000000107ebf6d8 clang::DiagnosticRenderer::emitDiagnostic(clang::FullSourceLoc, clang::DiagnosticsEngine::Level, llvm::StringRef, llvm::ArrayRef<clang::CharSourceRange>, llvm::ArrayRef<clang::FixItHint>, llvm::PointerUnion<clang::Diagnostic const*, clang::StoredDiagnostic const*>) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10353f6d8)\n#16 0x0000000105ec6c24 swift::ClangDiagnosticConsumer::HandleDiagnostic(clang::DiagnosticsEngine::Level, clang::Diagnostic const&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x101546c24)\n#17 0x0000000109a21160 clang::DiagnosticIDs::ProcessDiag(clang::DiagnosticsEngine&) const (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1050a1160)\n#18 0x0000000109a1c144 clang::DiagnosticsEngine::EmitCurrentDiagnostic(bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10509c144)\n#19 0x0000000105ee379c clang::DiagnosticBuilder::~DiagnosticBuilder() (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10156379c)\n#20 0x000000010997e194 clang::Lexer::LexTokenInternal(clang::Token&, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x104ffe194)\n#21 0x000000010997c390 clang::Lexer::Lex(clang::Token&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x104ffc390)\n#22 0x00000001099de690 clang::Preprocessor::Lex(clang::Token&) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10505e690)\n#23 0x00000001099a3fbc clang::Preprocessor::PeekAhead(unsigned int) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x105023fbc)\n#24 0x0000000105ecebdc swift::ClangImporter::Implementation::importHeader(swift::ModuleDecl*, llvm::StringRef, swift::SourceLoc, bool, std::__1::unique_ptr<llvm::MemoryBuffer, std::__1::default_delete<llvm::MemoryBuffer>>, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10154ebdc)\n#25 0x0000000105ecf5a0 swift::ClangImporter::importHeader(llvm::StringRef, swift::ModuleDecl*, long long, long, llvm::StringRef, swift::SourceLoc) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10154f5a0)\n#26 0x0000000105e007f0 swift::ModuleFile::loadDependenciesForFileContext(swift::FileUnit const*, swift::SourceLoc, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1014807f0)\n#27 0x0000000105e01088 swift::ModuleFile::associateWithFileContext(swift::FileUnit*, swift::SourceLoc, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x101481088)\n#28 0x0000000105e7d9e4 swift::SerializedModuleLoaderBase::loadAST(swift::ModuleDecl&, std::__1::optional<swift::SourceLoc>, llvm::StringRef, llvm::StringRef, std::__1::unique_ptr<llvm::MemoryBuffer, std::__1::default_delete<llvm::MemoryBuffer>>, std::__1::unique_ptr<llvm::MemoryBuffer, std::__1::default_delete<llvm::MemoryBuffer>>, std::__1::unique_ptr<llvm::MemoryBuffer, std::__1::default_delete<llvm::MemoryBuffer>>, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1014fd9e4)\n#29 0x0000000105e80a38 swift::SerializedModuleLoaderBase::loadModule(swift::SourceLoc, swift::ImportPath::Module, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x101500a38)\n#30 0x0000000104a1be68 swift::ASTContext::getModule(swift::ImportPath::Module, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10009be68)\n#31 0x0000000104a1c4a0 swift::ASTContext::getModuleByName(llvm::StringRef) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10009c4a0)\n#32 0x00000001049c24ac doPrintModules(swift::CompilerInvocation const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>, swift::optionset::OptionSet<swift::ide::ModuleTraversal, unsigned int>, swift::PrintOptions const&, bool, bool) (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x1000424ac)\n#33 0x00000001049bae38 main (/Users/hamish/src/swift-dev/build/Release/swift-macosx-arm64/bin/swift-ide-test+0x10003ae38)\n#34 0x000000019fab4274\nFileCheck error: '<stdin>' is empty.\nFileCheck command line:  /Users/hamish/src/swift-dev/build/Release/llvm-macosx-arm64/bin/FileCheck --allow-unused-prefixes /Users/hamish/src/swift-dev/swift/validation-test/Serialization/rdar29694978.swift",
                                "state": "OPEN",
                                "createdAt": "2024-09-22T20:14:14Z",
                                "updatedAt": "2024-09-22T20:14:14Z",
                                "number": 76641,
                                "title": "`Serialization/rdar29694978.swift` crashes with new driver",
                                "url": "https://github.com/swiftlang/swift/issues/76641",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAOG9cw",
                                    "login": "hamishknight",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/14794099?u=73c432d30213a621d1d1345ad94d0b961f2ab4e6&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6xM-aw",
                                                "name": "clang importer",
                                                "color": "FBCA04",
                                                "createdAt": "2021-05-05T01:05:21Z",
                                                "updatedAt": "2023-05-04T19:27:33Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydUp_",
                                                "name": "compiler",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-07-14T23:43:07Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "NA"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yMlQyMToxNDoxNCswMTowMM6XeEBw"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XiSNv",
                                "bodyText": "Description\nSwift can crash at run time and print “Incorrect actor executor assumption” in the following situation (see code snippet below).\nIf I either remove the protocol, i.e. use the class directly, or if I use a normal actor instead of a global one, the app doesn't crash. Also, the crash only happens when compiled in Swift 6 mode.\nReproduction\nprotocol P {\n\tvar key: String { get }\n}\n\n@globalActor\nactor GA {\n\tstatic var shared = GA()\n}\n\n@GA\nclass A: P {\n\tlet key: String = \"SomeKey\"\n}\n\nlet p: P = A()\nprint(p.key) // <- SIGABRT here\nStack dump\n(This happens in Xcode, sorry I don't know where to take the stack dump from. The thread view in Xcode doesn't show much except the call site of the function where this happens.)\n\nExpected behavior\nShouldn't crash, or otherwise detect concurrency problem at compile time.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T11:27:26Z",
                                "updatedAt": "2024-09-23T11:56:17Z",
                                "number": 76647,
                                "title": "SIGABRT on calling a protocol method that is implemented in a global actor-tied class",
                                "url": "https://github.com/swiftlang/swift/issues/76647",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOABnq4Q",
                                    "login": "crontab",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/1698529?u=60871d89f4dd590bccfd650dd5964d3320ba0f06&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QxMjoyNzoyNiswMTowMM6XiSNv"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xiqyc",
                                "bodyText": "Description\nIn Swift 6, the code below results in a compiler error\nSending 'asdf' risks causing data races\n\nwhich is misleading, since the problem is not the variable asdf itself, but the object to which it is being assigned to, namely a, which is not Sendable.\nReproduction\nclass A {\n    var description = \"\"\n}\n\nclass B {\n    let a = A()\n    \n    func b() {\n        let asdf = \"\"\n        Task { @MainActor in\n            a.description = asdf // Sending 'asdf' risks causing data races\n        }\n    }\n}\nExpected behavior\nAn error like\nTask or actor isolated value cannot be sent\n\nThis is in fact the error displayed when changing\na.description = asdf\n\nto\na.description = \"asdf\"\n\nbut it is displayed at the line\nTask { @MainActor in\n\nInstead, it would be useful if the compiler indicated what particular value cannot be sent.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T12:13:08Z",
                                "updatedAt": "2024-09-24T15:56:00Z",
                                "number": 76648,
                                "title": "Misleading error \"Sending 'asdf' risks causing data races\" when var asdf is Sendable",
                                "url": "https://github.com/swiftlang/swift/issues/76648",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAZf7ZQ",
                                    "login": "nickasd",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/26737509?u=23a4cc48481e40fd22a6d89baafa5b806197851e&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "User",
                                                "id": "U_kgDOAAee3w",
                                                "login": "gottesmm",
                                                "avatarUrl": "https://avatars.githubusercontent.com/u/499423?u=5fb871c089dc47b1db41af291af106747074c2f3&v=4"
                                            },
                                            "cursor": "MQ"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QxMzoxMzowOCswMTowMM6Xiqyc"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xiytz",
                                "bodyText": "Description\nIt seems possible to call a MainActor isolated synchronous function from a non-isolated context in some cases without triggering a compile time error.\nIn the reproduction below, introducing the Task allowed my unsafe code to compile without errors.\nReproduction\nI can reproduce this issue with a CLI project created in Xcode 16, configured to use Swift 6 language mode.\nawait main()\n\n@MainActor\nfunc main() async {\n    let closure = {\n        doSomethingMainOnly()\n    }\n\n    await Task {\n        await backgroundFunc(closure)\n    }.value\n}\n\nfunc backgroundFunc(_ closure: () -> Void) async {\n    closure()\n}\n\n@MainActor\nfunc doSomethingMainOnly() {\n    MainActor.preconditionIsolated() // Precondition failed: Incorrect actor executor assumption; Expected 'UnownedSerialExecutor(executor: (Opaque Value))' executor.\n}\nExpected behavior\nI expected in Swift 6 that these sorts of issues are caught at compile time.\nEnvironment\nXcode 16.0 GM (16A242d)\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T12:27:56Z",
                                "updatedAt": "2024-09-23T12:27:56Z",
                                "number": 76649,
                                "title": "Able to call `@MainActor` isolated function from non-isolated context in Swift 6 language mode",
                                "url": "https://github.com/swiftlang/swift/issues/76649",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAmhCw",
                                    "login": "russellporter",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/631051?u=004f572c131baab3ac4cb0fdb0ac9e48a604e76f&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QxMzoyNzo1NiswMTowMM6Xiytz"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XkBmH",
                                "bodyText": "Description\nAccessing a std.string field on a cpp structure (or class) than inherits it from a base structure frees the memory of that string if it is longer than 22 characters.\nThis can be observed for example by passing it to String.init(_:) in Swift, or by trying to print it.\nThis will result in \"pointer being freed was not allocated\", and sometimes\"Heap corruption detected, free list is damaged at [hex value]\", or \"*** Incorrect guard value: [some value]\" being printed out before the program gets signal SIGABRT.\nReproduction\nCreate a swift package with a cpp target and an executable target.\nIn Cpp:\nnamespace cppmemtest{\n\ntemplate <class T = nullptr_t> struct res{\n\tstd::optional<T> result;\n\tstd::string err;\n};\n\nstruct test{\n\tstd::string sauce=\"\";\n\tint64_t id;\n\tstd::string type=\"\";\n\tvirtual ~test() = default;\n};\n\nstruct derivedTest1 : public test{\n\tstd::string data;\n\tconst std::string& getSauce() const {\n\t\treturn sauce;\n\t}\n\tstd::string getSauceCopy() const {\n\t\treturn sauce;\n\t}\n};\n\nstatic derivedTest1 minTest(){\n\tderivedTest1 x;\n\tx.data = \"this has 23 characters.\";\n\tx.sauce = \"this has 23 characters!\";\n\tx.id = int64_t(&x);\n\tx.type = \"this has 22 characters\";\n\treturn x;\n}\n\n}\nIn swift executable target import the cpp one and add::\nif true{\n\tlet res = cppmemtest.minTest()\n\tprint(\"id:\",res.id)\n\tprint(\"data:\",res.data)\n\tprint(\"type:\",res.type)\n\tprint(\"getSauce():\",res.__getSauceUnsafe().pointee)\n\tprint(\"getSauceCopy():\",res.getSauceCopy())\n\tprint(\"String(sauce):\",String(res.sauce))\n\tprint(\"getSauceCopy():\",res.getSauceCopy())\n\tprint(\"getSauce():\",res.__getSauceUnsafe().pointee)\n\tprint(\"sauce:\",res.sauce)\n\tprint(\"String(sauce):\",String(res.sauce))\n\tprint(\"getSauceCopy():\",res.getSauceCopy())\n\tprint(\"getSauce():\",res.__getSauceUnsafe().pointee)\n}\nStack dump\n(lldb) bt\n* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT\n    frame #0: 0x000000018ca115d0 libsystem_kernel.dylib`__pthread_kill + 8\n    frame #1: 0x000000010070abe8 libsystem_pthread.dylib`pthread_kill + 288\n    frame #2: 0x000000018c956a30 libsystem_c.dylib`abort + 180\n    frame #3: 0x000000018c866dc4 libsystem_malloc.dylib`malloc_vreport + 896\n    frame #4: 0x000000018c86a430 libsystem_malloc.dylib`malloc_report + 64\n    frame #5: 0x000000018c884494 libsystem_malloc.dylib`find_zone_and_free + 528\n    frame #6: 0x000000010000a680 stringtest`Swift.String.init(__C.std.__1.basic_string<CChar, char_traits<CChar>, allocator<CChar>>) -> Swift.String + 100\n  * frame #7: 0x00000001000019b4 stringtest`main at main.swift:26:25\n    frame #8: 0x000000018c6bf154 dyld`start + 2476\n\nExpected behavior\nAccessing the string does not free its memory.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T14:15:55Z",
                                "updatedAt": "2024-09-26T15:13:23Z",
                                "number": 76650,
                                "title": "Accessing a std.string on a base cpp class frees the string prematurely",
                                "url": "https://github.com/swiftlang/swift/issues/76650",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAONDBw",
                                    "login": "Drejzer",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/14893831?u=66a7fdc85ec66186d885fb6a43c43dd00e7121b1&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "User",
                                                "id": "U_kgDOADoCEg",
                                                "login": "egorzhdan",
                                                "avatarUrl": "https://avatars.githubusercontent.com/u/3801618?u=390e0d9f2950045a9e0e70dbc2711cd8642b8987&v=4"
                                            },
                                            "cursor": "MQ"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc536k7V",
                                                "name": "c++ interop",
                                                "color": "E99695",
                                                "createdAt": "2020-04-24T15:37:09Z",
                                                "updatedAt": "2023-01-16T19:17:54Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QxNToxNTo1NSswMTowMM6XkBmH"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xk2Rw",
                                "bodyText": "Description\nAfter updating to Swift 6, I am getting Swift Concurrency warnings, even with the Swift 5 language mode, for code that used to compile cleanly. For example, the example below produces this error:\nwarning: capture of 'buffer' with non-sendable type 'UnsafeMutableBufferPointer<NSNumber>' in a `@Sendable` closure; this is an error in the Swift 6 language mode\n        buffer[index] = NSNumber(value: index)\n        ^\nSwift.UnsafeMutableBufferPointer:1:23: note: generic struct 'UnsafeMutableBufferPointer' does not conform to the 'Sendable' protocol\n@frozen public struct UnsafeMutableBufferPointer<Element> : Copyable where Element : ~Copyable {\n\nReproduction\nI can reproduce this issue with a CLI project created in Xcode 16, configured to use Swift 5 language mode.\nlet count = 10\nlet array = Array(unsafeUninitializedCapacity: count) { (buffer, initializedCount) in\n    DispatchQueue.concurrentPerform(iterations: count) { index in\n        buffer[index] = NSNumber(value: index)\n    }\n    initializedCount = count\n}\nExpected behavior\nI expected this to compile without any warnings or errors using the Swift 5 mode of the Swift 6 compiler, as it did with Swift 5 and Xcode 15. DispatchQueue.concurrentPerform() is annotated with @preconcurrency, which I thought was supposed to suppress these sorts of warnings.\nEnvironment\nVersion 16.1 beta 2 (16B5014f)\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.11 clang-1600.0.26.2)\nTarget: x86_64-apple-macosx15.0\nAdditional information\nThe problem does not occur if I write it like this:\nlet count = 10\nlet array = Array(unsafeUninitializedCapacity: count) { (buffer, initializedCount) in\n    let closure = { (index: Int) in\n        buffer[index] = NSNumber(value: index)    \n    }\n    DispatchQueue.concurrentPerform(iterations: count, execute: closure)\n    initializedCount = count\n}\nI am also seeing similar issues calling DispatchQueue.main.sync() as well as these APIs:\n@MainActor func filePromiseProvider(_ filePromiseProvider: NSFilePromiseProvider, fileNameForType fileType: String) -> String\nnonisolated func filePromiseProvider(_ filePromiseProvider: NSFilePromiseProvider, writePromiseTo url: URL) async throws\nand can provide more info on that if you think these are separate issues.",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T15:33:05Z",
                                "updatedAt": "2024-09-23T16:53:41Z",
                                "number": 76652,
                                "title": "Error about non-`Sendable` type when using Swift 5 mode with @preconcurrency API",
                                "url": "https://github.com/swiftlang/swift/issues/76652",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAGspSQ",
                                    "login": "michaeljtsai",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/7022921?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydUp_",
                                                "name": "compiler",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-07-14T23:43:07Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVGs",
                                                "name": "type checker",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-01-18T14:05:16Z"
                                            },
                                            "cursor": "NA"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABMEF9Dg",
                                                "name": "expressions",
                                                "color": "E99695",
                                                "createdAt": "2023-02-01T16:46:01Z",
                                                "updatedAt": "2023-02-01T16:46:01Z"
                                            },
                                            "cursor": "NQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABdlY2Jw",
                                                "name": "Sendable",
                                                "color": "5319E7",
                                                "createdAt": "2023-12-03T00:20:50Z",
                                                "updatedAt": "2023-12-03T00:20:50Z"
                                            },
                                            "cursor": "Ng"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QxNjozMzowNSswMTowMM6Xk2Rw"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XmWyn",
                                "bodyText": "Description\nConforming a class to ExpressibleByNilLiteral, subclassing it, and then initializing an instance of that subclass with the nil literal creates a bugged instance that cannot be interacted with. At least when it's done through extensions like below.\nReproduction\nclass ClassA {\n  let value: Int\n  required init(value: Int) { self.value = value }\n}\nclass ClassB: ClassA {}\nprotocol Nilable: ClassA, ExpressibleByNilLiteral {}\nextension Nilable {\n  init(nilLiteral: ()) { self.init(value: 0) }\n}\nextension ClassA: Nilable {}\nlet instance1: ClassA = nil\nlet instance2: ClassB = nil\nprint(Mirror(reflecting: instance1).subjectType)\nprint(Mirror(reflecting: instance2).subjectType) // crashes\nExpected behavior\nClassB is printed from the final line.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\n\nAdditional information\nThis bug does not appear to be specific to Mirror, that's just the example I used. It seems to crash whenever actually doing something with instance2 beyond initialization.",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T18:58:24Z",
                                "updatedAt": "2024-09-23T18:59:38Z",
                                "number": 76654,
                                "title": "`ExpressibleByNilLiteral` breaks subclasses",
                                "url": "https://github.com/swiftlang/swift/issues/76654",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAHdI7A",
                                    "login": "nmggithub",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/7817452?u=def2c2e8de97a48785d28e04898aed39d081c480&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QxOTo1ODoyNCswMTowMM6XmWyn"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xmrwx",
                                "bodyText": "Motivation\nThis is prompted by a conversation in the Swift Open Source Slack organization. I posted a screenshot of this page, which reads:\n\nThe standard library integer and floating-point types are all valid types for IntegerLiteralType.\n\nI expressed my confusion at how floating-point types were valid for IntegerLiteralType. @grynspan explained to me what this protocol actually means, but also express that they agree that documentation could be improved.\nTo note, this documentation appears to have been taken from this comment (the link is specifically to the version of the file at the Swift 6.0 release tag). The documentation a bit above (at line 280), also mentions floating-point types. That section could also be a target for improvement.\nProposed solution\nTo be determined.\nAlternatives considered\nNo response\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-23T19:40:44Z",
                                "updatedAt": "2024-09-23T19:40:44Z",
                                "number": 76657,
                                "title": "`ExpressibleByIntegerLiteral` documentation could be improved.",
                                "url": "https://github.com/swiftlang/swift/issues/76657",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAHdI7A",
                                    "login": "nmggithub",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/7817452?u=def2c2e8de97a48785d28e04898aed39d081c480&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVAO",
                                                "name": "feature",
                                                "color": "64238b",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-01-27T17:47:59Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yM1QyMDo0MDo0NCswMTowMM6Xmrwx"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XqT6R",
                                "bodyText": "Description\nI used unique_ptr in a wrapper (which is bad because structs in Swift are copyable) and got:\nerror: copy of noncopyable typed value. This is a compiler bug. Please file a bug with a small example of the bug\n\nReproduction\nstruct Mesh {\n    var vertices: [MCVertex]\n    var indices: [UInt32]\n}\n\nextension ManifoldWrapper {\n    init(mesh: Mesh) {\n        self.init(mesh.vertices, mesh.vertices.count, mesh.indices, mesh.indices.count)\n    }\n}\n#import <Foundation/Foundation.h>\n#import <memory>\n\nstruct MCVertex { };\n\n/// Wrapper around a Manifold.\nstruct ManifoldWrapper {\n\n    ManifoldWrapper(const MCVertex* vertices, size_t vertexCount,\n                    const int* indices, size_t indexCount);\n\nprivate:\n\n    ManifoldWrapper();\n\n    struct Impl;\n    std::unique_ptr<Impl> _impl;\n};\nExpected behavior\nSome error not saying there's a compiler bug :)\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx14.0\nAdditional information\nComplete repro attached. Just open the Xcode project and compile\nCopyNocopyable.zip",
                                "state": "OPEN",
                                "createdAt": "2024-09-24T06:21:30Z",
                                "updatedAt": "2024-09-24T06:21:30Z",
                                "number": 76666,
                                "title": "\"Copy of noncopyable typed value\"",
                                "url": "https://github.com/swiftlang/swift/issues/76666",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAzVuA",
                                    "login": "wtholliday",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/841144?u=b1fb35dba845b4b9f06ae3296c7823609e523058&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNFQwNzoyMTozMCswMTowMM6XqT6R"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xtejq",
                                "bodyText": "Motivation\nIn Android, new API is guarded by API level. For instance, timespec_get() was introduced with Android API level 29. API level can be determined by checking the value of __ANDROID_API__ defined in the system header <android/api-level.h>.\nThis value is not visible to Swift, meaning that code that is conditionally dependent on the availability of some API needs to check for it (and provide a fallback path!) in C or C++ rather than in Swift.\nProposed solution\nI propose we teach the compiler, when targetting Android, to expose the API level similar to how the Swift language mode and compiler version are exposed:\nvar ts = timespec()\n#if _apiLevel(>=29)\ntimespec_get(&ts, TIME_UTC)\n#else\nclock_gettime(CLOCK_REALTIME, &ts)\n#endif\nreturn ts\nAlternatives considered\n\nExposing the API level as a macro would result in it being evaluated too late and the compiler wouldn't be able to ignore the API usage.\nExposing the API level as the de facto OS version (#available(Android 29, *)) would have a similar problem.\n\"Just do it in C\" is generally not the solution we want for Swift projects.\n\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-24T12:34:58Z",
                                "updatedAt": "2024-09-28T08:25:10Z",
                                "number": 76671,
                                "title": "Android API level needs to be visible in Swift",
                                "url": "https://github.com/swiftlang/swift/issues/76671",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAD9Cxw",
                                    "login": "grynspan",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/4145863?u=36e53f9db460785077127c7a955ffc0a819e6f2c&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVAO",
                                                "name": "feature",
                                                "color": "64238b",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-01-27T17:47:59Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydjEc",
                                                "name": "Android",
                                                "color": "188ca5",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-11-16T19:56:29Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNFQxMzozNDo1OCswMTowMM6Xtejq"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6Xv9IY",
                                "bodyText": "Description\nHi,\nI was able to crash the runtime well doing a HackerRank problem for a job interview. Because of confusing wording in the question, I was doing weird stuff with Int and Int32 which triggered the crash. I don't have the inputs but here is the code  and a screen shot of part of the backtrace.\nThanks,\nZane\nReproduction\n// Not great code please don't judge.\nfunc paths(grid: [[Int]]) -> Int {\n    var startingPoints: [Point] = []\n    for (x, row) in grid.enumerated() {\n        for (y, v) in row.enumerated() {\n            startingPoints.append(Point(x, y, v))\n        }\n    }\n    startingPoints.sort { l, r in\n        l.value > r.value\n    }\n    var _pathsFound: [[Int32]] = Array(\n        repeating:\n            Array(repeating: 0, count: grid[0].count),\n        count: grid.count)\n    for point in startingPoints {\n        let count = _findPaths(point)\n        _pathsFound[point.x][point.y] = count\n    }\n    var _count: Int32 = 0\n    for row in _pathsFound {\n        for c in row {\n            _count += c\n        }\n    }\n    return Int(_count)\n\n    func _findPaths(_ point: Point) -> Int32 {\n        var _count: Int32 = 0\n        let v = grid[point.x][point.y]\n        let neighbors: [Dir] = [.right, .left, .up, .down]\n        for neighbor in neighbors {\n            switch neighbor {\n            case .right:\n                let rx = point.x + 1\n                let ry = point.y\n                guard rx < grid.count else {\n                    continue\n                }\n                let rv = grid[rx][ry]\n                if rv > v {\n                    _count += _pathsFound[rx][ry] + 1\n                }\n            case .left:\n                let lx = point.x - 1\n                let ly = point.y\n                guard lx >= 0 else {\n                    continue\n                }\n                let lv = grid[lx][ly]\n                if lv > v {\n                    _count += _pathsFound[lx][ly] + 1\n                }\n            case .down:\n                let dx = point.x\n                let dy = point.y + 1\n                guard dy < grid[0].count else {\n                    continue\n                }\n                let dv = grid[dx][dy]\n                if dv > v {\n                    _count += _pathsFound[dx][dy] + 1\n                }\n            case .up:\n                let ux = point.x\n                let uy = point.y - 1\n                guard uy >= 0 else {\n                    continue\n                }\n                let uv = grid[ux][uy]\n                if uv > v {\n                    _count += _pathsFound[ux][uy] + 1\n                }\n            }\n        }\n        return _count\n    }\n}\n\nenum Dir {\n    case up\n    case down\n    case left\n    case right\n}\n\nstruct Point: Hashable, Equatable {\n\n    init(_ x: Int, _ y: Int, _ v: Int) {\n        self.x = x\n        self.y = y\n        self.value = v\n    }\n    var value: Int\n    let x: Int\n    let y: Int\n}\nExpected behavior\nProbably not crash at runtime. Maybe a compiler warning or error asking why are you doing this 🤷‍♂️.\nEnvironment\nWhatever HackerRank is running right now.\nAdditional information",
                                "state": "OPEN",
                                "createdAt": "2024-09-24T17:07:28Z",
                                "updatedAt": "2024-09-24T17:07:28Z",
                                "number": 76676,
                                "title": "Runtime crash from Int32 to Int constructing.",
                                "url": "https://github.com/swiftlang/swift/issues/76676",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAlQsSQ",
                                    "login": "zaneenders",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/39070793?u=ff5eb4a25976d67d72e533cb6ffc08298a05d007&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNFQxODowNzoyOCswMTowMM6Xv9IY"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6XwNfC",
                                "bodyText": "Description\nI'm not able to satisfy this protocol with an actor, but I can with a class. This seems wrong. And, the variant that constrains the type to an Actor produces a pretty surprising error message, both in content and location blamed.\nIn both cases, it seems like the function declaration is the issue, not what's going on in the body?\nReproduction\nclass NonSendable {}\n\nprotocol ReturnsThing: Actor {\n  func returnThing() async -> sending NonSendable\n}\n\nactor MyActor: ReturnsThing {\n  // error: task or actor isolated value cannot be sent\n  func returnThing() async -> sending NonSendable {\n    NonSendable()\n  }\n}\ntry 2, removing the Actor:\nclass NonSendable {}\n\nprotocol ReturnsThing {\n  func returnThing() async -> sending NonSendable\n}\n\nactor MyActor: ReturnsThing {\n  func returnThing() async -> sending NonSendable {\n  // error: non-sendable type 'NonSendable' returned by actor-isolated instance method 'returnThing()' satisfying protocol requirement cannot cross actor boundary\n    NonSendable()\n  }\n}\nExpected behavior\nIt seems like both of these should be fine...\nEnvironment\nApple Swift version 6.0.2-dev (LLVM 43d73cb0cc589f7, Swift aaa632c)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-24T17:45:40Z",
                                "updatedAt": "2024-09-24T17:45:40Z",
                                "number": 76677,
                                "title": "Actor is unable to return a sending value via a protocol conformance",
                                "url": "https://github.com/swiftlang/swift/issues/76677",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAFNSg",
                                    "login": "mattmassicotte",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/85322?u=686384227a6f3796b5c80ab6f310da95bdce973c&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNFQxODo0NTo0MCswMTowMM6XwNfC"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X0Jf5",
                                "bodyText": "Description\nShows the following error while also working as expected :\n\nFailed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)\nReproduction\nlet firstNumber: Int = 0\nlet lastNumber: Int = 10\nlet interval: Int = 2\nvar n = 0\n\n// This works fine when passed concrete values rather than a variable or constant\nfor i in stride(from: 0, to: 10, by: 1) {\n    print(i)\n}\n\n// This shows error\nfor i in stride(from: firstNumber, through: lastNumber, by: interval) {\n    print(i)\n    n += 1\n}\nprint(n)\nExpected behavior\nShould not show the error in xcode\nEnvironment\nswift 5\nXcode 15 and 16\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T06:12:24Z",
                                "updatedAt": "2024-09-25T06:24:45Z",
                                "number": 76689,
                                "title": "stride(for: through: by: ) shows this error in Xcode Playground  ",
                                "url": "https://github.com/swiftlang/swift/issues/76689",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOADHQRQ",
                                    "login": "arbab",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/3264581?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQwNzoxMjoyNCswMTowMM6X0Jf5"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X0xhX",
                                "bodyText": "Description\nWhen compiling a package that uses ConsoleKitTerminal from console-kit to set up the LoggingSystem from swift-log, Swift 6 seems to misplace the protocol witness tables for LoggerFragment of various fragments (all defined in ConsoleKitTerminal).\nReproduction\nPackage.swift:\n// swift-tools-version: 6.0\n// The swift-tools-version declares the minimum version of Swift required to build this package.\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"MyCLI\",\n    platforms: [\n        .macOS(.v15),\n    ],\n    dependencies: [\n        .package(url: \"https://github.com/apple/swift-log\", from: \"1.6.0\"),\n        .package(url: \"https://github.com/vapor/console-kit\", from: \"4.15.0\"),\n    ],\n    targets: [\n        // Targets are the basic building blocks of a package, defining a module or a test suite.\n        // Targets can depend on other targets in this package and products from dependencies.\n        .executableTarget(\n            name: \"MyCLI\",\n            dependencies: [\n                .product(name: \"Logging\", package: \"swift-log\"),\n                .product(name: \"ConsoleKitTerminal\", package: \"console-kit\"),\n            ]),\n    ]\n)\nSources/MyCLI.swift:\nimport Logging\nimport ConsoleKitTerminal\n\n@main\nstruct MyCLI {\n    static func main() {\n        LoggingSystem.bootstrap(\n            fragment: TimestampFragment(SystemTimestampSource())\n                .and(LabelFragment()\n                    .and(LevelFragment().separated(\" \").and(MessageFragment().separated(\" \")))\n                    .and(MetadataFragment().separated(\" \"))\n                    .and(SourceLocationFragment().separated(\" \").maxLevel(.debug))\n                    .separated(\" \")),\n            console: Terminal(),\n            level: .debug\n        )\n    }\n}\nOutput of swift build:\n$ swift build\nBuilding for debugging...\nerror: link command failed with exit code 1 (use -v to see invocation)\nUndefined symbols for architecture arm64:\n  \"protocol witness table for ConsoleKitTerminal.AndFragment<A, B> : ConsoleKitTerminal.LoggerFragment in ConsoleKitTerminal\", referenced from:\n      static MyCLI.MyCLI.main() -> () in MyCLI.swift.o\n  \"protocol witness table for ConsoleKitTerminal.SeparatorFragment<A> : ConsoleKitTerminal.LoggerFragment in ConsoleKitTerminal\", referenced from:\n      static MyCLI.MyCLI.main() -> () in MyCLI.swift.o\n  \"protocol witness table for ConsoleKitTerminal.TimestampFragment<A> : ConsoleKitTerminal.LoggerFragment in ConsoleKitTerminal\", referenced from:\n      static MyCLI.MyCLI.main() -> () in MyCLI.swift.o\n  \"protocol witness table for ConsoleKitTerminal.IfMaxLevelFragment<A> : ConsoleKitTerminal.LoggerFragment in ConsoleKitTerminal\", referenced from:\n      static MyCLI.MyCLI.main() -> () in MyCLI.swift.o\nld: symbol(s) not found for architecture arm64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n[6/8] Linking MyCLI\n\nExpected behavior\nA successful build.\nEnvironment\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nTarget: arm64-apple-macosx15.0\nAdditional information\nThis only happens when building with only supporting macOS 15. When downgrading to macOS 14 in the supported platforms array in Package.swift, the build succeeds.",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T07:33:36Z",
                                "updatedAt": "2024-10-19T10:36:37Z",
                                "number": 76690,
                                "title": "Swift 6 misplaces witness tables when compiling against macOS 15",
                                "url": "https://github.com/swiftlang/swift/issues/76690",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOABnItg",
                                    "login": "ffried",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/1689782?u=5756c7b6dd33ef88b9c03df496e5bb0bea27ad82&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQwODozMzozNiswMTowMM6X0xhX"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X47Yq",
                                "bodyText": "Description\nSimply checking out the latest main of swiftpm using the latest Windows ARM64 toolchain\nReproduction\nswift build\n\nStack dump\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\nStack dump:\n0.      Program arguments: C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\6.0.0+Asserts\\\\usr\\\\bin\\\\swift-frontend.exe -frontend -c -primary-file C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\checkouts\\\\swift-syntax\\\\Sources\\\\VersionMarkerModules\\\\SwiftSyntax510\\\\Empty.swift -emit-dependencies-path C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\aarch64-unknown-windows-msvc\\\\debug\\\\SwiftSyntax510.build\\\\Empty.d -emit-reference-dependencies-path C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\aarch64-unknown-windows-msvc\\\\debug\\\\SwiftSyntax510.build\\\\Empty.swiftdeps -target aarch64-unknown-windows-msvc -Xllvm -aarch64-use-tbi -disable-objc-interop -sdk C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Platforms\\\\6.0.0\\\\Windows.platform\\\\Developer\\\\SDKs\\\\Windows.sdk\\\\ -I C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\aarch64-unknown-windows-msvc\\\\debug\\\\Modules -I C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Platforms\\\\6.0.0\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows -I C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Platforms\\\\6.0.0\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\aarch64 -I C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Platforms\\\\6.0.0\\\\Windows.platform\\\\Developer\\\\Library\\\\Testing-development\\\\usr\\\\lib\\\\swift\\\\windows -color-diagnostics -enable-testing -g -debug-info-format=dwarf -dwarf-version=4 -module-cache-path C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\aarch64-unknown-windows-msvc\\\\debug\\\\ModuleCache -suppress-warnings -swift-version 6 -Onone -D SWIFT_PACKAGE -D DEBUG -empty-abi-descriptor -Xcc -working-directory -Xcc C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm -resource-dir C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\6.0.0+Asserts\\\\usr\\\\lib\\\\swift -enable-anonymous-context-mangled-names -file-compilation-dir C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm -Xcc -D_MT -Xcc -D_DLL -Xcc -Xclang -Xcc --dependent-lib=msvcrt -Xcc -gdwarf -module-name SwiftSyntax510 -in-process-plugin-server-path C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\6.0.0+Asserts\\\\usr\\\\bin\\\\SwiftInProcPluginServer.dll -plugin-path C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\6.0.0+Asserts\\\\usr\\\\bin -plugin-path C:\\\\Users\\\\dschaefer2\\\\AppData\\\\Local\\\\Programs\\\\Swift\\\\Toolchains\\\\6.0.0+Asserts\\\\usr\\\\local\\\\bin -parse-as-library -o C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\aarch64-unknown-windows-msvc\\\\debug\\\\SwiftSyntax510.build\\\\Empty.swift.o -index-store-path C:\\\\Users\\\\dschaefer2\\\\swift\\\\src\\\\swiftpm\\\\.build\\\\aarch64-unknown-windows-msvc\\\\debug\\\\index\\\\store -index-system-modules\n1.      Swift version 6.1-dev (LLVM 89ccf4b8a46135a, Swift ea23b8a02b1c8c8)\n2.      Compiling with the current language version\n3.      While evaluating request ExecuteSILPipelineRequest(Run pipelines { PrepareOptimizationPasses, EarlyModulePasses, HighLevel,Function+EarlyLoopOpt, HighLevel,Module+StackPromote } on SIL for _StringProcessing)\n4.      While running pass #14382 SILModuleTransform \"SerializeSILPass\".\n5.      While serializing 'maxReplacements' (at C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Platforms\\6.0.0\\Windows.platform\\Developer\\SDKs\\Windows.sdk\\usr\\lib\\swift\\windows\\_StringProcessing.swiftmodule\\aarch64-unknown-windows-msvc.swiftinterface:42:119)\nException Code: 0xC000001D\n #0 0x00007ffa4afe7708 swift_slowAlloc (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Runtimes\\6.0.0\\usr\\bin\\swiftCore.dll+0x297708)\n #1 0x00007ffa3fd52504 $s20_CompilerSwiftSyntax16BumpPtrAllocatorC8allocate9byteCount9alignmentSwSi_SitF (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\_CompilerSwiftSyntax.dll+0x2504)\n #2 0x00007ffa3fd52660 $s20_CompilerSwiftSyntax16BumpPtrAllocatorC8allocate_5countSryxGxm_SitlF (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\_CompilerSwiftSyntax.dll+0x2660)\n #3 0x00007ffa3fd67e5c $s20_CompilerSwiftSyntax07ParsingC5ArenaC18internSourceBufferySRys5UInt8VGAGF (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\_CompilerSwiftSyntax.dll+0x17e5c)\n #4 0x00007ffa467ca204 $s20_CompilerSwiftParser16LookaheadTrackerVACycfC (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\_CompilerSwiftParser.dll+0x3a204)\n #5 0x00007ffa467c6110 $s20_CompilerSwiftParser0C0V_19maximumNestingLevel15parseTransition5arena12swiftVersionACSRys5UInt8VG_SiSgAA016IncrementalParseH0CSg01_aB6Syntax07ParsingO5ArenaCSgAC0bK0OSgtcfC (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\_CompilerSwiftParser.dll+0x36110)\n #6 0x00007ff7708857ac (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x57ac)\n #7 0x00007ff770885728 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x5728)\n #8 0x00007ff77253d658 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1cbd658)\n #9 0x00007ff772316c34 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1a96c34)\n#10 0x00007ff7718f4100 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1074100)\n#11 0x00007ff7718e9f0c (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1069f0c)\n#12 0x00007ff7718fe410 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x107e410)\n#13 0x00007ff7718d3260 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1053260)\n#14 0x00007ff771901cc4 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x1081cc4)\n#15 0x00007ff7718fc404 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x107c404)\n#16 0x00007ff77191760c (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x109760c)\n#17 0x00007ff770ca33e0 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x4233e0)\n#18 0x00007ff770d22dd4 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x4a2dd4)\n#19 0x00007ff771a0da3c (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x118da3c)\n#20 0x00007ff7715cc704 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xd4c704)\n#21 0x00007ff771292a20 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa12a20)\n#22 0x00007ff77128f98c (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa0f98c)\n#23 0x00007ff77128fc70 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa0fc70)\n#24 0x00007ff77128f5ec (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa0f5ec)\n#25 0x00007ff7712a1f50 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa21f50)\n#26 0x00007ff77128a80c (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa0a80c)\n#27 0x00007ff77128fcf4 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0xa0fcf4)\n#28 0x00007ff77127d810 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x9fd810)\n#29 0x00007ff770ccabe4 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x44abe4)\n#30 0x00007ff770d23ea4 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x4a3ea4)\n#31 0x00007ff770d21ff4 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x4a1ff4)\n#32 0x00007ff770d0f02c (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x48f02c)\n#33 0x00007ff770d22cc8 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x4a2cc8)\n#34 0x00007ff77688e7f8 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x600e7f8)\n#35 0x00007ff77688e988 (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x600e988)\n#36 0x00007ff77688e4ac (C:\\Users\\dschaefer2\\AppData\\Local\\Programs\\Swift\\Toolchains\\6.0.0+Asserts\\usr\\bin\\swift-frontend.exe+0x600e4ac)\n#37 0x00007ffaa72dd52c (C:\\Windows\\System32\\ucrtbase.dll+0x2d52c)\n#38 0x00007ffaa88a2310 (C:\\Windows\\System32\\KERNEL32.DLL+0x12310)\n#39 0x00007ffaab195b2c (C:\\Windows\\SYSTEM32\\ntdll.dll+0x75b2c)\n\nExpected behavior\nAt least not a compiler crash.\nEnvironment\nSwift version 6.1-dev (LLVM 89ccf4b8a46135a, Swift ea23b8a)\nTarget: aarch64-unknown-windows-msvc\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T15:16:03Z",
                                "updatedAt": "2024-09-26T15:11:33Z",
                                "number": 76697,
                                "title": "Compiler crash Windows ARM64 building swiftpm",
                                "url": "https://github.com/swiftlang/swift/issues/76697",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOCfXapA",
                                    "login": "dschaefer2",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/167107236?u=d6550298d9de7251c6d7f3ebd5ee920a9856f9a8&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7yfjAb",
                                                "name": "crash",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-05-17T20:08:13Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mw"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQxNjoxNjowMyswMTowMM6X47Yq"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X5dEj",
                                "bodyText": "Motivation\nELF images are generally stripped of their section header info, which means it's impossible to find sections at runtime. Swift loves storing metadata in sections.\nProposed solution\nWhat if we used a \"note\" program header to contain a copy of this information? Program headers are not stripped, and \"note\" PHs are intended for arbitrary vendor use. We could imagine a program header whose desc field (i.e. payload) consists of a sequence of structures:\nstruct SectionInfo {\n  char name[24];\n  uintptr_t start;\n  uintptr_t stop;\n};\n\n// Compiler or linker then emits something equivalent to this C array:\nconst SectionInfo desc[] = {\n  { \"swift5_protocols\", &__start_swift5_protocols, &__stop_swift5_protocols },\n  { \"swift5_type_metadata\", &__start_swift5_swift5_type_metadata, &__stop_swift5_type_metadata },\n  ...\n};\nThis data is then discoverable statically or at runtime by tools that include elf.h. This solves the problem of @_section data being undiscoverable in ELF binaries and helps Swift Testing do runtime metadata lookup without relying on the runtime-internal function swift_enumerateAllMetadataSections().\nLinux, FreeBSD, and at least some other OSes that use ELF include dl_iterate_phdr() for enumerating program headers easily.\nAlternatives considered\nN/A\nAdditional information\nN/A",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T16:18:19Z",
                                "updatedAt": "2024-10-04T16:14:27Z",
                                "number": 76698,
                                "title": "ELF: Please provide a way to statically access Swift metadata without using a runtime call.",
                                "url": "https://github.com/swiftlang/swift/issues/76698",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAD9Cxw",
                                    "login": "grynspan",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/4145863?u=36e53f9db460785077127c7a955ffc0a819e6f2c&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydUpG",
                                                "name": "Linux",
                                                "color": "188ca5",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-11-16T19:32:26Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydUp_",
                                                "name": "compiler",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-07-14T23:43:07Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVAO",
                                                "name": "feature",
                                                "color": "64238b",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-01-27T17:47:59Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7y06FA",
                                                "name": "source tooling",
                                                "color": "234DF4",
                                                "createdAt": "2022-04-26T20:36:11Z",
                                                "updatedAt": "2023-02-28T04:30:22Z"
                                            },
                                            "cursor": "NA"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "NQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABTwxJDA",
                                                "name": "FreeBSD",
                                                "color": "188ca5",
                                                "createdAt": "2023-06-14T19:57:21Z",
                                                "updatedAt": "2024-09-12T15:57:32Z"
                                            },
                                            "cursor": "Ng"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQxNzoxODoxOSswMTowMM6X5dEj"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X52tH",
                                "bodyText": "Description\nIf an invalid -target-cpu option is specified, the diagnostic reported (from the clang importer) is -mcpu= which is not a valid swift compiler option. This might be confusing to a user which option they are to provide. Also, the list of available cpus is listed in duplicate.\nReproduction\n$ swiftc -target-cpu invalidcpu ~/hw.swift \n<unknown>:0: error: unsupported argument 'invalidcpu' to option '-mcpu='\n<unknown>:0: error: unknown target CPU 'invalidcpu'\n<unknown>:0: note: valid target CPU values are: cortex-a34, cortex-a35, cortex-a53, cortex-a55, cortex-a510, cortex-a57, cortex-a65, cortex-a65ae, cortex-a72, cortex-a73, cortex-a75, cortex-a76, cortex-a76ae, cortex-a77, cortex-a78, cortex-a78c, cortex-a710, cortex-a715, cortex-r82, cortex-x1, cortex-x1c, cortex-x2, cortex-x3, neoverse-e1, neoverse-n1, neoverse-n2, neoverse-512tvb, neoverse-v1, neoverse-v2, cyclone, apple-a7, apple-a8, apple-a9, apple-a10, apple-a11, apple-a12, apple-a13, apple-a14, apple-a15, apple-a16, apple-m1, apple-m2, apple-s4, apple-s5, exynos-m3, exynos-m4, exynos-m5, falkor, saphira, kryo, thunderx2t99, thunderx3t110, thunderx, thunderxt88, thunderxt81, thunderxt83, tsv110, a64fx, carmel, ampere1, ampere1a, grace\n<unknown>:0: error: unknown target CPU 'invalidcpu'\n<unknown>:0: note: valid target CPU values are: cortex-a34, cortex-a35, cortex-a53, cortex-a55, cortex-a510, cortex-a57, cortex-a65, cortex-a65ae, cortex-a72, cortex-a73, cortex-a75, cortex-a76, cortex-a76ae, cortex-a77, cortex-a78, cortex-a78c, cortex-a710, cortex-a715, cortex-r82, cortex-x1, cortex-x1c, cortex-x2, cortex-x3, neoverse-e1, neoverse-n1, neoverse-n2, neoverse-512tvb, neoverse-v1, neoverse-v2, cyclone, apple-a7, apple-a8, apple-a9, apple-a10, apple-a11, apple-a12, apple-a13, apple-a14, apple-a15, apple-a16, apple-m1, apple-m2, apple-s4, apple-s5, exynos-m3, exynos-m4, exynos-m5, falkor, saphira, kryo, thunderx2t99, thunderx3t110, thunderx, thunderxt88, thunderxt81, thunderxt83, tsv110, a64fx, carmel, ampere1, ampere1a, grace\n<unknown>:0: error: clang importer creation failed\n\n\nExpected behavior\nThe diagnostic should specify the swift option, and list the available cpus only once.\nEnvironment\nSwift version 6.1-dev (LLVM 98742a35606e953, Swift dacdb8f)\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T17:04:38Z",
                                "updatedAt": "2024-09-25T17:04:38Z",
                                "number": 76701,
                                "title": "Invalid -target-cpu options result in -mcpu= option error",
                                "url": "https://github.com/swiftlang/swift/issues/76701",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAUsXeA",
                                    "login": "rjmansfield",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/21698424?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQxODowNDozOCswMTowMM6X52tH"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X6Q4e",
                                "bodyText": "Description\nNo response\nReproduction\nswift repl\nExpected behavior\nThe REPL should launch\nEnvironment\n6.0.0-RELEASE\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T17:53:57Z",
                                "updatedAt": "2024-09-30T20:21:09Z",
                                "number": 76702,
                                "title": "REPL does not work in 6.0.0 release on Windows",
                                "url": "https://github.com/swiftlang/swift/issues/76702",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDN908",
                                    "login": "compnerd",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/63311?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVDb",
                                                "name": "Windows",
                                                "color": "188ca5",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-11-16T19:59:25Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydWZ8",
                                                "name": "REPL",
                                                "color": "661b69",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-04-25T06:59:31Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ygE6v",
                                                "name": "regression",
                                                "color": "B60205",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2022-11-20T13:35:36Z"
                                            },
                                            "cursor": "NA"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABWil8lA",
                                                "name": "lldb",
                                                "color": "bfdadc",
                                                "createdAt": "2023-08-03T20:32:48Z",
                                                "updatedAt": "2023-08-03T20:32:48Z"
                                            },
                                            "cursor": "NQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABaKav0g",
                                                "name": "swift 6.0",
                                                "color": "D93F0B",
                                                "createdAt": "2023-10-06T10:28:40Z",
                                                "updatedAt": "2024-02-20T23:37:26Z"
                                            },
                                            "cursor": "Ng"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQxODo1Mzo1NyswMTowMM6X6Q4e"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X66eF",
                                "bodyText": "Description\nI thought for sure this was going to work, but somewhat similar to #76677, it doesn't look like the sending is being taken into account here. The Sendability of the return type should not matter in this case, should it?\nReproduction\nfinal class DataModel {\n\tlet name: String\n\n\tinit(name: String) {\n\t\tself.name = name\n\t}\n}\n\nprotocol DataStoring {\n\tfunc loadModel() async -> sending DataModel\n}\n\n@MainActor\nfinal class DataStore: DataStoring {\n\tfunc loadModel() async -> sending DataModel {\n\t// error: non-sendable type 'DataModel' returned by main actor-isolated instance method 'loadModel()' satisfying protocol requirement cannot cross actor boundary\n\t\tDataModel(name: \"foo\")\n\t}\n}\nExpected behavior\nI'd expect this to compile without error.\nEnvironment\nApple Swift version 6.0.2-dev (LLVM 43d73cb0cc589f7, Swift aaa632c)\nTarget: arm64-apple-macosx14.0\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-25T19:15:22Z",
                                "updatedAt": "2024-09-25T20:31:08Z",
                                "number": 76710,
                                "title": "Despite the sending return, I cannot satisfy protocol with a sending return",
                                "url": "https://github.com/swiftlang/swift/issues/76710",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAFNSg",
                                    "login": "mattmassicotte",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/85322?u=686384227a6f3796b5c80ab6f310da95bdce973c&v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc6vz3mF",
                                                "name": "concurrency",
                                                "color": "E99695",
                                                "createdAt": "2021-04-26T18:26:13Z",
                                                "updatedAt": "2023-03-27T22:40:51Z"
                                            },
                                            "cursor": "Mg"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydVGs",
                                                "name": "type checker",
                                                "color": "FBCA04",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2024-01-18T14:05:16Z"
                                            },
                                            "cursor": "Mw"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc7ydhVO",
                                                "name": "conformances",
                                                "color": "E99695",
                                                "createdAt": "2021-10-30T11:07:53Z",
                                                "updatedAt": "2023-07-21T15:27:47Z"
                                            },
                                            "cursor": "NA"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABPyy7pA",
                                                "name": "declarations",
                                                "color": "E99695",
                                                "createdAt": "2023-04-05T17:06:38Z",
                                                "updatedAt": "2023-04-05T17:06:38Z"
                                            },
                                            "cursor": "NQ"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNVQyMDoxNToyMiswMTowMM6X66eF"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6X_Cjm",
                                "bodyText": "Description\nWhen you require a keypath to be Sendable using & Sendable and then make that Optional the compiler loses the ability to infer the root and the KeyPath always needs to be fully qualified to compile.\nReproduction\nimport Foundation\n\nstruct SendableTest: Sendable {\n    var text: String = \"Hello, World!\"\n}\n\nstruct Storage {\n    let keyPath: KeyPath<SendableTest, String> & Sendable\n    let optionalKeyPath: (KeyPath<SendableTest, String> & Sendable)?\n    let nonSendableKeyPath: KeyPath<SendableTest, String>\n    let nonSendableOptionalKeyPath: KeyPath<SendableTest, String>?\n}\n\nlet storage = Storage(\n    keyPath: \\.text,\n    // Cannot convert value of type 'KeyPath<_, String>'\n    // to expected argument type 'KeyPath<SendableTest, String>'\n    optionalKeyPath: \\.text,\n    nonSendableKeyPath: \\.text,\n    nonSendableOptionalKeyPath: \\.text\n)\nExpected behavior\nThe Root should be inferable even if the sendable keypath is optional.\nEnvironment\nTested with:\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)\nswift-driver version: 1.115 Apple Swift version 6.0 (swiftlang-6.0.0.9.11 clang-1600.0.26.2)\nAdditional information\nNo response",
                                "state": "OPEN",
                                "createdAt": "2024-09-26T08:27:08Z",
                                "updatedAt": "2024-10-14T12:42:49Z",
                                "number": 76716,
                                "title": "Compiler loses ability to infer Root of KeyPath when it is Optional and Sendable",
                                "url": "https://github.com/swiftlang/swift/issues/76716",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOBLTFjg",
                                    "login": "iwt-dahlborn",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/78955918?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNlQwOToyNzowOCswMTowMM6X_Cjm"
                        },
                        {
                            "node": {
                                "__typename": "Issue",
                                "id": "I_kwDOAqwwJc6YBLRp",
                                "bodyText": "Description\nWanted to test installation was correct. Used https://www.swift.org/getting-started/cli-swiftpm/ to create a new project.\nr:\\src\\swift\\cli>swift --version\nSwift version 6.0.1 (swift-6.0.1-RELEASE)\nTarget: x86_64-unknown-windows-msvc\n\nr:\\src\\swift\\cli>swift run cli\nerror: 'cli': Invalid manifest (compiled with: [\"R:\\\\dev\\\\swift\\\\Toolchains\\\\6.0.1+Asserts\\\\usr\\\\bin\\\\swiftc.exe\", \"-vfsoverlay\", \"C:\\\\Users\\\\moi\\\\AppData\\\\Local\\\\Temp\\\\TemporaryDirectory.wcrptd\\\\vfs.yaml\", \"-L\", \"R:\\\\dev\\\\swift\\\\Toolchains\\\\6.0.1+Asserts\\\\usr\\\\lib\\\\swift\\\\pm\\\\ManifestAPI\", \"-lPackageDescription\", \"-sdk\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\SDKs\\\\Windows.sdk\\\\\", \"-libc\", \"MD\", \"-I\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\", \"-I\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\x86_64\", \"-L\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\x86_64\", \"-I\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\Testing-development\\\\usr\\\\lib\\\\swift\\\\windows\", \"-L\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\Testing-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\x86_64\", \"-use-ld=lld\", \"-swift-version\", \"6\", \"-I\", \"R:\\\\dev\\\\swift\\\\Toolchains\\\\6.0.1+Asserts\\\\usr\\\\lib\\\\swift\\\\pm\\\\ManifestAPI\", \"-package-description-version\", \"6.0.0\", \"R:\\\\src\\\\swift\\\\cli\\\\Package.swift\", \"-o\", \"C:\\\\Users\\\\moi\\\\AppData\\\\Local\\\\Temp\\\\TemporaryDirectory.PH46iR\\\\cli-manifest.exe\"])\n<unknown>:0: error: could not find module '_Concurrency' for target 'x86_64-unknown-windows-msvc'; found: aarch64-unknown-windows-msvc, i686-unknown-windows-msvc, at: R:\\dev\\swift\\Platforms\\6.0.1\\Windows.platform\\Developer\\SDKs\\Windows.sdk\\usr\\lib\\swift\\windows\\_Concurrency.swiftmodule\nerror: 'cli': Invalid manifest (compiled with: [\"R:\\\\dev\\\\swift\\\\Toolchains\\\\6.0.1+Asserts\\\\usr\\\\bin\\\\swiftc.exe\", \"-vfsoverlay\", \"C:\\\\Users\\\\moi\\\\AppData\\\\Local\\\\Temp\\\\TemporaryDirectory.fFIohS\\\\vfs.yaml\", \"-L\", \"R:\\\\dev\\\\swift\\\\Toolchains\\\\6.0.1+Asserts\\\\usr\\\\lib\\\\swift\\\\pm\\\\ManifestAPI\", \"-lPackageDescription\", \"-sdk\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\SDKs\\\\Windows.sdk\\\\\", \"-libc\", \"MD\", \"-I\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\", \"-I\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\x86_64\", \"-L\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\XCTest-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\x86_64\", \"-I\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\Testing-development\\\\usr\\\\lib\\\\swift\\\\windows\", \"-L\", \"R:\\\\dev\\\\swift\\\\Platforms\\\\6.0.1\\\\Windows.platform\\\\Developer\\\\Library\\\\Testing-development\\\\usr\\\\lib\\\\swift\\\\windows\\\\x86_64\", \"-use-ld=lld\", \"-swift-version\", \"6\", \"-I\", \"R:\\\\dev\\\\swift\\\\Toolchains\\\\6.0.1+Asserts\\\\usr\\\\lib\\\\swift\\\\pm\\\\ManifestAPI\", \"-package-description-version\", \"6.0.0\", \"R:\\\\src\\\\swift\\\\cli\\\\Package.swift\", \"-o\", \"C:\\\\Users\\\\moi\\\\AppData\\\\Local\\\\Temp\\\\TemporaryDirectory.OL7TrA\\\\cli-manifest.exe\"])\n<unknown>:0: error: could not find module '_Concurrency' for target 'x86_64-unknown-windows-msvc'; found: aarch64-unknown-windows-msvc, i686-unknown-windows-msvc, at: R:\\dev\\swift\\Platforms\\6.0.1\\Windows.platform\\Developer\\SDKs\\Windows.sdk\\usr\\lib\\swift\\windows\\_Concurrency.swiftmodule\n\nReproduction\nSee above\nExpected behavior\nSuccessful compilation and a working executable file\nEnvironment\nr:\\src\\swift\\cli>swiftc -version\nSwift version 6.0.1 (swift-6.0.1-RELEASE)\nTarget: x86_64-unknown-windows-msvc\nAdditional information\nr:\\src\\swift\\cli>echo %PATH%\nR:\\apps\\7-Zip;r:\\apps\\tis\\ic4\\bin;C:\\Program Files\\Microsoft\\jdk-11.0.16.101-hotspot\\bin;R:\\apps\\vmware\\16.5\\bin\\;R:\\apps\\python;R:\\apps\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn\\;R:\\apps\\putty\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\WireGuard\\;R:\\apps\\nodejs\\;R:\\apps\\dev\\nrf\\bin\\;C:\\Program Files\\get_iplayer;r:\\src\\vcpkg;r:/dev/mcuex/ide/tools/bin/;R:/dev/mcuex/ide//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.7.v20230425-1502/jre/bin/server;R:/dev/mcuex/ide//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_17.0.7.v20230425-1502/jre/bin;r:\\apps\\flutter\\bin;R:\\apps\\openocd\\bin;R:\\apps\\cppcheck;R:\\apps\\renode\\bin;r:\\apps\\python\\Scripts;r:\\apps\\win10pcap\\Win32;r:\\apps\\rust\\.cargo\\bin;R:\\apps\\qemu\\8.0;R:\\apps\\dart-sdk\\bin;R:\\apps\\CMake\\bin;R:\\apps\\Git\\usr\\bin;R:\\apps\\Git\\mingw64\\bin;R:\\apps\\Git\\bin;R:\\apps\\bin;C:\\Users\\moi\\AppData\\Local\\Microsoft\\WindowsApps;r:\\apps\\vscode\\bin;C:\\Users\\moi\\AppData\\Local\\reflex\\bun\\bin;R:\\apps\\php;r:\\apps\\mc;R:\\dev\\swift\\Runtimes\\6.0.1\\usr\\bin\\;R:\\dev\\swift\\Toolchains\\6.0.1+Asserts\\usr\\bin\\;R:\\dev\\swift\\Tools\\6.0.1\\",
                                "state": "OPEN",
                                "createdAt": "2024-09-26T12:30:39Z",
                                "updatedAt": "2024-09-26T12:30:39Z",
                                "number": 76718,
                                "title": "Swift 6.0.1 Windows 10x64 Cannot build https://www.swift.org/getting-started/cli-swiftpm/ example",
                                "url": "https://github.com/swiftlang/swift/issues/76718",
                                "milestone": null,
                                "author": {
                                    "__typename": "User",
                                    "id": "U_kgDOAAxk2g",
                                    "login": "g40",
                                    "avatarUrl": "https://avatars.githubusercontent.com/u/812250?v=4"
                                },
                                "assignees": {
                                    "edges": [
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                },
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc4QhPEg",
                                                "name": "bug",
                                                "color": "B60205",
                                                "createdAt": "2015-10-23T21:15:07Z",
                                                "updatedAt": "2022-11-20T13:36:30Z"
                                            },
                                            "cursor": "MQ"
                                        },
                                        {
                                            "node": {
                                                "__typename": "Label",
                                                "id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                                                "name": "triage needed",
                                                "color": "ffffff",
                                                "createdAt": "2022-11-18T22:16:46Z",
                                                "updatedAt": "2022-11-29T01:56:23Z"
                                            },
                                            "cursor": "Mg"
                                        }
                                    ],
                                    "pageInfo": {
                                        "hasNextPage": false
                                    }
                                }
                            },
                            "cursor": "Y3Vyc29yOnYyOpK5MjAyNC0wOS0yNlQxMzozMDozOSswMTowMM6YBLRp"
                        }
                    ],
                    "pageInfo": {
                        "hasNextPage": true
                    }
                },
                "id": "R_kgDOAqwwJQ"
            }
        ],
        "rateLimit": {
            "limit": 5000,
            "cost": 1,
            "remaining": 4499,
            "resetAt": "2024-10-19T23:12:52Z",
            "nodeCount": 1051
        }
    }
}
